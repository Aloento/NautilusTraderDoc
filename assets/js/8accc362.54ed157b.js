"use strict";(globalThis.webpackChunknautilus_trader=globalThis.webpackChunknautilus_trader||[]).push([[7530],{4010:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"api_reference/backtest","title":"Backtest","description":"The backtest subpackage groups components relating to backtesting.","source":"@site/docs/api_reference/backtest.md","sourceDirName":"api_reference","slug":"/api_reference/backtest","permalink":"/api_reference/backtest","draft":false,"unlisted":false,"editUrl":"https://github.com/Aloento/NautilusTraderDoc/tree/main/docs/api_reference/backtest.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Analysis","permalink":"/api_reference/analysis"},"next":{"title":"Cache","permalink":"/api_reference/cache"}}');var r=i(7259),t=i(9087);const l={},d="Backtest",o={},a=[{value:"<em>class</em> BacktestDataClient",id:"class-backtestdataclient",level:3},{value:"degrade(self) \u2192 void",id:"degradeself--void",level:4},{value:"WARNING",id:"warning",level:4},{value:"dispose(self) \u2192 void",id:"disposeself--void",level:4},{value:"WARNING",id:"warning-1",level:4},{value:"fault(self) \u2192 void",id:"faultself--void",level:4},{value:"WARNING",id:"warning-2",level:4},{value:"<em>classmethod</em> fully_qualified_name(cls) \u2192 str",id:"classmethod-fully_qualified_namecls--str",level:4},{value:"id",id:"id",level:4},{value:"is_connected",id:"is_connected",level:4},{value:"is_degraded",id:"is_degraded",level:4},{value:"is_disposed",id:"is_disposed",level:4},{value:"is_faulted",id:"is_faulted",level:4},{value:"is_initialized",id:"is_initialized",level:4},{value:"is_running",id:"is_running",level:4},{value:"is_stopped",id:"is_stopped",level:4},{value:"request(self, RequestData request) \u2192 void",id:"requestself-requestdata-request--void",level:4},{value:"reset(self) \u2192 void",id:"resetself--void",level:4},{value:"WARNING",id:"warning-3",level:4},{value:"resume(self) \u2192 void",id:"resumeself--void",level:4},{value:"WARNING",id:"warning-4",level:4},{value:"shutdown_system(self, str reason=None) \u2192 void",id:"shutdown_systemself-str-reasonnone--void",level:4},{value:"start(self) \u2192 void",id:"startself--void",level:4},{value:"WARNING",id:"warning-5",level:4},{value:"state",id:"state",level:4},{value:"stop(self) \u2192 void",id:"stopself--void",level:4},{value:"WARNING",id:"warning-6",level:4},{value:"subscribe(self, SubscribeData command) \u2192 void",id:"subscribeself-subscribedata-command--void",level:4},{value:"subscribed_custom_data(self) \u2192 list",id:"subscribed_custom_dataself--list",level:4},{value:"trader_id",id:"trader_id",level:4},{value:"type",id:"type",level:4},{value:"unsubscribe(self, UnsubscribeData command) \u2192 void",id:"unsubscribeself-unsubscribedata-command--void",level:4},{value:"venue",id:"venue",level:4},{value:"<em>class</em> BacktestMarketDataClient",id:"class-backtestmarketdataclient",level:3},{value:"degrade(self) \u2192 void",id:"degradeself--void-1",level:4},{value:"WARNING",id:"warning-7",level:4},{value:"dispose(self) \u2192 void",id:"disposeself--void-1",level:4},{value:"WARNING",id:"warning-8",level:4},{value:"fault(self) \u2192 void",id:"faultself--void-1",level:4},{value:"WARNING",id:"warning-9",level:4},{value:"<em>classmethod</em> fully_qualified_name(cls) \u2192 str",id:"classmethod-fully_qualified_namecls--str-1",level:4},{value:"id",id:"id-1",level:4},{value:"is_connected",id:"is_connected-1",level:4},{value:"is_degraded",id:"is_degraded-1",level:4},{value:"is_disposed",id:"is_disposed-1",level:4},{value:"is_faulted",id:"is_faulted-1",level:4},{value:"is_initialized",id:"is_initialized-1",level:4},{value:"is_running",id:"is_running-1",level:4},{value:"is_stopped",id:"is_stopped-1",level:4},{value:"request(self, RequestData request) \u2192 void",id:"requestself-requestdata-request--void-1",level:4},{value:"request_bars(self, RequestBars request) \u2192 void",id:"request_barsself-requestbars-request--void",level:4},{value:"request_instrument(self, RequestInstrument request) \u2192 void",id:"request_instrumentself-requestinstrument-request--void",level:4},{value:"request_instruments(self, RequestInstruments request) \u2192 void",id:"request_instrumentsself-requestinstruments-request--void",level:4},{value:"request_order_book_snapshot(self, RequestOrderBookSnapshot request) \u2192 void",id:"request_order_book_snapshotself-requestorderbooksnapshot-request--void",level:4},{value:"request_quote_ticks(self, RequestQuoteTicks request) \u2192 void",id:"request_quote_ticksself-requestquoteticks-request--void",level:4},{value:"request_trade_ticks(self, RequestTradeTicks request) \u2192 void",id:"request_trade_ticksself-requesttradeticks-request--void",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-1",level:4},{value:"WARNING",id:"warning-10",level:4},{value:"resume(self) \u2192 void",id:"resumeself--void-1",level:4},{value:"WARNING",id:"warning-11",level:4},{value:"shutdown_system(self, str reason=None) \u2192 void",id:"shutdown_systemself-str-reasonnone--void-1",level:4},{value:"start(self) \u2192 void",id:"startself--void-1",level:4},{value:"WARNING",id:"warning-12",level:4},{value:"state",id:"state-1",level:4},{value:"stop(self) \u2192 void",id:"stopself--void-1",level:4},{value:"WARNING",id:"warning-13",level:4},{value:"subscribe(self, SubscribeData command) \u2192 void",id:"subscribeself-subscribedata-command--void-1",level:4},{value:"subscribe_bars(self, SubscribeBars command) \u2192 void",id:"subscribe_barsself-subscribebars-command--void",level:4},{value:"subscribe_funding_rates(self, SubscribeFundingRates command) \u2192 void",id:"subscribe_funding_ratesself-subscribefundingrates-command--void",level:4},{value:"subscribe_index_prices(self, SubscribeIndexPrices command) \u2192 void",id:"subscribe_index_pricesself-subscribeindexprices-command--void",level:4},{value:"subscribe_instrument(self, SubscribeInstrument command) \u2192 void",id:"subscribe_instrumentself-subscribeinstrument-command--void",level:4},{value:"subscribe_instrument_close(self, SubscribeInstrumentClose command) \u2192 void",id:"subscribe_instrument_closeself-subscribeinstrumentclose-command--void",level:4},{value:"subscribe_instrument_status(self, SubscribeInstrumentStatus command) \u2192 void",id:"subscribe_instrument_statusself-subscribeinstrumentstatus-command--void",level:4},{value:"subscribe_instruments(self, SubscribeInstruments command) \u2192 void",id:"subscribe_instrumentsself-subscribeinstruments-command--void",level:4},{value:"subscribe_mark_prices(self, SubscribeMarkPrices command) \u2192 void",id:"subscribe_mark_pricesself-subscribemarkprices-command--void",level:4},{value:"subscribe_order_book_deltas(self, SubscribeOrderBook command) \u2192 void",id:"subscribe_order_book_deltasself-subscribeorderbook-command--void",level:4},{value:"subscribe_order_book_snapshots(self, SubscribeOrderBook command) \u2192 void",id:"subscribe_order_book_snapshotsself-subscribeorderbook-command--void",level:4},{value:"subscribe_quote_ticks(self, SubscribeQuoteTicks command) \u2192 void",id:"subscribe_quote_ticksself-subscribequoteticks-command--void",level:4},{value:"subscribe_trade_ticks(self, SubscribeTradeTicks command) \u2192 void",id:"subscribe_trade_ticksself-subscribetradeticks-command--void",level:4},{value:"subscribed_bars(self) \u2192 list",id:"subscribed_barsself--list",level:4},{value:"subscribed_custom_data(self) \u2192 list",id:"subscribed_custom_dataself--list-1",level:4},{value:"subscribed_funding_rates(self) \u2192 list",id:"subscribed_funding_ratesself--list",level:4},{value:"subscribed_index_prices(self) \u2192 list",id:"subscribed_index_pricesself--list",level:4},{value:"subscribed_instrument_close(self) \u2192 list",id:"subscribed_instrument_closeself--list",level:4},{value:"subscribed_instrument_status(self) \u2192 list",id:"subscribed_instrument_statusself--list",level:4},{value:"subscribed_instruments(self) \u2192 list",id:"subscribed_instrumentsself--list",level:4},{value:"subscribed_mark_prices(self) \u2192 list",id:"subscribed_mark_pricesself--list",level:4},{value:"subscribed_order_book_deltas(self) \u2192 list",id:"subscribed_order_book_deltasself--list",level:4},{value:"subscribed_order_book_snapshots(self) \u2192 list",id:"subscribed_order_book_snapshotsself--list",level:4},{value:"subscribed_quote_ticks(self) \u2192 list",id:"subscribed_quote_ticksself--list",level:4},{value:"subscribed_trade_ticks(self) \u2192 list",id:"subscribed_trade_ticksself--list",level:4},{value:"trader_id",id:"trader_id-1",level:4},{value:"type",id:"type-1",level:4},{value:"unsubscribe(self, UnsubscribeData command) \u2192 void",id:"unsubscribeself-unsubscribedata-command--void-1",level:4},{value:"unsubscribe_bars(self, UnsubscribeBars command) \u2192 void",id:"unsubscribe_barsself-unsubscribebars-command--void",level:4},{value:"unsubscribe_funding_rates(self, UnsubscribeFundingRates command) \u2192 void",id:"unsubscribe_funding_ratesself-unsubscribefundingrates-command--void",level:4},{value:"unsubscribe_index_prices(self, UnsubscribeIndexPrices command) \u2192 void",id:"unsubscribe_index_pricesself-unsubscribeindexprices-command--void",level:4},{value:"unsubscribe_instrument(self, UnsubscribeInstrument command) \u2192 void",id:"unsubscribe_instrumentself-unsubscribeinstrument-command--void",level:4},{value:"unsubscribe_instrument_close(self, UnsubscribeInstrumentClose command) \u2192 void",id:"unsubscribe_instrument_closeself-unsubscribeinstrumentclose-command--void",level:4},{value:"unsubscribe_instrument_status(self, UnsubscribeInstrumentStatus command) \u2192 void",id:"unsubscribe_instrument_statusself-unsubscribeinstrumentstatus-command--void",level:4},{value:"unsubscribe_instruments(self, UnsubscribeInstruments command) \u2192 void",id:"unsubscribe_instrumentsself-unsubscribeinstruments-command--void",level:4},{value:"unsubscribe_mark_prices(self, UnsubscribeMarkPrices command) \u2192 void",id:"unsubscribe_mark_pricesself-unsubscribemarkprices-command--void",level:4},{value:"unsubscribe_order_book_deltas(self, UnsubscribeOrderBook command) \u2192 void",id:"unsubscribe_order_book_deltasself-unsubscribeorderbook-command--void",level:4},{value:"unsubscribe_order_book_snapshots(self, UnsubscribeOrderBook command) \u2192 void",id:"unsubscribe_order_book_snapshotsself-unsubscribeorderbook-command--void",level:4},{value:"unsubscribe_quote_ticks(self, UnsubscribeQuoteTicks command) \u2192 void",id:"unsubscribe_quote_ticksself-unsubscribequoteticks-command--void",level:4},{value:"unsubscribe_trade_ticks(self, UnsubscribeTradeTicks command) \u2192 void",id:"unsubscribe_trade_ticksself-unsubscribetradeticks-command--void",level:4},{value:"venue",id:"venue-1",level:4},{value:"<em>class</em> BacktestDataIterator",id:"class-backtestdataiterator",level:3},{value:"SEE ALSO",id:"see-also",level:4},{value:"add_data(self, data_name, list data, bool append_data=True)",id:"add_dataself-data_name-list-data-bool-append_datatrue",level:4},{value:"all_data(self) \u2192 dict",id:"all_dataself--dict",level:4},{value:"data(self, str data_name) \u2192 list",id:"dataself-str-data_name--list",level:4},{value:"init_data(self, str data_name, data_generator, bool append_data=True)",id:"init_dataself-str-data_name-data_generator-bool-append_datatrue",level:4},{value:"is_done(self) \u2192 bool",id:"is_doneself--bool",level:4},{value:"next(self) \u2192 Data",id:"nextself--data",level:4},{value:"remove_data(self, str data_name, bool complete_remove=False) \u2192 void",id:"remove_dataself-str-data_name-bool-complete_removefalse--void",level:4},{value:"set_index(self, str data_name, int index) \u2192 void",id:"set_indexself-str-data_name-int-index--void",level:4},{value:"<em>class</em> BacktestEngine",id:"class-backtestengine",level:3},{value:"add_actor(self, Actor actor: Actor) \u2192 None",id:"add_actorself-actor-actor-actor--none",level:4},{value:"add_actors(self, list actors: list[Actor]) \u2192 None",id:"add_actorsself-list-actors-listactor--none",level:4},{value:"add_data(self, list data, ClientId client_id=None, bool validate=True, bool sort=True) \u2192 None",id:"add_dataself-list-data-clientid-client_idnone-bool-validatetrue-bool-sorttrue--none",level:4},{value:"WARNING",id:"warning-14",level:4},{value:"add_data_iterator(self, str data_name, generator: Generator[list[Data], None, None], ClientId client_id=None) \u2192 None",id:"add_data_iteratorself-str-data_name-generator-generatorlistdata-none-none-clientid-client_idnone--none",level:4},{value:"add_exec_algorithm(self, ExecAlgorithm exec_algorithm: ExecAlgorithm) \u2192 None",id:"add_exec_algorithmself-execalgorithm-exec_algorithm-execalgorithm--none",level:4},{value:"add_exec_algorithms(self, list exec_algorithms: list[ExecAlgorithm]) \u2192 None",id:"add_exec_algorithmsself-list-exec_algorithms-listexecalgorithm--none",level:4},{value:"add_instrument(self, Instrument instrument) \u2192 None",id:"add_instrumentself-instrument-instrument--none",level:4},{value:"add_strategies(self, list strategies: list[Strategy]) \u2192 None",id:"add_strategiesself-list-strategies-liststrategy--none",level:4},{value:"add_strategy(self, Strategy strategy: Strategy) \u2192 None",id:"add_strategyself-strategy-strategy-strategy--none",level:4},{value:"add_venue(self, Venue venue: Venue, OmsType oms_type: OmsType, AccountType account_type: AccountType, list starting_balances: list[Money], Currency base_currency: Currency | None = None, default_leverage: Decimal | None = None, dict leverages: dict[InstrumentId, Decimal] | None = None, MarginModel margin_model: MarginModel = None, list modules: list[SimulationModule] | None = None, FillModel fill_model: FillModel | None = None, FeeModel fee_model: FeeModel | None = None, LatencyModel latency_model: LatencyModel | None = None, BookType book_type: BookType = BookType.L1_MBP, routing: bool = False, reject_stop_orders: bool = True, support_gtd_orders: bool = True, support_contingent_orders: bool = True, use_position_ids: bool = True, use_random_ids: bool = False, use_reduce_only: bool = True, use_message_queue: bool = True, bar_execution: bool = True, bar_adaptive_high_low_ordering: bool = False, trade_execution: bool = False, allow_cash_borrowing: bool = False, frozen_account: bool = False) \u2192 None",id:"add_venueself-venue-venue-venue-omstype-oms_type-omstype-accounttype-account_type-accounttype-list-starting_balances-listmoney-currency-base_currency-currency--none--none-default_leverage-decimal--none--none-dict-leverages-dictinstrumentid-decimal--none--none-marginmodel-margin_model-marginmodel--none-list-modules-listsimulationmodule--none--none-fillmodel-fill_model-fillmodel--none--none-feemodel-fee_model-feemodel--none--none-latencymodel-latency_model-latencymodel--none--none-booktype-book_type-booktype--booktypel1_mbp-routing-bool--false-reject_stop_orders-bool--true-support_gtd_orders-bool--true-support_contingent_orders-bool--true-use_position_ids-bool--true-use_random_ids-bool--false-use_reduce_only-bool--true-use_message_queue-bool--true-bar_execution-bool--true-bar_adaptive_high_low_ordering-bool--false-trade_execution-bool--false-allow_cash_borrowing-bool--false-frozen_account-bool--false--none",level:4},{value:"backtest_end",id:"backtest_end",level:4},{value:"backtest_start",id:"backtest_start",level:4},{value:"cache",id:"cache",level:4},{value:"change_fill_model(self, Venue venue, FillModel model) \u2192 None",id:"change_fill_modelself-venue-venue-fillmodel-model--none",level:4},{value:"clear_actors(self) \u2192 None",id:"clear_actorsself--none",level:4},{value:"clear_data(self) \u2192 None",id:"clear_dataself--none",level:4},{value:"clear_exec_algorithms(self) \u2192 None",id:"clear_exec_algorithmsself--none",level:4},{value:"clear_strategies(self) \u2192 None",id:"clear_strategiesself--none",level:4},{value:"data",id:"data",level:4},{value:"dispose(self) \u2192 None",id:"disposeself--none",level:4},{value:"dump_pickled_data(self) \u2192 bytes",id:"dump_pickled_dataself--bytes",level:4},{value:"end(self)",id:"endself",level:4},{value:"get_log_guard(self) \u2192 nautilus_pyo3.LogGuard | LogGuard | None",id:"get_log_guardself--nautilus_pyo3logguard--logguard--none",level:4},{value:"get_result(self)",id:"get_resultself",level:4},{value:"instance_id",id:"instance_id",level:4},{value:"iteration",id:"iteration",level:4},{value:"kernel",id:"kernel",level:4},{value:"list_venues(self) \u2192 list[Venue]",id:"list_venuesself--listvenue",level:4},{value:"load_pickled_data(self, bytes data) \u2192 None",id:"load_pickled_dataself-bytes-data--none",level:4},{value:"WARNING",id:"warning-15",level:4},{value:"logger",id:"logger",level:4},{value:"machine_id",id:"machine_id",level:4},{value:"portfolio",id:"portfolio",level:4},{value:"reset(self) \u2192 None",id:"resetself--none",level:4},{value:"run(self, start: datetime | str | int | None = None, end: datetime | str | int | None = None, str run_config_id: str | None = None, streaming: bool = False) \u2192 None",id:"runself-start-datetime--str--int--none--none-end-datetime--str--int--none--none-str-run_config_id-str--none--none-streaming-bool--false--none",level:4},{value:"run_config_id",id:"run_config_id",level:4},{value:"run_finished",id:"run_finished",level:4},{value:"run_id",id:"run_id",level:4},{value:"run_started",id:"run_started",level:4},{value:"set_default_market_data_client(self) \u2192 None",id:"set_default_market_data_clientself--none",level:4},{value:"sort_data(self) \u2192 None",id:"sort_dataself--none",level:4},{value:"trader",id:"trader",level:4},{value:"trader_id",id:"trader_id-2",level:4},{value:"<em>class</em> OrderMatchingEngine",id:"class-ordermatchingengine",level:3},{value:"accept_order(self, Order order) \u2192 void",id:"accept_orderself-order-order--void",level:4},{value:"account_type",id:"account_type",level:4},{value:"apply_fills(self, Order order, list fills, LiquiditySide liquidity_side, PositionId venue_position_id: PositionId | None = None, Position position: Position | None = None) \u2192 void",id:"apply_fillsself-order-order-list-fills-liquidityside-liquidity_side-positionid-venue_position_id-positionid--none--none-position-position-position--none--none--void",level:4},{value:"WARNING",id:"warning-16",level:4},{value:"best_ask_price(self) \u2192 Price",id:"best_ask_priceself--price",level:4},{value:"best_bid_price(self) \u2192 Price",id:"best_bid_priceself--price",level:4},{value:"book_type",id:"book_type",level:4},{value:"cache",id:"cache-1",level:4},{value:"cancel_order(self, Order order, bool cancel_contingencies=True) \u2192 void",id:"cancel_orderself-order-order-bool-cancel_contingenciestrue--void",level:4},{value:"determine_limit_price_and_volume(self, Order order) \u2192 list",id:"determine_limit_price_and_volumeself-order-order--list",level:4},{value:"determine_market_price_and_volume(self, Order order) \u2192 list",id:"determine_market_price_and_volumeself-order-order--list",level:4},{value:"expire_order(self, Order order) \u2192 void",id:"expire_orderself-order-order--void",level:4},{value:"fill_limit_order(self, Order order) \u2192 void",id:"fill_limit_orderself-order-order--void",level:4},{value:"fill_market_order(self, Order order) \u2192 void",id:"fill_market_orderself-order-order--void",level:4},{value:"fill_order(self, Order order, Price last_px, Quantity last_qty, LiquiditySide liquidity_side, PositionId venue_position_id: PositionId | None = None, Position position: Position | None = None) \u2192 void",id:"fill_orderself-order-order-price-last_px-quantity-last_qty-liquidityside-liquidity_side-positionid-venue_position_id-positionid--none--none-position-position-position--none--none--void",level:4},{value:"WARNING",id:"warning-17",level:4},{value:"get_book(self) \u2192 OrderBook",id:"get_bookself--orderbook",level:4},{value:"get_open_ask_orders(self) \u2192 list",id:"get_open_ask_ordersself--list",level:4},{value:"get_open_bid_orders(self) \u2192 list",id:"get_open_bid_ordersself--list",level:4},{value:"get_open_orders(self) \u2192 list",id:"get_open_ordersself--list",level:4},{value:"instrument",id:"instrument",level:4},{value:"iterate(self, uint64_t timestamp_ns, AggressorSide aggressor_side=AggressorSide.NO_AGGRESSOR) \u2192 void",id:"iterateself-uint64_t-timestamp_ns-aggressorside-aggressor_sideaggressorsideno_aggressor--void",level:4},{value:"market_status",id:"market_status",level:4},{value:"msgbus",id:"msgbus",level:4},{value:"oms_type",id:"oms_type",level:4},{value:"order_exists(self, ClientOrderId client_order_id) \u2192 bool",id:"order_existsself-clientorderid-client_order_id--bool",level:4},{value:"process_auction_book(self, OrderBook book) \u2192 void",id:"process_auction_bookself-orderbook-book--void",level:4},{value:"process_bar(self, Bar bar) \u2192 void",id:"process_barself-bar-bar--void",level:4},{value:"process_batch_cancel(self, BatchCancelOrders command, AccountId account_id) \u2192 void",id:"process_batch_cancelself-batchcancelorders-command-accountid-account_id--void",level:4},{value:"process_cancel(self, CancelOrder command, AccountId account_id) \u2192 void",id:"process_cancelself-cancelorder-command-accountid-account_id--void",level:4},{value:"process_cancel_all(self, CancelAllOrders command, AccountId account_id) \u2192 void",id:"process_cancel_allself-cancelallorders-command-accountid-account_id--void",level:4},{value:"process_instrument_close(self, InstrumentClose close) \u2192 void",id:"process_instrument_closeself-instrumentclose-close--void",level:4},{value:"process_modify(self, ModifyOrder command, AccountId account_id) \u2192 void",id:"process_modifyself-modifyorder-command-accountid-account_id--void",level:4},{value:"process_order(self, Order order, AccountId account_id) \u2192 void",id:"process_orderself-order-order-accountid-account_id--void",level:4},{value:"process_order_book_delta(self, OrderBookDelta delta) \u2192 void",id:"process_order_book_deltaself-orderbookdelta-delta--void",level:4},{value:"process_order_book_deltas(self, OrderBookDeltas deltas) \u2192 void",id:"process_order_book_deltasself-orderbookdeltas-deltas--void",level:4},{value:"process_order_book_depth10(self, OrderBookDepth10 depth) \u2192 void",id:"process_order_book_depth10self-orderbookdepth10-depth--void",level:4},{value:"process_quote_tick(self, QuoteTick tick) \u2192 void",id:"process_quote_tickself-quotetick-tick--void",level:4},{value:"process_status(self, MarketStatusAction status) \u2192 void",id:"process_statusself-marketstatusaction-status--void",level:4},{value:"process_trade_tick(self, TradeTick tick) \u2192 void",id:"process_trade_tickself-tradetick-tick--void",level:4},{value:"raw_id",id:"raw_id",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-2",level:4},{value:"set_fill_model(self, FillModel fill_model) \u2192 void",id:"set_fill_modelself-fillmodel-fill_model--void",level:4},{value:"trigger_stop_order(self, Order order) \u2192 void",id:"trigger_stop_orderself-order-order--void",level:4},{value:"update_instrument(self, Instrument instrument) \u2192 void",id:"update_instrumentself-instrument-instrument--void",level:4},{value:"update_order(self, Order order, Quantity qty, Price price=None, Price trigger_price=None, bool update_contingencies=True) \u2192 void",id:"update_orderself-order-order-quantity-qty-price-pricenone-price-trigger_pricenone-bool-update_contingenciestrue--void",level:4},{value:"venue",id:"venue-2",level:4},{value:"<em>class</em> SimulatedExchange",id:"class-simulatedexchange",level:3},{value:"account_type",id:"account_type-1",level:4},{value:"add_instrument(self, Instrument instrument) \u2192 void",id:"add_instrumentself-instrument-instrument--void",level:4},{value:"adjust_account(self, Money adjustment) \u2192 void",id:"adjust_accountself-money-adjustment--void",level:4},{value:"bar_adaptive_high_low_ordering",id:"bar_adaptive_high_low_ordering",level:4},{value:"bar_execution",id:"bar_execution",level:4},{value:"base_currency",id:"base_currency",level:4},{value:"best_ask_price(self, InstrumentId instrument_id) \u2192 Price",id:"best_ask_priceself-instrumentid-instrument_id--price",level:4},{value:"best_bid_price(self, InstrumentId instrument_id) \u2192 Price",id:"best_bid_priceself-instrumentid-instrument_id--price",level:4},{value:"book_type",id:"book_type-1",level:4},{value:"cache",id:"cache-2",level:4},{value:"default_leverage",id:"default_leverage",level:4},{value:"exec_client",id:"exec_client",level:4},{value:"fee_model",id:"fee_model",level:4},{value:"fill_model",id:"fill_model",level:4},{value:"get_account(self) \u2192 Account",id:"get_accountself--account",level:4},{value:"get_book(self, InstrumentId instrument_id) \u2192 OrderBook",id:"get_bookself-instrumentid-instrument_id--orderbook",level:4},{value:"get_books(self) \u2192 dict",id:"get_booksself--dict",level:4},{value:"get_matching_engine(self, InstrumentId instrument_id) \u2192 OrderMatchingEngine",id:"get_matching_engineself-instrumentid-instrument_id--ordermatchingengine",level:4},{value:"get_matching_engines(self) \u2192 dict",id:"get_matching_enginesself--dict",level:4},{value:"get_open_ask_orders(self, InstrumentId instrument_id=None) \u2192 list",id:"get_open_ask_ordersself-instrumentid-instrument_idnone--list",level:4},{value:"get_open_bid_orders(self, InstrumentId instrument_id=None) \u2192 list",id:"get_open_bid_ordersself-instrumentid-instrument_idnone--list",level:4},{value:"get_open_orders(self, InstrumentId instrument_id=None) \u2192 list",id:"get_open_ordersself-instrumentid-instrument_idnone--list",level:4},{value:"id",id:"id-2",level:4},{value:"initialize_account(self) \u2192 void",id:"initialize_accountself--void",level:4},{value:"instruments",id:"instruments",level:4},{value:"is_frozen_account",id:"is_frozen_account",level:4},{value:"latency_model",id:"latency_model",level:4},{value:"leverages",id:"leverages",level:4},{value:"margin_model",id:"margin_model",level:4},{value:"modules",id:"modules",level:4},{value:"msgbus",id:"msgbus-1",level:4},{value:"oms_type",id:"oms_type-1",level:4},{value:"process(self, uint64_t ts_now) \u2192 void",id:"processself-uint64_t-ts_now--void",level:4},{value:"process_bar(self, Bar bar) \u2192 void",id:"process_barself-bar-bar--void-1",level:4},{value:"process_instrument_close(self, InstrumentClose close) \u2192 void",id:"process_instrument_closeself-instrumentclose-close--void-1",level:4},{value:"process_instrument_status(self, InstrumentStatus data) \u2192 void",id:"process_instrument_statusself-instrumentstatus-data--void",level:4},{value:"process_order_book_delta(self, OrderBookDelta delta) \u2192 void",id:"process_order_book_deltaself-orderbookdelta-delta--void-1",level:4},{value:"process_order_book_deltas(self, OrderBookDeltas deltas) \u2192 void",id:"process_order_book_deltasself-orderbookdeltas-deltas--void-1",level:4},{value:"process_order_book_depth10(self, OrderBookDepth10 depth) \u2192 void",id:"process_order_book_depth10self-orderbookdepth10-depth--void-1",level:4},{value:"process_quote_tick(self, QuoteTick tick) \u2192 void",id:"process_quote_tickself-quotetick-tick--void-1",level:4},{value:"process_trade_tick(self, TradeTick tick) \u2192 void",id:"process_trade_tickself-tradetick-tick--void-1",level:4},{value:"register_client(self, BacktestExecClient client) \u2192 void",id:"register_clientself-backtestexecclient-client--void",level:4},{value:"reject_stop_orders",id:"reject_stop_orders",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-3",level:4},{value:"send(self, TradingCommand command) \u2192 void",id:"sendself-tradingcommand-command--void",level:4},{value:"set_fill_model(self, FillModel fill_model) \u2192 void",id:"set_fill_modelself-fillmodel-fill_model--void-1",level:4},{value:"set_latency_model(self, LatencyModel latency_model) \u2192 void",id:"set_latency_modelself-latencymodel-latency_model--void",level:4},{value:"starting_balances",id:"starting_balances",level:4},{value:"support_contingent_orders",id:"support_contingent_orders",level:4},{value:"support_gtd_orders",id:"support_gtd_orders",level:4},{value:"trade_execution",id:"trade_execution",level:4},{value:"update_instrument(self, Instrument instrument) \u2192 void",id:"update_instrumentself-instrument-instrument--void-1",level:4},{value:"use_message_queue",id:"use_message_queue",level:4},{value:"use_position_ids",id:"use_position_ids",level:4},{value:"use_random_ids",id:"use_random_ids",level:4},{value:"use_reduce_only",id:"use_reduce_only",level:4},{value:"<em>class</em> BacktestExecClient",id:"class-backtestexecclient",level:3},{value:"account_id",id:"account_id",level:4},{value:"account_type",id:"account_type-2",level:4},{value:"base_currency",id:"base_currency-1",level:4},{value:"batch_cancel_orders(self, BatchCancelOrders command) \u2192 void",id:"batch_cancel_ordersself-batchcancelorders-command--void",level:4},{value:"cancel_all_orders(self, CancelAllOrders command) \u2192 void",id:"cancel_all_ordersself-cancelallorders-command--void",level:4},{value:"cancel_order(self, CancelOrder command) \u2192 void",id:"cancel_orderself-cancelorder-command--void",level:4},{value:"degrade(self) \u2192 void",id:"degradeself--void-2",level:4},{value:"WARNING",id:"warning-18",level:4},{value:"dispose(self) \u2192 void",id:"disposeself--void-2",level:4},{value:"WARNING",id:"warning-19",level:4},{value:"fault(self) \u2192 void",id:"faultself--void-2",level:4},{value:"WARNING",id:"warning-20",level:4},{value:"<em>classmethod</em> fully_qualified_name(cls) \u2192 str",id:"classmethod-fully_qualified_namecls--str-2",level:4},{value:"generate_account_state(self, list balances, list margins, bool reported, uint64_t ts_event, dict info=None) \u2192 void",id:"generate_account_stateself-list-balances-list-margins-bool-reported-uint64_t-ts_event-dict-infonone--void",level:4},{value:"generate_order_accepted(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) \u2192 void",id:"generate_order_acceptedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-uint64_t-ts_event--void",level:4},{value:"generate_order_cancel_rejected(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, str reason, uint64_t ts_event) \u2192 void",id:"generate_order_cancel_rejectedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-str-reason-uint64_t-ts_event--void",level:4},{value:"generate_order_canceled(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) \u2192 void",id:"generate_order_canceledself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-uint64_t-ts_event--void",level:4},{value:"generate_order_expired(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) \u2192 void",id:"generate_order_expiredself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-uint64_t-ts_event--void",level:4},{value:"generate_order_filled(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, PositionId venue_position_id: PositionId | None, TradeId trade_id, OrderSide order_side, OrderType order_type, Quantity last_qty, Price last_px, Currency quote_currency, Money commission, LiquiditySide liquidity_side, uint64_t ts_event, dict info=None) \u2192 void",id:"generate_order_filledself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-positionid-venue_position_id-positionid--none-tradeid-trade_id-orderside-order_side-ordertype-order_type-quantity-last_qty-price-last_px-currency-quote_currency-money-commission-liquidityside-liquidity_side-uint64_t-ts_event-dict-infonone--void",level:4},{value:"generate_order_modify_rejected(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, str reason, uint64_t ts_event) \u2192 void",id:"generate_order_modify_rejectedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-str-reason-uint64_t-ts_event--void",level:4},{value:"generate_order_rejected(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, str reason, uint64_t ts_event, bool due_post_only=False) \u2192 void",id:"generate_order_rejectedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-str-reason-uint64_t-ts_event-bool-due_post_onlyfalse--void",level:4},{value:"generate_order_submitted(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, uint64_t ts_event) \u2192 void",id:"generate_order_submittedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-uint64_t-ts_event--void",level:4},{value:"generate_order_triggered(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) \u2192 void",id:"generate_order_triggeredself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-uint64_t-ts_event--void",level:4},{value:"generate_order_updated(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, Quantity quantity, Price price, Price trigger_price, uint64_t ts_event, bool venue_order_id_modified=False) \u2192 void",id:"generate_order_updatedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-quantity-quantity-price-price-price-trigger_price-uint64_t-ts_event-bool-venue_order_id_modifiedfalse--void",level:4},{value:"get_account(self) \u2192 Account",id:"get_accountself--account-1",level:4},{value:"id",id:"id-3",level:4},{value:"is_connected",id:"is_connected-2",level:4},{value:"is_degraded",id:"is_degraded-2",level:4},{value:"is_disposed",id:"is_disposed-2",level:4},{value:"is_faulted",id:"is_faulted-2",level:4},{value:"is_initialized",id:"is_initialized-2",level:4},{value:"is_running",id:"is_running-2",level:4},{value:"is_stopped",id:"is_stopped-2",level:4},{value:"modify_order(self, ModifyOrder command) \u2192 void",id:"modify_orderself-modifyorder-command--void",level:4},{value:"oms_type",id:"oms_type-2",level:4},{value:"query_account(self, QueryAccount command) \u2192 void",id:"query_accountself-queryaccount-command--void",level:4},{value:"query_order(self, QueryOrder command) \u2192 void",id:"query_orderself-queryorder-command--void",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-4",level:4},{value:"WARNING",id:"warning-21",level:4},{value:"resume(self) \u2192 void",id:"resumeself--void-2",level:4},{value:"WARNING",id:"warning-22",level:4},{value:"shutdown_system(self, str reason=None) \u2192 void",id:"shutdown_systemself-str-reasonnone--void-2",level:4},{value:"start(self) \u2192 void",id:"startself--void-2",level:4},{value:"WARNING",id:"warning-23",level:4},{value:"state",id:"state-2",level:4},{value:"stop(self) \u2192 void",id:"stopself--void-2",level:4},{value:"WARNING",id:"warning-24",level:4},{value:"submit_order(self, SubmitOrder command) \u2192 void",id:"submit_orderself-submitorder-command--void",level:4},{value:"submit_order_list(self, SubmitOrderList command) \u2192 void",id:"submit_order_listself-submitorderlist-command--void",level:4},{value:"trader_id",id:"trader_id-3",level:4},{value:"type",id:"type-2",level:4},{value:"venue",id:"venue-3",level:4},{value:"<em>class</em> BestPriceFillModel",id:"class-bestpricefillmodel",level:3},{value:"get_orderbook_for_fill_simulation(self, Instrument instrument: Instrument, Order order: Order, Price best_bid: Price, Price best_ask: Price) \u2192 OrderBook | None",id:"get_orderbook_for_fill_simulationself-instrument-instrument-instrument-order-order-order-price-best_bid-price-price-best_ask-price--orderbook--none",level:4},{value:"is_limit_filled(self) \u2192 bool",id:"is_limit_filledself--bool",level:4},{value:"is_slipped(self) \u2192 bool",id:"is_slippedself--bool",level:4},{value:"is_stop_filled(self) \u2192 bool",id:"is_stop_filledself--bool",level:4},{value:"prob_fill_on_limit",id:"prob_fill_on_limit",level:4},{value:"prob_fill_on_stop",id:"prob_fill_on_stop",level:4},{value:"prob_slippage",id:"prob_slippage",level:4},{value:"<em>class</em> CompetitionAwareFillModel",id:"class-competitionawarefillmodel",level:3},{value:"get_orderbook_for_fill_simulation(self, Instrument instrument: Instrument, Order order: Order, Price best_bid: Price, Price best_ask: Price) \u2192 OrderBook | None",id:"get_orderbook_for_fill_simulationself-instrument-instrument-instrument-order-order-order-price-best_bid-price-price-best_ask-price--orderbook--none-1",level:4},{value:"is_limit_filled(self) \u2192 bool",id:"is_limit_filledself--bool-1",level:4},{value:"is_slipped(self) \u2192 bool",id:"is_slippedself--bool-1",level:4},{value:"is_stop_filled(self) \u2192 bool",id:"is_stop_filledself--bool-1",level:4},{value:"prob_fill_on_limit",id:"prob_fill_on_limit-1",level:4},{value:"prob_fill_on_stop",id:"prob_fill_on_stop-1",level:4},{value:"prob_slippage",id:"prob_slippage-1",level:4},{value:"<em>class</em> FeeModel",id:"class-feemodel",level:3},{value:"get_commission(self, Order order, Quantity fill_qty, Price fill_px, Instrument instrument) \u2192 Money",id:"get_commissionself-order-order-quantity-fill_qty-price-fill_px-instrument-instrument--money",level:4},{value:"<em>class</em> FillModel",id:"class-fillmodel",level:3},{value:"get_orderbook_for_fill_simulation(self, Instrument instrument, Order order, Price best_bid, Price best_ask) \u2192 OrderBook",id:"get_orderbook_for_fill_simulationself-instrument-instrument-order-order-price-best_bid-price-best_ask--orderbook",level:4},{value:"is_limit_filled(self) \u2192 bool",id:"is_limit_filledself--bool-2",level:4},{value:"is_slipped(self) \u2192 bool",id:"is_slippedself--bool-2",level:4},{value:"is_stop_filled(self) \u2192 bool",id:"is_stop_filledself--bool-2",level:4},{value:"prob_fill_on_limit",id:"prob_fill_on_limit-2",level:4},{value:"prob_fill_on_stop",id:"prob_fill_on_stop-2",level:4},{value:"prob_slippage",id:"prob_slippage-2",level:4},{value:"<em>class</em> FixedFeeModel",id:"class-fixedfeemodel",level:3},{value:"get_commission(self, Order order, Quantity fill_qty, Price fill_px, Instrument instrument) \u2192 Money",id:"get_commissionself-order-order-quantity-fill_qty-price-fill_px-instrument-instrument--money-1",level:4},{value:"<em>class</em> LatencyModel",id:"class-latencymodel",level:3},{value:"base_latency_nanos",id:"base_latency_nanos",level:4},{value:"cancel_latency_nanos",id:"cancel_latency_nanos",level:4},{value:"insert_latency_nanos",id:"insert_latency_nanos",level:4},{value:"update_latency_nanos",id:"update_latency_nanos",level:4},{value:"<em>class</em> LeveragedMarginModel",id:"class-leveragedmarginmodel",level:3},{value:"calculate_margin_init(self, Instrument instrument, Quantity quantity, Price price, leverage: Decimal, bool use_quote_for_inverse=False) \u2192 Money",id:"calculate_margin_initself-instrument-instrument-quantity-quantity-price-price-leverage-decimal-bool-use_quote_for_inversefalse--money",level:4},{value:"calculate_margin_maint(self, Instrument instrument, PositionSide side, Quantity quantity, Price price, leverage: Decimal, bool use_quote_for_inverse=False) \u2192 Money",id:"calculate_margin_maintself-instrument-instrument-positionside-side-quantity-quantity-price-price-leverage-decimal-bool-use_quote_for_inversefalse--money",level:4},{value:"<em>class</em> LimitOrderPartialFillModel",id:"class-limitorderpartialfillmodel",level:3},{value:"get_orderbook_for_fill_simulation(self, Instrument instrument: Instrument, Order order: Order, Price best_bid: Price, Price best_ask: Price) \u2192 OrderBook | None",id:"get_orderbook_for_fill_simulationself-instrument-instrument-instrument-order-order-order-price-best_bid-price-price-best_ask-price--orderbook--none-2",level:4},{value:"is_limit_filled(self) \u2192 bool",id:"is_limit_filledself--bool-3",level:4},{value:"is_slipped(self) \u2192 bool",id:"is_slippedself--bool-3",level:4},{value:"is_stop_filled(self) \u2192 bool",id:"is_stop_filledself--bool-3",level:4},{value:"prob_fill_on_limit",id:"prob_fill_on_limit-3",level:4},{value:"prob_fill_on_stop",id:"prob_fill_on_stop-3",level:4},{value:"prob_slippage",id:"prob_slippage-3",level:4},{value:"<em>class</em> MakerTakerFeeModel",id:"class-makertakerfeemodel",level:3},{value:"get_commission(self, Order order, Quantity fill_qty, Price fill_px, Instrument instrument) \u2192 Money",id:"get_commissionself-order-order-quantity-fill_qty-price-fill_px-instrument-instrument--money-2",level:4},{value:"<em>class</em> MarginModel",id:"class-marginmodel",level:3},{value:"calculate_margin_init(self, Instrument instrument, Quantity quantity, Price price, leverage: Decimal, bool use_quote_for_inverse=False) \u2192 Money",id:"calculate_margin_initself-instrument-instrument-quantity-quantity-price-price-leverage-decimal-bool-use_quote_for_inversefalse--money-1",level:4},{value:"calculate_margin_maint(self, Instrument instrument, PositionSide side, Quantity quantity, Price price, leverage: Decimal, bool use_quote_for_inverse=False) \u2192 Money",id:"calculate_margin_maintself-instrument-instrument-positionside-side-quantity-quantity-price-price-leverage-decimal-bool-use_quote_for_inversefalse--money-1",level:4},{value:"<em>class</em> MarketHoursFillModel",id:"class-markethoursfillmodel",level:3},{value:"get_orderbook_for_fill_simulation(self, Instrument instrument: Instrument, Order order: Order, Price best_bid: Price, Price best_ask: Price) \u2192 OrderBook | None",id:"get_orderbook_for_fill_simulationself-instrument-instrument-instrument-order-order-order-price-best_bid-price-price-best_ask-price--orderbook--none-3",level:4},{value:"is_limit_filled(self) \u2192 bool",id:"is_limit_filledself--bool-4",level:4},{value:"is_low_liquidity_period(self) \u2192 bool",id:"is_low_liquidity_periodself--bool",level:4},{value:"is_slipped(self) \u2192 bool",id:"is_slippedself--bool-4",level:4},{value:"is_stop_filled(self) \u2192 bool",id:"is_stop_filledself--bool-4",level:4},{value:"prob_fill_on_limit",id:"prob_fill_on_limit-4",level:4},{value:"prob_fill_on_stop",id:"prob_fill_on_stop-4",level:4},{value:"prob_slippage",id:"prob_slippage-4",level:4},{value:"set_low_liquidity_period(self, is_low_liquidity: bool)",id:"set_low_liquidity_periodself-is_low_liquidity-bool",level:4},{value:"<em>class</em> OneTickSlippageFillModel",id:"class-onetickslippagefillmodel",level:3},{value:"get_orderbook_for_fill_simulation(self, Instrument instrument: Instrument, Order order: Order, Price best_bid: Price, Price best_ask: Price) \u2192 OrderBook | None",id:"get_orderbook_for_fill_simulationself-instrument-instrument-instrument-order-order-order-price-best_bid-price-price-best_ask-price--orderbook--none-4",level:4},{value:"is_limit_filled(self) \u2192 bool",id:"is_limit_filledself--bool-5",level:4},{value:"is_slipped(self) \u2192 bool",id:"is_slippedself--bool-5",level:4},{value:"is_stop_filled(self) \u2192 bool",id:"is_stop_filledself--bool-5",level:4},{value:"prob_fill_on_limit",id:"prob_fill_on_limit-5",level:4},{value:"prob_fill_on_stop",id:"prob_fill_on_stop-5",level:4},{value:"prob_slippage",id:"prob_slippage-5",level:4},{value:"<em>class</em> PerContractFeeModel",id:"class-percontractfeemodel",level:3},{value:"get_commission(self, Order order, Quantity fill_qty, Price fill_px, Instrument instrument) \u2192 Money",id:"get_commissionself-order-order-quantity-fill_qty-price-fill_px-instrument-instrument--money-3",level:4},{value:"<em>class</em> ProbabilisticFillModel",id:"class-probabilisticfillmodel",level:3},{value:"get_orderbook_for_fill_simulation(self, Instrument instrument: Instrument, Order order: Order, Price best_bid: Price, Price best_ask: Price) \u2192 OrderBook | None",id:"get_orderbook_for_fill_simulationself-instrument-instrument-instrument-order-order-order-price-best_bid-price-price-best_ask-price--orderbook--none-5",level:4},{value:"is_limit_filled(self) \u2192 bool",id:"is_limit_filledself--bool-6",level:4},{value:"is_slipped(self) \u2192 bool",id:"is_slippedself--bool-6",level:4},{value:"is_stop_filled(self) \u2192 bool",id:"is_stop_filledself--bool-6",level:4},{value:"prob_fill_on_limit",id:"prob_fill_on_limit-6",level:4},{value:"prob_fill_on_stop",id:"prob_fill_on_stop-6",level:4},{value:"prob_slippage",id:"prob_slippage-6",level:4},{value:"<em>class</em> SizeAwareFillModel",id:"class-sizeawarefillmodel",level:3},{value:"get_orderbook_for_fill_simulation(self, Instrument instrument: Instrument, Order order: Order, Price best_bid: Price, Price best_ask: Price) \u2192 OrderBook | None",id:"get_orderbook_for_fill_simulationself-instrument-instrument-instrument-order-order-order-price-best_bid-price-price-best_ask-price--orderbook--none-6",level:4},{value:"is_limit_filled(self) \u2192 bool",id:"is_limit_filledself--bool-7",level:4},{value:"is_slipped(self) \u2192 bool",id:"is_slippedself--bool-7",level:4},{value:"is_stop_filled(self) \u2192 bool",id:"is_stop_filledself--bool-7",level:4},{value:"prob_fill_on_limit",id:"prob_fill_on_limit-7",level:4},{value:"prob_fill_on_stop",id:"prob_fill_on_stop-7",level:4},{value:"prob_slippage",id:"prob_slippage-7",level:4},{value:"<em>class</em> SpreadQuoteAggregator",id:"class-spreadquoteaggregator",level:3},{value:"degrade(self) \u2192 void",id:"degradeself--void-3",level:4},{value:"WARNING",id:"warning-25",level:4},{value:"dispose(self) \u2192 void",id:"disposeself--void-3",level:4},{value:"WARNING",id:"warning-26",level:4},{value:"fault(self) \u2192 void",id:"faultself--void-3",level:4},{value:"WARNING",id:"warning-27",level:4},{value:"<em>classmethod</em> fully_qualified_name(cls) \u2192 str",id:"classmethod-fully_qualified_namecls--str-3",level:4},{value:"id",id:"id-4",level:4},{value:"is_degraded",id:"is_degraded-3",level:4},{value:"is_disposed",id:"is_disposed-3",level:4},{value:"is_faulted",id:"is_faulted-3",level:4},{value:"is_initialized",id:"is_initialized-3",level:4},{value:"is_running",id:"is_running-3",level:4},{value:"is_stopped",id:"is_stopped-3",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-5",level:4},{value:"WARNING",id:"warning-28",level:4},{value:"resume(self) \u2192 void",id:"resumeself--void-3",level:4},{value:"WARNING",id:"warning-29",level:4},{value:"shutdown_system(self, str reason=None) \u2192 void",id:"shutdown_systemself-str-reasonnone--void-3",level:4},{value:"start(self) \u2192 void",id:"startself--void-3",level:4},{value:"WARNING",id:"warning-30",level:4},{value:"state",id:"state-3",level:4},{value:"stop(self) \u2192 void",id:"stopself--void-3",level:4},{value:"trader_id",id:"trader_id-4",level:4},{value:"type",id:"type-3",level:4},{value:"<em>class</em> StandardMarginModel",id:"class-standardmarginmodel",level:3},{value:"calculate_margin_init(self, Instrument instrument, Quantity quantity, Price price, leverage: Decimal, bool use_quote_for_inverse=False) \u2192 Money",id:"calculate_margin_initself-instrument-instrument-quantity-quantity-price-price-leverage-decimal-bool-use_quote_for_inversefalse--money-2",level:4},{value:"calculate_margin_maint(self, Instrument instrument, PositionSide side, Quantity quantity, Price price, leverage: Decimal, bool use_quote_for_inverse=False) \u2192 Money",id:"calculate_margin_maintself-instrument-instrument-positionside-side-quantity-quantity-price-price-leverage-decimal-bool-use_quote_for_inversefalse--money-2",level:4},{value:"<em>class</em> ThreeTierFillModel",id:"class-threetierfillmodel",level:3},{value:"get_orderbook_for_fill_simulation(self, Instrument instrument: Instrument, Order order: Order, Price best_bid: Price, Price best_ask: Price) \u2192 OrderBook | None",id:"get_orderbook_for_fill_simulationself-instrument-instrument-instrument-order-order-order-price-best_bid-price-price-best_ask-price--orderbook--none-7",level:4},{value:"is_limit_filled(self) \u2192 bool",id:"is_limit_filledself--bool-8",level:4},{value:"is_slipped(self) \u2192 bool",id:"is_slippedself--bool-8",level:4},{value:"is_stop_filled(self) \u2192 bool",id:"is_stop_filledself--bool-8",level:4},{value:"prob_fill_on_limit",id:"prob_fill_on_limit-8",level:4},{value:"prob_fill_on_stop",id:"prob_fill_on_stop-8",level:4},{value:"prob_slippage",id:"prob_slippage-8",level:4},{value:"<em>class</em> TwoTierFillModel",id:"class-twotierfillmodel",level:3},{value:"get_orderbook_for_fill_simulation(self, Instrument instrument: Instrument, Order order: Order, Price best_bid: Price, Price best_ask: Price) \u2192 OrderBook | None",id:"get_orderbook_for_fill_simulationself-instrument-instrument-instrument-order-order-order-price-best_bid-price-price-best_ask-price--orderbook--none-8",level:4},{value:"is_limit_filled(self) \u2192 bool",id:"is_limit_filledself--bool-9",level:4},{value:"is_slipped(self) \u2192 bool",id:"is_slippedself--bool-9",level:4},{value:"is_stop_filled(self) \u2192 bool",id:"is_stop_filledself--bool-9",level:4},{value:"prob_fill_on_limit",id:"prob_fill_on_limit-9",level:4},{value:"prob_fill_on_stop",id:"prob_fill_on_stop-9",level:4},{value:"prob_slippage",id:"prob_slippage-9",level:4},{value:"<em>class</em> VolumeSensitiveFillModel",id:"class-volumesensitivefillmodel",level:3},{value:"get_orderbook_for_fill_simulation(self, Instrument instrument: Instrument, Order order: Order, Price best_bid: Price, Price best_ask: Price) \u2192 OrderBook | None",id:"get_orderbook_for_fill_simulationself-instrument-instrument-instrument-order-order-order-price-best_bid-price-price-best_ask-price--orderbook--none-9",level:4},{value:"is_limit_filled(self) \u2192 bool",id:"is_limit_filledself--bool-10",level:4},{value:"is_slipped(self) \u2192 bool",id:"is_slippedself--bool-10",level:4},{value:"is_stop_filled(self) \u2192 bool",id:"is_stop_filledself--bool-10",level:4},{value:"prob_fill_on_limit",id:"prob_fill_on_limit-10",level:4},{value:"prob_fill_on_stop",id:"prob_fill_on_stop-10",level:4},{value:"prob_slippage",id:"prob_slippage-10",level:4},{value:"set_recent_volume(self, double volume: float)",id:"set_recent_volumeself-double-volume-float",level:4},{value:"<em>class</em> FXRolloverInterestModule",id:"class-fxrolloverinterestmodule",level:3},{value:"active_task_ids(self) \u2192 list",id:"active_task_idsself--list",level:4},{value:"add_synthetic(self, SyntheticInstrument synthetic) \u2192 void",id:"add_syntheticself-syntheticinstrument-synthetic--void",level:4},{value:"cache",id:"cache-3",level:4},{value:"cancel_all_tasks(self) \u2192 void",id:"cancel_all_tasksself--void",level:4},{value:"cancel_task(self, task_id: TaskId) \u2192 void",id:"cancel_taskself-task_id-taskid--void",level:4},{value:"clock",id:"clock",level:4},{value:"config",id:"config",level:4},{value:"degrade(self) \u2192 void",id:"degradeself--void-4",level:4},{value:"WARNING",id:"warning-31",level:4},{value:"deregister_warning_event(self, type event) \u2192 void",id:"deregister_warning_eventself-type-event--void",level:4},{value:"dispose(self) \u2192 void",id:"disposeself--void-4",level:4},{value:"WARNING",id:"warning-32",level:4},{value:"exchange",id:"exchange",level:4},{value:"fault(self) \u2192 void",id:"faultself--void-4",level:4},{value:"WARNING",id:"warning-33",level:4},{value:"<em>classmethod</em> fully_qualified_name(cls) \u2192 str",id:"classmethod-fully_qualified_namecls--str-4",level:4},{value:"greeks",id:"greeks",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void",level:4},{value:"WARNING",id:"warning-34",level:4},{value:"handle_bars(self, list bars) \u2192 void",id:"handle_barsself-list-bars--void",level:4},{value:"WARNING",id:"warning-35",level:4},{value:"handle_data(self, Data data) \u2192 void",id:"handle_dataself-data-data--void",level:4},{value:"WARNING",id:"warning-36",level:4},{value:"handle_event(self, Event event) \u2192 void",id:"handle_eventself-event-event--void",level:4},{value:"WARNING",id:"warning-37",level:4},{value:"handle_funding_rate(self, FundingRateUpdate funding_rate) \u2192 void",id:"handle_funding_rateself-fundingrateupdate-funding_rate--void",level:4},{value:"WARNING",id:"warning-38",level:4},{value:"handle_historical_data(self, data) \u2192 void",id:"handle_historical_dataself-data--void",level:4},{value:"WARNING",id:"warning-39",level:4},{value:"handle_index_price(self, IndexPriceUpdate index_price) \u2192 void",id:"handle_index_priceself-indexpriceupdate-index_price--void",level:4},{value:"WARNING",id:"warning-40",level:4},{value:"handle_instrument(self, Instrument instrument) \u2192 void",id:"handle_instrumentself-instrument-instrument--void",level:4},{value:"WARNING",id:"warning-41",level:4},{value:"handle_instrument_close(self, InstrumentClose update) \u2192 void",id:"handle_instrument_closeself-instrumentclose-update--void",level:4},{value:"WARNING",id:"warning-42",level:4},{value:"handle_instrument_status(self, InstrumentStatus data) \u2192 void",id:"handle_instrument_statusself-instrumentstatus-data--void",level:4},{value:"WARNING",id:"warning-43",level:4},{value:"handle_instruments(self, list instruments) \u2192 void",id:"handle_instrumentsself-list-instruments--void",level:4},{value:"WARNING",id:"warning-44",level:4},{value:"handle_mark_price(self, MarkPriceUpdate mark_price) \u2192 void",id:"handle_mark_priceself-markpriceupdate-mark_price--void",level:4},{value:"WARNING",id:"warning-45",level:4},{value:"handle_order_book(self, OrderBook order_book) \u2192 void",id:"handle_order_bookself-orderbook-order_book--void",level:4},{value:"WARNING",id:"warning-46",level:4},{value:"handle_order_book_deltas(self, deltas) \u2192 void",id:"handle_order_book_deltasself-deltas--void",level:4},{value:"WARNING",id:"warning-47",level:4},{value:"handle_order_book_depth(self, OrderBookDepth10 depth) \u2192 void",id:"handle_order_book_depthself-orderbookdepth10-depth--void",level:4},{value:"WARNING",id:"warning-48",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void",level:4},{value:"WARNING",id:"warning-49",level:4},{value:"handle_quote_ticks(self, list ticks) \u2192 void",id:"handle_quote_ticksself-list-ticks--void",level:4},{value:"WARNING",id:"warning-50",level:4},{value:"handle_signal(self, Data signal) \u2192 void",id:"handle_signalself-data-signal--void",level:4},{value:"WARNING",id:"warning-51",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void",level:4},{value:"WARNING",id:"warning-52",level:4},{value:"handle_trade_ticks(self, list ticks) \u2192 void",id:"handle_trade_ticksself-list-ticks--void",level:4},{value:"WARNING",id:"warning-53",level:4},{value:"has_active_tasks(self) \u2192 bool",id:"has_active_tasksself--bool",level:4},{value:"has_any_tasks(self) \u2192 bool",id:"has_any_tasksself--bool",level:4},{value:"has_pending_requests(self) \u2192 bool",id:"has_pending_requestsself--bool",level:4},{value:"has_queued_tasks(self) \u2192 bool",id:"has_queued_tasksself--bool",level:4},{value:"id",id:"id-5",level:4},{value:"indicators_initialized(self) \u2192 bool",id:"indicators_initializedself--bool",level:4},{value:"is_degraded",id:"is_degraded-4",level:4},{value:"is_disposed",id:"is_disposed-4",level:4},{value:"is_faulted",id:"is_faulted-4",level:4},{value:"is_initialized",id:"is_initialized-4",level:4},{value:"is_pending_request(self, UUID4 request_id) \u2192 bool",id:"is_pending_requestself-uuid4-request_id--bool",level:4},{value:"is_running",id:"is_running-4",level:4},{value:"is_stopped",id:"is_stopped-4",level:4},{value:"load(self, dict state) \u2192 void",id:"loadself-dict-state--void",level:4},{value:"WARNING",id:"warning-54",level:4},{value:"log",id:"log",level:4},{value:"log_diagnostics(self, Logger logger) \u2192 void",id:"log_diagnosticsself-logger-logger--void",level:4},{value:"msgbus",id:"msgbus-2",level:4},{value:"on_bar(self, Bar bar) \u2192 void",id:"on_barself-bar-bar--void",level:4},{value:"WARNING",id:"warning-55",level:4},{value:"on_data(self, data) \u2192 void",id:"on_dataself-data--void",level:4},{value:"WARNING",id:"warning-56",level:4},{value:"on_degrade(self) \u2192 void",id:"on_degradeself--void",level:4},{value:"WARNING",id:"warning-57",level:4},{value:"on_dispose(self) \u2192 void",id:"on_disposeself--void",level:4},{value:"WARNING",id:"warning-58",level:4},{value:"on_event(self, Event event) \u2192 void",id:"on_eventself-event-event--void",level:4},{value:"WARNING",id:"warning-59",level:4},{value:"on_fault(self) \u2192 void",id:"on_faultself--void",level:4},{value:"WARNING",id:"warning-60",level:4},{value:"on_funding_rate(self, FundingRateUpdate funding_rate) \u2192 void",id:"on_funding_rateself-fundingrateupdate-funding_rate--void",level:4},{value:"WARNING",id:"warning-61",level:4},{value:"on_historical_data(self, data) \u2192 void",id:"on_historical_dataself-data--void",level:4},{value:"WARNING",id:"warning-62",level:4},{value:"on_index_price(self, IndexPriceUpdate index_price) \u2192 void",id:"on_index_priceself-indexpriceupdate-index_price--void",level:4},{value:"WARNING",id:"warning-63",level:4},{value:"on_instrument(self, Instrument instrument) \u2192 void",id:"on_instrumentself-instrument-instrument--void",level:4},{value:"WARNING",id:"warning-64",level:4},{value:"on_instrument_close(self, InstrumentClose update) \u2192 void",id:"on_instrument_closeself-instrumentclose-update--void",level:4},{value:"WARNING",id:"warning-65",level:4},{value:"on_instrument_status(self, InstrumentStatus data) \u2192 void",id:"on_instrument_statusself-instrumentstatus-data--void",level:4},{value:"WARNING",id:"warning-66",level:4},{value:"on_load(self, dict state) \u2192 void",id:"on_loadself-dict-state--void",level:4},{value:"WARNING",id:"warning-67",level:4},{value:"on_mark_price(self, MarkPriceUpdate mark_price) \u2192 void",id:"on_mark_priceself-markpriceupdate-mark_price--void",level:4},{value:"WARNING",id:"warning-68",level:4},{value:"on_order_book(self, OrderBook order_book) \u2192 void",id:"on_order_bookself-orderbook-order_book--void",level:4},{value:"WARNING",id:"warning-69",level:4},{value:"on_order_book_deltas(self, deltas) \u2192 void",id:"on_order_book_deltasself-deltas--void",level:4},{value:"WARNING",id:"warning-70",level:4},{value:"on_order_book_depth(self, depth) \u2192 void",id:"on_order_book_depthself-depth--void",level:4},{value:"WARNING",id:"warning-71",level:4},{value:"on_quote_tick(self, QuoteTick tick) \u2192 void",id:"on_quote_tickself-quotetick-tick--void",level:4},{value:"WARNING",id:"warning-72",level:4},{value:"on_reset(self) \u2192 void",id:"on_resetself--void",level:4},{value:"WARNING",id:"warning-73",level:4},{value:"on_resume(self) \u2192 void",id:"on_resumeself--void",level:4},{value:"WARNING",id:"warning-74",level:4},{value:"on_save(self) \u2192 dict",id:"on_saveself--dict",level:4},{value:"WARNING",id:"warning-75",level:4},{value:"on_signal(self, signal) \u2192 void",id:"on_signalself-signal--void",level:4},{value:"WARNING",id:"warning-76",level:4},{value:"on_start(self) \u2192 void",id:"on_startself--void",level:4},{value:"WARNING",id:"warning-77",level:4},{value:"on_stop(self) \u2192 void",id:"on_stopself--void",level:4},{value:"WARNING",id:"warning-78",level:4},{value:"on_trade_tick(self, TradeTick tick) \u2192 void",id:"on_trade_tickself-tradetick-tick--void",level:4},{value:"WARNING",id:"warning-79",level:4},{value:"pending_requests(self) \u2192 set",id:"pending_requestsself--set",level:4},{value:"portfolio",id:"portfolio-1",level:4},{value:"pre_process(self, Data data) \u2192 void",id:"pre_processself-data-data--void",level:4},{value:"process(self, uint64_t ts_now) \u2192 void",id:"processself-uint64_t-ts_now--void-1",level:4},{value:"publish_data(self, DataType data_type, Data data) \u2192 void",id:"publish_dataself-datatype-data_type-data-data--void",level:4},{value:"publish_signal(self, str name, value, uint64_t ts_event=0) \u2192 void",id:"publish_signalself-str-name-value-uint64_t-ts_event0--void",level:4},{value:"queue_for_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)",id:"queue_for_executorself-func-callable-any-tuple-argsnone-dict-kwargsnone",level:4},{value:"queued_task_ids(self) \u2192 list",id:"queued_task_idsself--list",level:4},{value:"register_base(self, PortfolioFacade portfolio, MessageBus msgbus, CacheFacade cache, Clock clock) \u2192 void",id:"register_baseself-portfoliofacade-portfolio-messagebus-msgbus-cachefacade-cache-clock-clock--void",level:4},{value:"WARNING",id:"warning-80",level:4},{value:"register_executor(self, loop: asyncio.AbstractEventLoop, executor: Executor) \u2192 void",id:"register_executorself-loop-asyncioabstracteventloop-executor-executor--void",level:4},{value:"register_indicator_for_bars(self, BarType bar_type, Indicator indicator) \u2192 void",id:"register_indicator_for_barsself-bartype-bar_type-indicator-indicator--void",level:4},{value:"register_indicator_for_quote_ticks(self, InstrumentId instrument_id, Indicator indicator) \u2192 void",id:"register_indicator_for_quote_ticksself-instrumentid-instrument_id-indicator-indicator--void",level:4},{value:"register_indicator_for_trade_ticks(self, InstrumentId instrument_id, Indicator indicator) \u2192 void",id:"register_indicator_for_trade_ticksself-instrumentid-instrument_id-indicator-indicator--void",level:4},{value:"register_venue(self, SimulatedExchange exchange) \u2192 void",id:"register_venueself-simulatedexchange-exchange--void",level:4},{value:"register_warning_event(self, type event) \u2192 void",id:"register_warning_eventself-type-event--void",level:4},{value:"registered_indicators",id:"registered_indicators",level:4},{value:"request_aggregated_bars(self, list bar_types, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, bool include_external_data=False, bool update_subscriptions=False, update_catalog: bool = False, dict params=None) \u2192 UUID4",id:"request_aggregated_barsself-list-bar_types-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-bool-include_external_datafalse-bool-update_subscriptionsfalse-update_catalog-bool--false-dict-paramsnone--uuid4",level:4},{value:"request_bars(self, BarType bar_type, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 UUID4",id:"request_barsself-bartype-bar_type-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4",level:4},{value:"request_data(self, DataType data_type, ClientId client_id, InstrumentId instrument_id=None, datetime start=None, datetime end=None, int limit=0, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 UUID4",id:"request_dataself-datatype-data_type-clientid-client_id-instrumentid-instrument_idnone-datetime-startnone-datetime-endnone-int-limit0-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4",level:4},{value:"request_instrument(self, InstrumentId instrument_id, datetime start=None, datetime end=None, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 UUID4",id:"request_instrumentself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4",level:4},{value:"request_instruments(self, Venue venue, datetime start=None, datetime end=None, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 UUID4",id:"request_instrumentsself-venue-venue-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4",level:4},{value:"request_order_book_snapshot(self, InstrumentId instrument_id, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, dict params=None) \u2192 UUID4",id:"request_order_book_snapshotself-instrumentid-instrument_id-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-dict-paramsnone--uuid4",level:4},{value:"request_quote_ticks(self, InstrumentId instrument_id, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 UUID4",id:"request_quote_ticksself-instrumentid-instrument_id-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4",level:4},{value:"request_trade_ticks(self, InstrumentId instrument_id, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 UUID4",id:"request_trade_ticksself-instrumentid-instrument_id-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-6",level:4},{value:"resume(self) \u2192 void",id:"resumeself--void-4",level:4},{value:"WARNING",id:"warning-81",level:4},{value:"run_in_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)",id:"run_in_executorself-func-callable-any-tuple-argsnone-dict-kwargsnone",level:4},{value:"save(self) \u2192 dict",id:"saveself--dict",level:4},{value:"WARNING",id:"warning-82",level:4},{value:"shutdown_system(self, str reason=None) \u2192 void",id:"shutdown_systemself-str-reasonnone--void-4",level:4},{value:"start(self) \u2192 void",id:"startself--void-4",level:4},{value:"WARNING",id:"warning-83",level:4},{value:"state",id:"state-4",level:4},{value:"stop(self) \u2192 void",id:"stopself--void-4",level:4},{value:"WARNING",id:"warning-84",level:4},{value:"subscribe_bars(self, BarType bar_type, ClientId client_id=None, bool await_partial=False, bool update_catalog=False, dict params=None) \u2192 void",id:"subscribe_barsself-bartype-bar_type-clientid-client_idnone-bool-await_partialfalse-bool-update_catalogfalse-dict-paramsnone--void",level:4},{value:"subscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, bool update_catalog=False, dict params=None) \u2192 void",id:"subscribe_dataself-datatype-data_type-clientid-client_idnone-instrumentid-instrument_idnone-bool-update_catalogfalse-dict-paramsnone--void",level:4},{value:"subscribe_funding_rates(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_funding_ratesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"subscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_index_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"subscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_instrumentself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"subscribe_instrument_close(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_instrument_closeself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"subscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_instrument_statusself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"subscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_instrumentsself-venue-venue-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"subscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_mark_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"subscribe_order_book_at_interval(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, int interval_ms=1000, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_order_book_at_intervalself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-int-interval_ms1000-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"WARNING",id:"warning-85",level:4},{value:"subscribe_order_book_deltas(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) \u2192 void",id:"subscribe_order_book_deltasself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-clientid-client_idnone-bool-managedtrue-bool-pyo3_conversionfalse-dict-paramsnone--void",level:4},{value:"subscribe_order_book_depth(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) \u2192 void",id:"subscribe_order_book_depthself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-clientid-client_idnone-bool-managedtrue-bool-pyo3_conversionfalse-dict-paramsnone--void",level:4},{value:"subscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) \u2192 void",id:"subscribe_quote_ticksself-instrumentid-instrument_id-clientid-client_idnone-bool-update_catalogfalse-dict-paramsnone--void",level:4},{value:"subscribe_signal(self, str name=&#39;&#39;) \u2192 void",id:"subscribe_signalself-str-name--void",level:4},{value:"subscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) \u2192 void",id:"subscribe_trade_ticksself-instrumentid-instrument_id-clientid-client_idnone-bool-update_catalogfalse-dict-paramsnone--void",level:4},{value:"to_importable_config(self) \u2192 ImportableActorConfig",id:"to_importable_configself--importableactorconfig",level:4},{value:"trader_id",id:"trader_id-5",level:4},{value:"type",id:"type-4",level:4},{value:"unsubscribe_bars(self, BarType bar_type, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_barsself-bartype-bar_type-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"unsubscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, dict params=None) \u2192 void",id:"unsubscribe_dataself-datatype-data_type-clientid-client_idnone-instrumentid-instrument_idnone-dict-paramsnone--void",level:4},{value:"unsubscribe_funding_rates(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_funding_ratesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"unsubscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_index_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"unsubscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_instrumentself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"unsubscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_instrument_statusself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"unsubscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_instrumentsself-venue-venue-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"unsubscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_mark_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"unsubscribe_order_book_at_interval(self, InstrumentId instrument_id, int interval_ms=1000, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_order_book_at_intervalself-instrumentid-instrument_id-int-interval_ms1000-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"unsubscribe_order_book_deltas(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_order_book_deltasself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"unsubscribe_order_book_depth(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_order_book_depthself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"unsubscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_quote_ticksself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"unsubscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_trade_ticksself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"update_synthetic(self, SyntheticInstrument synthetic) \u2192 void",id:"update_syntheticself-syntheticinstrument-synthetic--void",level:4},{value:"<em>class</em> SimulationModule",id:"class-simulationmodule",level:3},{value:"WARNING",id:"warning-86",level:4},{value:"active_task_ids(self) \u2192 list",id:"active_task_idsself--list-1",level:4},{value:"add_synthetic(self, SyntheticInstrument synthetic) \u2192 void",id:"add_syntheticself-syntheticinstrument-synthetic--void-1",level:4},{value:"cache",id:"cache-4",level:4},{value:"cancel_all_tasks(self) \u2192 void",id:"cancel_all_tasksself--void-1",level:4},{value:"cancel_task(self, task_id: TaskId) \u2192 void",id:"cancel_taskself-task_id-taskid--void-1",level:4},{value:"clock",id:"clock-1",level:4},{value:"config",id:"config-1",level:4},{value:"degrade(self) \u2192 void",id:"degradeself--void-5",level:4},{value:"WARNING",id:"warning-87",level:4},{value:"deregister_warning_event(self, type event) \u2192 void",id:"deregister_warning_eventself-type-event--void-1",level:4},{value:"dispose(self) \u2192 void",id:"disposeself--void-5",level:4},{value:"WARNING",id:"warning-88",level:4},{value:"exchange",id:"exchange-1",level:4},{value:"fault(self) \u2192 void",id:"faultself--void-5",level:4},{value:"WARNING",id:"warning-89",level:4},{value:"<em>classmethod</em> fully_qualified_name(cls) \u2192 str",id:"classmethod-fully_qualified_namecls--str-5",level:4},{value:"greeks",id:"greeks-1",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-1",level:4},{value:"WARNING",id:"warning-90",level:4},{value:"handle_bars(self, list bars) \u2192 void",id:"handle_barsself-list-bars--void-1",level:4},{value:"WARNING",id:"warning-91",level:4},{value:"handle_data(self, Data data) \u2192 void",id:"handle_dataself-data-data--void-1",level:4},{value:"WARNING",id:"warning-92",level:4},{value:"handle_event(self, Event event) \u2192 void",id:"handle_eventself-event-event--void-1",level:4},{value:"WARNING",id:"warning-93",level:4},{value:"handle_funding_rate(self, FundingRateUpdate funding_rate) \u2192 void",id:"handle_funding_rateself-fundingrateupdate-funding_rate--void-1",level:4},{value:"WARNING",id:"warning-94",level:4},{value:"handle_historical_data(self, data) \u2192 void",id:"handle_historical_dataself-data--void-1",level:4},{value:"WARNING",id:"warning-95",level:4},{value:"handle_index_price(self, IndexPriceUpdate index_price) \u2192 void",id:"handle_index_priceself-indexpriceupdate-index_price--void-1",level:4},{value:"WARNING",id:"warning-96",level:4},{value:"handle_instrument(self, Instrument instrument) \u2192 void",id:"handle_instrumentself-instrument-instrument--void-1",level:4},{value:"WARNING",id:"warning-97",level:4},{value:"handle_instrument_close(self, InstrumentClose update) \u2192 void",id:"handle_instrument_closeself-instrumentclose-update--void-1",level:4},{value:"WARNING",id:"warning-98",level:4},{value:"handle_instrument_status(self, InstrumentStatus data) \u2192 void",id:"handle_instrument_statusself-instrumentstatus-data--void-1",level:4},{value:"WARNING",id:"warning-99",level:4},{value:"handle_instruments(self, list instruments) \u2192 void",id:"handle_instrumentsself-list-instruments--void-1",level:4},{value:"WARNING",id:"warning-100",level:4},{value:"handle_mark_price(self, MarkPriceUpdate mark_price) \u2192 void",id:"handle_mark_priceself-markpriceupdate-mark_price--void-1",level:4},{value:"WARNING",id:"warning-101",level:4},{value:"handle_order_book(self, OrderBook order_book) \u2192 void",id:"handle_order_bookself-orderbook-order_book--void-1",level:4},{value:"WARNING",id:"warning-102",level:4},{value:"handle_order_book_deltas(self, deltas) \u2192 void",id:"handle_order_book_deltasself-deltas--void-1",level:4},{value:"WARNING",id:"warning-103",level:4},{value:"handle_order_book_depth(self, OrderBookDepth10 depth) \u2192 void",id:"handle_order_book_depthself-orderbookdepth10-depth--void-1",level:4},{value:"WARNING",id:"warning-104",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-1",level:4},{value:"WARNING",id:"warning-105",level:4},{value:"handle_quote_ticks(self, list ticks) \u2192 void",id:"handle_quote_ticksself-list-ticks--void-1",level:4},{value:"WARNING",id:"warning-106",level:4},{value:"handle_signal(self, Data signal) \u2192 void",id:"handle_signalself-data-signal--void-1",level:4},{value:"WARNING",id:"warning-107",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-1",level:4},{value:"WARNING",id:"warning-108",level:4},{value:"handle_trade_ticks(self, list ticks) \u2192 void",id:"handle_trade_ticksself-list-ticks--void-1",level:4},{value:"WARNING",id:"warning-109",level:4},{value:"has_active_tasks(self) \u2192 bool",id:"has_active_tasksself--bool-1",level:4},{value:"has_any_tasks(self) \u2192 bool",id:"has_any_tasksself--bool-1",level:4},{value:"has_pending_requests(self) \u2192 bool",id:"has_pending_requestsself--bool-1",level:4},{value:"has_queued_tasks(self) \u2192 bool",id:"has_queued_tasksself--bool-1",level:4},{value:"id",id:"id-6",level:4},{value:"indicators_initialized(self) \u2192 bool",id:"indicators_initializedself--bool-1",level:4},{value:"is_degraded",id:"is_degraded-5",level:4},{value:"is_disposed",id:"is_disposed-5",level:4},{value:"is_faulted",id:"is_faulted-5",level:4},{value:"is_initialized",id:"is_initialized-5",level:4},{value:"is_pending_request(self, UUID4 request_id) \u2192 bool",id:"is_pending_requestself-uuid4-request_id--bool-1",level:4},{value:"is_running",id:"is_running-5",level:4},{value:"is_stopped",id:"is_stopped-5",level:4},{value:"load(self, dict state) \u2192 void",id:"loadself-dict-state--void-1",level:4},{value:"WARNING",id:"warning-110",level:4},{value:"log",id:"log-1",level:4},{value:"log_diagnostics(self, Logger logger) \u2192 void",id:"log_diagnosticsself-logger-logger--void-1",level:4},{value:"msgbus",id:"msgbus-3",level:4},{value:"on_bar(self, Bar bar) \u2192 void",id:"on_barself-bar-bar--void-1",level:4},{value:"WARNING",id:"warning-111",level:4},{value:"on_data(self, data) \u2192 void",id:"on_dataself-data--void-1",level:4},{value:"WARNING",id:"warning-112",level:4},{value:"on_degrade(self) \u2192 void",id:"on_degradeself--void-1",level:4},{value:"WARNING",id:"warning-113",level:4},{value:"on_dispose(self) \u2192 void",id:"on_disposeself--void-1",level:4},{value:"WARNING",id:"warning-114",level:4},{value:"on_event(self, Event event) \u2192 void",id:"on_eventself-event-event--void-1",level:4},{value:"WARNING",id:"warning-115",level:4},{value:"on_fault(self) \u2192 void",id:"on_faultself--void-1",level:4},{value:"WARNING",id:"warning-116",level:4},{value:"on_funding_rate(self, FundingRateUpdate funding_rate) \u2192 void",id:"on_funding_rateself-fundingrateupdate-funding_rate--void-1",level:4},{value:"WARNING",id:"warning-117",level:4},{value:"on_historical_data(self, data) \u2192 void",id:"on_historical_dataself-data--void-1",level:4},{value:"WARNING",id:"warning-118",level:4},{value:"on_index_price(self, IndexPriceUpdate index_price) \u2192 void",id:"on_index_priceself-indexpriceupdate-index_price--void-1",level:4},{value:"WARNING",id:"warning-119",level:4},{value:"on_instrument(self, Instrument instrument) \u2192 void",id:"on_instrumentself-instrument-instrument--void-1",level:4},{value:"WARNING",id:"warning-120",level:4},{value:"on_instrument_close(self, InstrumentClose update) \u2192 void",id:"on_instrument_closeself-instrumentclose-update--void-1",level:4},{value:"WARNING",id:"warning-121",level:4},{value:"on_instrument_status(self, InstrumentStatus data) \u2192 void",id:"on_instrument_statusself-instrumentstatus-data--void-1",level:4},{value:"WARNING",id:"warning-122",level:4},{value:"on_load(self, dict state) \u2192 void",id:"on_loadself-dict-state--void-1",level:4},{value:"WARNING",id:"warning-123",level:4},{value:"on_mark_price(self, MarkPriceUpdate mark_price) \u2192 void",id:"on_mark_priceself-markpriceupdate-mark_price--void-1",level:4},{value:"WARNING",id:"warning-124",level:4},{value:"on_order_book(self, OrderBook order_book) \u2192 void",id:"on_order_bookself-orderbook-order_book--void-1",level:4},{value:"WARNING",id:"warning-125",level:4},{value:"on_order_book_deltas(self, deltas) \u2192 void",id:"on_order_book_deltasself-deltas--void-1",level:4},{value:"WARNING",id:"warning-126",level:4},{value:"on_order_book_depth(self, depth) \u2192 void",id:"on_order_book_depthself-depth--void-1",level:4},{value:"WARNING",id:"warning-127",level:4},{value:"on_quote_tick(self, QuoteTick tick) \u2192 void",id:"on_quote_tickself-quotetick-tick--void-1",level:4},{value:"WARNING",id:"warning-128",level:4},{value:"on_reset(self) \u2192 void",id:"on_resetself--void-1",level:4},{value:"WARNING",id:"warning-129",level:4},{value:"on_resume(self) \u2192 void",id:"on_resumeself--void-1",level:4},{value:"WARNING",id:"warning-130",level:4},{value:"on_save(self) \u2192 dict",id:"on_saveself--dict-1",level:4},{value:"WARNING",id:"warning-131",level:4},{value:"on_signal(self, signal) \u2192 void",id:"on_signalself-signal--void-1",level:4},{value:"WARNING",id:"warning-132",level:4},{value:"on_start(self) \u2192 void",id:"on_startself--void-1",level:4},{value:"WARNING",id:"warning-133",level:4},{value:"on_stop(self) \u2192 void",id:"on_stopself--void-1",level:4},{value:"WARNING",id:"warning-134",level:4},{value:"on_trade_tick(self, TradeTick tick) \u2192 void",id:"on_trade_tickself-tradetick-tick--void-1",level:4},{value:"WARNING",id:"warning-135",level:4},{value:"pending_requests(self) \u2192 set",id:"pending_requestsself--set-1",level:4},{value:"portfolio",id:"portfolio-2",level:4},{value:"pre_process(self, Data data) \u2192 void",id:"pre_processself-data-data--void-1",level:4},{value:"process(self, uint64_t ts_now) \u2192 void",id:"processself-uint64_t-ts_now--void-2",level:4},{value:"publish_data(self, DataType data_type, Data data) \u2192 void",id:"publish_dataself-datatype-data_type-data-data--void-1",level:4},{value:"publish_signal(self, str name, value, uint64_t ts_event=0) \u2192 void",id:"publish_signalself-str-name-value-uint64_t-ts_event0--void-1",level:4},{value:"queue_for_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)",id:"queue_for_executorself-func-callable-any-tuple-argsnone-dict-kwargsnone-1",level:4},{value:"queued_task_ids(self) \u2192 list",id:"queued_task_idsself--list-1",level:4},{value:"register_base(self, PortfolioFacade portfolio, MessageBus msgbus, CacheFacade cache, Clock clock) \u2192 void",id:"register_baseself-portfoliofacade-portfolio-messagebus-msgbus-cachefacade-cache-clock-clock--void-1",level:4},{value:"WARNING",id:"warning-136",level:4},{value:"register_executor(self, loop: asyncio.AbstractEventLoop, executor: Executor) \u2192 void",id:"register_executorself-loop-asyncioabstracteventloop-executor-executor--void-1",level:4},{value:"register_indicator_for_bars(self, BarType bar_type, Indicator indicator) \u2192 void",id:"register_indicator_for_barsself-bartype-bar_type-indicator-indicator--void-1",level:4},{value:"register_indicator_for_quote_ticks(self, InstrumentId instrument_id, Indicator indicator) \u2192 void",id:"register_indicator_for_quote_ticksself-instrumentid-instrument_id-indicator-indicator--void-1",level:4},{value:"register_indicator_for_trade_ticks(self, InstrumentId instrument_id, Indicator indicator) \u2192 void",id:"register_indicator_for_trade_ticksself-instrumentid-instrument_id-indicator-indicator--void-1",level:4},{value:"register_venue(self, SimulatedExchange exchange) \u2192 void",id:"register_venueself-simulatedexchange-exchange--void-1",level:4},{value:"register_warning_event(self, type event) \u2192 void",id:"register_warning_eventself-type-event--void-1",level:4},{value:"registered_indicators",id:"registered_indicators-1",level:4},{value:"request_aggregated_bars(self, list bar_types, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, bool include_external_data=False, bool update_subscriptions=False, update_catalog: bool = False, dict params=None) \u2192 UUID4",id:"request_aggregated_barsself-list-bar_types-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-bool-include_external_datafalse-bool-update_subscriptionsfalse-update_catalog-bool--false-dict-paramsnone--uuid4-1",level:4},{value:"request_bars(self, BarType bar_type, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 UUID4",id:"request_barsself-bartype-bar_type-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1",level:4},{value:"request_data(self, DataType data_type, ClientId client_id, InstrumentId instrument_id=None, datetime start=None, datetime end=None, int limit=0, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 UUID4",id:"request_dataself-datatype-data_type-clientid-client_id-instrumentid-instrument_idnone-datetime-startnone-datetime-endnone-int-limit0-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1",level:4},{value:"request_instrument(self, InstrumentId instrument_id, datetime start=None, datetime end=None, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 UUID4",id:"request_instrumentself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1",level:4},{value:"request_instruments(self, Venue venue, datetime start=None, datetime end=None, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 UUID4",id:"request_instrumentsself-venue-venue-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1",level:4},{value:"request_order_book_snapshot(self, InstrumentId instrument_id, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, dict params=None) \u2192 UUID4",id:"request_order_book_snapshotself-instrumentid-instrument_id-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-dict-paramsnone--uuid4-1",level:4},{value:"request_quote_ticks(self, InstrumentId instrument_id, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 UUID4",id:"request_quote_ticksself-instrumentid-instrument_id-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1",level:4},{value:"request_trade_ticks(self, InstrumentId instrument_id, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 UUID4",id:"request_trade_ticksself-instrumentid-instrument_id-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-7",level:4},{value:"resume(self) \u2192 void",id:"resumeself--void-5",level:4},{value:"WARNING",id:"warning-137",level:4},{value:"run_in_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)",id:"run_in_executorself-func-callable-any-tuple-argsnone-dict-kwargsnone-1",level:4},{value:"save(self) \u2192 dict",id:"saveself--dict-1",level:4},{value:"WARNING",id:"warning-138",level:4},{value:"shutdown_system(self, str reason=None) \u2192 void",id:"shutdown_systemself-str-reasonnone--void-5",level:4},{value:"start(self) \u2192 void",id:"startself--void-5",level:4},{value:"WARNING",id:"warning-139",level:4},{value:"state",id:"state-5",level:4},{value:"stop(self) \u2192 void",id:"stopself--void-5",level:4},{value:"WARNING",id:"warning-140",level:4},{value:"subscribe_bars(self, BarType bar_type, ClientId client_id=None, bool await_partial=False, bool update_catalog=False, dict params=None) \u2192 void",id:"subscribe_barsself-bartype-bar_type-clientid-client_idnone-bool-await_partialfalse-bool-update_catalogfalse-dict-paramsnone--void-1",level:4},{value:"subscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, bool update_catalog=False, dict params=None) \u2192 void",id:"subscribe_dataself-datatype-data_type-clientid-client_idnone-instrumentid-instrument_idnone-bool-update_catalogfalse-dict-paramsnone--void-1",level:4},{value:"subscribe_funding_rates(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_funding_ratesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"subscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_index_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"subscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_instrumentself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"subscribe_instrument_close(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_instrument_closeself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"subscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_instrument_statusself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"subscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_instrumentsself-venue-venue-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"subscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_mark_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"subscribe_order_book_at_interval(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, int interval_ms=1000, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_order_book_at_intervalself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-int-interval_ms1000-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"WARNING",id:"warning-141",level:4},{value:"subscribe_order_book_deltas(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) \u2192 void",id:"subscribe_order_book_deltasself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-clientid-client_idnone-bool-managedtrue-bool-pyo3_conversionfalse-dict-paramsnone--void-1",level:4},{value:"subscribe_order_book_depth(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) \u2192 void",id:"subscribe_order_book_depthself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-clientid-client_idnone-bool-managedtrue-bool-pyo3_conversionfalse-dict-paramsnone--void-1",level:4},{value:"subscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) \u2192 void",id:"subscribe_quote_ticksself-instrumentid-instrument_id-clientid-client_idnone-bool-update_catalogfalse-dict-paramsnone--void-1",level:4},{value:"subscribe_signal(self, str name=&#39;&#39;) \u2192 void",id:"subscribe_signalself-str-name--void-1",level:4},{value:"subscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) \u2192 void",id:"subscribe_trade_ticksself-instrumentid-instrument_id-clientid-client_idnone-bool-update_catalogfalse-dict-paramsnone--void-1",level:4},{value:"to_importable_config(self) \u2192 ImportableActorConfig",id:"to_importable_configself--importableactorconfig-1",level:4},{value:"trader_id",id:"trader_id-6",level:4},{value:"type",id:"type-5",level:4},{value:"unsubscribe_bars(self, BarType bar_type, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_barsself-bartype-bar_type-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"unsubscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, dict params=None) \u2192 void",id:"unsubscribe_dataself-datatype-data_type-clientid-client_idnone-instrumentid-instrument_idnone-dict-paramsnone--void-1",level:4},{value:"unsubscribe_funding_rates(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_funding_ratesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"unsubscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_index_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"unsubscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_instrumentself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"unsubscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_instrument_statusself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"unsubscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_instrumentsself-venue-venue-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"unsubscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_mark_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"unsubscribe_order_book_at_interval(self, InstrumentId instrument_id, int interval_ms=1000, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_order_book_at_intervalself-instrumentid-instrument_id-int-interval_ms1000-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"unsubscribe_order_book_deltas(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_order_book_deltasself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"unsubscribe_order_book_depth(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_order_book_depthself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"unsubscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_quote_ticksself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"unsubscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_trade_ticksself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"update_synthetic(self, SyntheticInstrument synthetic) \u2192 void",id:"update_syntheticself-syntheticinstrument-synthetic--void-1",level:4},{value:"<em>class</em> BacktestNode",id:"class-backtestnode",level:3},{value:"<em>property</em> configs <em>: list[BacktestRunConfig]</em>",id:"property-configs--listbacktestrunconfig",level:4},{value:"get_log_guard() \u2192 LogGuard | LogGuard | None",id:"get_log_guard--logguard--logguard--none",level:4},{value:"get_engine(run_config_id: str) \u2192 BacktestEngine | None",id:"get_enginerun_config_id-str--backtestengine--none",level:4},{value:"get_engines() \u2192 list[BacktestEngine]",id:"get_engines--listbacktestengine",level:4},{value:"dispose()",id:"dispose",level:4},{value:"add_data_client_factory(name: str, factory: type[LiveDataClientFactory]) \u2192 None",id:"add_data_client_factoryname-str-factory-typelivedataclientfactory--none",level:4},{value:"build() \u2192 None",id:"build--none",level:4},{value:"setup_download_engine(catalog_config: DataCatalogConfig, data_clients: dict[str, type[LiveDataClientConfig]]) \u2192 None",id:"setup_download_enginecatalog_config-datacatalogconfig-data_clients-dictstr-typelivedataclientconfig--none",level:4},{value:"download_data(request_function: str, **kwargs) \u2192 None",id:"download_datarequest_function-str-kwargs--none",level:4},{value:"run() \u2192 list[BacktestResult]",id:"run--listbacktestresult",level:4},{value:"<em>classmethod</em> load_data_config(config: BacktestDataConfig, start: str | int | None = None, end: str | int | None = None) \u2192 CatalogDataResult",id:"classmethod-load_data_configconfig-backtestdataconfig-start-str--int--none--none-end-str--int--none--none--catalogdataresult",level:4},{value:"<em>classmethod</em> load_catalog(config: BacktestDataConfig) \u2192 ParquetDataCatalog",id:"classmethod-load_catalogconfig-backtestdataconfig--parquetdatacatalog",level:4},{value:"log_backtest_exception(e: Exception, config: BacktestRunConfig) \u2192 None",id:"log_backtest_exceptione-exception-config-backtestrunconfig--none",level:4},{value:"get_instrument_ids(config: BacktestDataConfig) \u2192 list[InstrumentId]",id:"get_instrument_idsconfig-backtestdataconfig--listinstrumentid",level:3},{value:"get_oms_type(config: BacktestVenueConfig) \u2192 OmsType",id:"get_oms_typeconfig-backtestvenueconfig--omstype",level:3},{value:"get_account_type(config: BacktestVenueConfig) \u2192 AccountType",id:"get_account_typeconfig-backtestvenueconfig--accounttype",level:3},{value:"get_book_type(config: BacktestVenueConfig) \u2192 BookType | None",id:"get_book_typeconfig-backtestvenueconfig--booktype--none",level:3},{value:"get_starting_balances(config: BacktestVenueConfig) \u2192 list[Money]",id:"get_starting_balancesconfig-backtestvenueconfig--listmoney",level:3},{value:"get_base_currency(config: BacktestVenueConfig) \u2192 Currency | None",id:"get_base_currencyconfig-backtestvenueconfig--currency--none",level:3},{value:"get_leverages(config: BacktestVenueConfig) \u2192 dict[InstrumentId, Decimal]",id:"get_leveragesconfig-backtestvenueconfig--dictinstrumentid-decimal",level:3},{value:"get_fill_model(config: BacktestVenueConfig) \u2192 FillModel | None",id:"get_fill_modelconfig-backtestvenueconfig--fillmodel--none",level:3},{value:"get_latency_model(config: BacktestVenueConfig) \u2192 LatencyModel | None",id:"get_latency_modelconfig-backtestvenueconfig--latencymodel--none",level:3},{value:"get_fee_model(config: BacktestVenueConfig) \u2192 FeeModel | None",id:"get_fee_modelconfig-backtestvenueconfig--feemodel--none",level:3},{value:"get_margin_model(config: BacktestVenueConfig)",id:"get_margin_modelconfig-backtestvenueconfig",level:3},{value:"<em>class</em> BacktestResult",id:"class-backtestresult",level:3},{value:"trader<em>id</em>: str_",id:"traderid-str_",level:4},{value:"machine<em>id</em>: str_",id:"machineid-str_",level:4},{value:"run<em>config_id</em>: str | None_",id:"runconfig_id-str--none_",level:4},{value:"instance<em>id</em>: str_",id:"instanceid-str_",level:4},{value:"run<em>id</em>: str_",id:"runid-str_",level:4},{value:"run<em>started</em>: int | None_",id:"runstarted-int--none_",level:4},{value:"run<em>finished</em>: int | None_",id:"runfinished-int--none_",level:4},{value:"backtest<em>start</em>: int | None_",id:"backteststart-int--none_",level:4},{value:"backtest<em>end</em>: int | None_",id:"backtestend-int--none_",level:4},{value:"elapsed<em>time</em>: float_",id:"elapsedtime-float_",level:4},{value:"iterations <em>: int</em>",id:"iterations--int",level:4},{value:"total<em>events</em>: int_",id:"totalevents-int_",level:4},{value:"total<em>orders</em>: int_",id:"totalorders-int_",level:4},{value:"total<em>positions</em>: int_",id:"totalpositions-int_",level:4},{value:"stats<em>pnls</em>: dict[str, dict[str, float]]_",id:"statspnls-dictstr-dictstr-float_",level:4},{value:"stats<em>returns</em>: dict[str, float]_",id:"statsreturns-dictstr-float_",level:4},{value:"ensure_plotting(func)",id:"ensure_plottingfunc",level:3}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"backtest",children:"Backtest"})}),"\n",(0,r.jsx)(n.p,{children:"The backtest subpackage groups components relating to backtesting."}),"\n",(0,r.jsx)(n.p,{children:"This module provides a data client for backtesting."}),"\n",(0,r.jsxs)(n.h3,{id:"class-backtestdataclient",children:[(0,r.jsx)(n.em,{children:"class"})," BacktestDataClient"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/data#nautilus_trader.data.client.DataClient",children:(0,r.jsx)(n.code,{children:"DataClient"})})]}),"\n",(0,r.jsx)(n.p,{children:"BacktestDataClient(ClientId client_id, MessageBus msgbus, Cache cache, Clock clock, config: NautilusConfig | None = None) -> None"}),"\n",(0,r.jsx)(n.p,{children:"Provides an implementation of DataClient for backtesting."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})}),") \u2013 The data client ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"msgbus"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.MessageBus",children:(0,r.jsx)(n.em,{children:"MessageBus"})}),") \u2013 The message bus for the client."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"cache"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/cache#nautilus_trader.cache.Cache",children:(0,r.jsx)(n.em,{children:"Cache"})}),") \u2013 The cache for the client."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"clock"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.Clock",children:(0,r.jsx)(n.em,{children:"Clock"})}),") \u2013 The clock for the client."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"config"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.common.config.NautilusConfig",children:(0,r.jsx)(n.em,{children:"NautilusConfig"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The configuration for the instance."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"degradeself--void",children:"degrade(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Degrade the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_degrade() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"DEGRADING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"disposeself--void",children:"dispose(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Dispose of the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_dispose() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"DISPOSING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-1",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"faultself--void",children:"fault(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Fault the component."}),"\n",(0,r.jsx)(n.p,{children:"Calling this method multiple times has the same effect as calling it once (it is idempotent). Once called, it cannot be reversed, and no other methods should be called on this instance."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_fault() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"FAULTING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-2",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsxs)(n.h4,{id:"classmethod-fully_qualified_namecls--str",children:[(0,r.jsx)(n.em,{children:"classmethod"})," fully_qualified_name(cls) \u2192 str"]}),"\n",(0,r.jsx)(n.p,{children:"Return the fully qualified name for the components class."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"id",children:"id"}),"\n",(0,r.jsx)(n.p,{children:"The components ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," ComponentId"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_connected",children:"is_connected"}),"\n",(0,r.jsx)(n.p,{children:"If the client is connected."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_degraded",children:"is_degraded"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"DEGRADED"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_degraded"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_disposed",children:"is_disposed"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"DISPOSED"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_disposed"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_faulted",children:"is_faulted"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"FAULTED"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_faulted"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_initialized",children:"is_initialized"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the component has been initialized (component.state >= ",(0,r.jsx)(n.code,{children:"INITIALIZED"}),")."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_initialized"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_running",children:"is_running"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_running"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_stopped",children:"is_stopped"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"STOPPED"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_stopped"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"requestself-requestdata-request--void",children:"request(self, RequestData request) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"resetself--void",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Reset the component."}),"\n",(0,r.jsx)(n.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_reset() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"RESETTING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-3",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"resumeself--void",children:"resume(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Resume the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_resume() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"RESUMING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-4",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"shutdown_systemself-str-reasonnone--void",children:"shutdown_system(self, str reason=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Initiate a system-wide shutdown by generating and publishing a ShutdownSystem command."}),"\n",(0,r.jsx)(n.p,{children:"The command is handled by the system\u2019s NautilusKernel, which will invoke either stop (synchronously) or stop_async (asynchronously) depending on the execution context and the presence of an active event loop."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"reason"})," (",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The reason for issuing the shutdown command."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"startself--void",children:"start(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Start the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_start() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"STARTING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-5",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"state",children:"state"}),"\n",(0,r.jsx)(n.p,{children:"ComponentState"}),"\n",(0,r.jsx)(n.p,{children:"Return the components current state."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ComponentState"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.state"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"stopself--void",children:"stop(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Stop the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_stop() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"STOPPING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-6",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"subscribeself-subscribedata-command--void",children:"subscribe(self, SubscribeData command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"subscribed_custom_dataself--list",children:"subscribed_custom_data(self) \u2192 list"}),"\n",(0,r.jsx)(n.p,{children:"Return the custom data types subscribed to."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.DataType",children:"DataType"}),"]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"trader_id",children:"trader_id"}),"\n",(0,r.jsx)(n.p,{children:"The trader ID associated with the component."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," TraderId"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"type",children:"type"}),"\n",(0,r.jsx)(n.p,{children:"The components type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," type"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribeself-unsubscribedata-command--void",children:"unsubscribe(self, UnsubscribeData command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"venue",children:"venue"}),"\n",(0,r.jsx)(n.p,{children:"The clients venue ID (if applicable)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," Venue or ",(0,r.jsx)(n.code,{children:"None"})]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"class-backtestmarketdataclient",children:[(0,r.jsx)(n.em,{children:"class"})," BacktestMarketDataClient"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/data#nautilus_trader.data.client.MarketDataClient",children:(0,r.jsx)(n.code,{children:"MarketDataClient"})})]}),"\n",(0,r.jsx)(n.p,{children:"BacktestMarketDataClient(ClientId client_id, MessageBus msgbus, Cache cache, Clock clock)"}),"\n",(0,r.jsx)(n.p,{children:"Provides an implementation of MarketDataClient for backtesting."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})}),") \u2013 The data client ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"msgbus"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.MessageBus",children:(0,r.jsx)(n.em,{children:"MessageBus"})}),") \u2013 The message bus for the client."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"cache"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/cache#nautilus_trader.cache.Cache",children:(0,r.jsx)(n.em,{children:"Cache"})}),") \u2013 The cache for the client."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"clock"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.Clock",children:(0,r.jsx)(n.em,{children:"Clock"})}),") \u2013 The clock for the client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"degradeself--void-1",children:"degrade(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Degrade the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_degrade() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"DEGRADING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-7",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"disposeself--void-1",children:"dispose(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Dispose of the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_dispose() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"DISPOSING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-8",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"faultself--void-1",children:"fault(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Fault the component."}),"\n",(0,r.jsx)(n.p,{children:"Calling this method multiple times has the same effect as calling it once (it is idempotent). Once called, it cannot be reversed, and no other methods should be called on this instance."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_fault() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"FAULTING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-9",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsxs)(n.h4,{id:"classmethod-fully_qualified_namecls--str-1",children:[(0,r.jsx)(n.em,{children:"classmethod"})," fully_qualified_name(cls) \u2192 str"]}),"\n",(0,r.jsx)(n.p,{children:"Return the fully qualified name for the components class."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"id-1",children:"id"}),"\n",(0,r.jsx)(n.p,{children:"The components ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," ComponentId"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_connected-1",children:"is_connected"}),"\n",(0,r.jsx)(n.p,{children:"If the client is connected."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_degraded-1",children:"is_degraded"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"DEGRADED"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_degraded"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_disposed-1",children:"is_disposed"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"DISPOSED"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_disposed"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_faulted-1",children:"is_faulted"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"FAULTED"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_faulted"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_initialized-1",children:"is_initialized"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the component has been initialized (component.state >= ",(0,r.jsx)(n.code,{children:"INITIALIZED"}),")."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_initialized"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_running-1",children:"is_running"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_running"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_stopped-1",children:"is_stopped"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"STOPPED"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_stopped"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"requestself-requestdata-request--void-1",children:"request(self, RequestData request) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Request data for the given data type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"request"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/data#nautilus_trader.data.messages.RequestData",children:(0,r.jsx)(n.em,{children:"RequestData"})}),") \u2013 The message for the data request."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"request_barsself-requestbars-request--void",children:"request_bars(self, RequestBars request) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"request_instrumentself-requestinstrument-request--void",children:"request_instrument(self, RequestInstrument request) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"request_instrumentsself-requestinstruments-request--void",children:"request_instruments(self, RequestInstruments request) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"request_order_book_snapshotself-requestorderbooksnapshot-request--void",children:"request_order_book_snapshot(self, RequestOrderBookSnapshot request) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"request_quote_ticksself-requestquoteticks-request--void",children:"request_quote_ticks(self, RequestQuoteTicks request) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"request_trade_ticksself-requesttradeticks-request--void",children:"request_trade_ticks(self, RequestTradeTicks request) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"resetself--void-1",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Reset the component."}),"\n",(0,r.jsx)(n.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_reset() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"RESETTING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-10",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"resumeself--void-1",children:"resume(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Resume the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_resume() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"RESUMING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-11",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"shutdown_systemself-str-reasonnone--void-1",children:"shutdown_system(self, str reason=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Initiate a system-wide shutdown by generating and publishing a ShutdownSystem command."}),"\n",(0,r.jsx)(n.p,{children:"The command is handled by the system\u2019s NautilusKernel, which will invoke either stop (synchronously) or stop_async (asynchronously) depending on the execution context and the presence of an active event loop."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"reason"})," (",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The reason for issuing the shutdown command."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"startself--void-1",children:"start(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Start the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_start() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"STARTING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-12",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"state-1",children:"state"}),"\n",(0,r.jsx)(n.p,{children:"ComponentState"}),"\n",(0,r.jsx)(n.p,{children:"Return the components current state."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ComponentState"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.state"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"stopself--void-1",children:"stop(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Stop the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_stop() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"STOPPING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-13",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"subscribeself-subscribedata-command--void-1",children:"subscribe(self, SubscribeData command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_barsself-subscribebars-command--void",children:"subscribe_bars(self, SubscribeBars command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_funding_ratesself-subscribefundingrates-command--void",children:"subscribe_funding_rates(self, SubscribeFundingRates command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_index_pricesself-subscribeindexprices-command--void",children:"subscribe_index_prices(self, SubscribeIndexPrices command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_instrumentself-subscribeinstrument-command--void",children:"subscribe_instrument(self, SubscribeInstrument command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_instrument_closeself-subscribeinstrumentclose-command--void",children:"subscribe_instrument_close(self, SubscribeInstrumentClose command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_instrument_statusself-subscribeinstrumentstatus-command--void",children:"subscribe_instrument_status(self, SubscribeInstrumentStatus command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_instrumentsself-subscribeinstruments-command--void",children:"subscribe_instruments(self, SubscribeInstruments command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_mark_pricesself-subscribemarkprices-command--void",children:"subscribe_mark_prices(self, SubscribeMarkPrices command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_order_book_deltasself-subscribeorderbook-command--void",children:"subscribe_order_book_deltas(self, SubscribeOrderBook command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_order_book_snapshotsself-subscribeorderbook-command--void",children:"subscribe_order_book_snapshots(self, SubscribeOrderBook command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_quote_ticksself-subscribequoteticks-command--void",children:"subscribe_quote_ticks(self, SubscribeQuoteTicks command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_trade_ticksself-subscribetradeticks-command--void",children:"subscribe_trade_ticks(self, SubscribeTradeTicks command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"subscribed_barsself--list",children:"subscribed_bars(self) \u2192 list"}),"\n",(0,r.jsx)(n.p,{children:"Return the bar types subscribed to."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.BarType",children:"BarType"}),"]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribed_custom_dataself--list-1",children:"subscribed_custom_data(self) \u2192 list"}),"\n",(0,r.jsx)(n.p,{children:"Return the custom data types subscribed to."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.DataType",children:"DataType"}),"]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribed_funding_ratesself--list",children:"subscribed_funding_rates(self) \u2192 list"}),"\n",(0,r.jsx)(n.p,{children:"Return the funding rate update instruments subscribed to."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:"InstrumentId"}),"]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribed_index_pricesself--list",children:"subscribed_index_prices(self) \u2192 list"}),"\n",(0,r.jsx)(n.p,{children:"Return the index price update instruments subscribed to."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:"InstrumentId"}),"]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribed_instrument_closeself--list",children:"subscribed_instrument_close(self) \u2192 list"}),"\n",(0,r.jsx)(n.p,{children:"Return the instrument closes subscribed to."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:"InstrumentId"}),"]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribed_instrument_statusself--list",children:"subscribed_instrument_status(self) \u2192 list"}),"\n",(0,r.jsx)(n.p,{children:"Return the status update instruments subscribed to."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:"InstrumentId"}),"]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribed_instrumentsself--list",children:"subscribed_instruments(self) \u2192 list"}),"\n",(0,r.jsx)(n.p,{children:"Return the instruments subscribed to."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:"InstrumentId"}),"]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribed_mark_pricesself--list",children:"subscribed_mark_prices(self) \u2192 list"}),"\n",(0,r.jsx)(n.p,{children:"Return the mark price update instruments subscribed to."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:"InstrumentId"}),"]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribed_order_book_deltasself--list",children:"subscribed_order_book_deltas(self) \u2192 list"}),"\n",(0,r.jsx)(n.p,{children:"Return the order book delta instruments subscribed to."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:"InstrumentId"}),"]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribed_order_book_snapshotsself--list",children:"subscribed_order_book_snapshots(self) \u2192 list"}),"\n",(0,r.jsx)(n.p,{children:"Return the order book snapshot instruments subscribed to."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:"InstrumentId"}),"]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribed_quote_ticksself--list",children:"subscribed_quote_ticks(self) \u2192 list"}),"\n",(0,r.jsx)(n.p,{children:"Return the quote tick instruments subscribed to."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:"InstrumentId"}),"]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribed_trade_ticksself--list",children:"subscribed_trade_ticks(self) \u2192 list"}),"\n",(0,r.jsx)(n.p,{children:"Return the trade tick instruments subscribed to."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:"InstrumentId"}),"]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"trader_id-1",children:"trader_id"}),"\n",(0,r.jsx)(n.p,{children:"The trader ID associated with the component."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," TraderId"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"type-1",children:"type"}),"\n",(0,r.jsx)(n.p,{children:"The components type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," type"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribeself-unsubscribedata-command--void-1",children:"unsubscribe(self, UnsubscribeData command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_barsself-unsubscribebars-command--void",children:"unsubscribe_bars(self, UnsubscribeBars command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_funding_ratesself-unsubscribefundingrates-command--void",children:"unsubscribe_funding_rates(self, UnsubscribeFundingRates command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_index_pricesself-unsubscribeindexprices-command--void",children:"unsubscribe_index_prices(self, UnsubscribeIndexPrices command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_instrumentself-unsubscribeinstrument-command--void",children:"unsubscribe_instrument(self, UnsubscribeInstrument command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_instrument_closeself-unsubscribeinstrumentclose-command--void",children:"unsubscribe_instrument_close(self, UnsubscribeInstrumentClose command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_instrument_statusself-unsubscribeinstrumentstatus-command--void",children:"unsubscribe_instrument_status(self, UnsubscribeInstrumentStatus command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_instrumentsself-unsubscribeinstruments-command--void",children:"unsubscribe_instruments(self, UnsubscribeInstruments command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_mark_pricesself-unsubscribemarkprices-command--void",children:"unsubscribe_mark_prices(self, UnsubscribeMarkPrices command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_order_book_deltasself-unsubscribeorderbook-command--void",children:"unsubscribe_order_book_deltas(self, UnsubscribeOrderBook command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_order_book_snapshotsself-unsubscribeorderbook-command--void",children:"unsubscribe_order_book_snapshots(self, UnsubscribeOrderBook command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_quote_ticksself-unsubscribequoteticks-command--void",children:"unsubscribe_quote_ticks(self, UnsubscribeQuoteTicks command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_trade_ticksself-unsubscribetradeticks-command--void",children:"unsubscribe_trade_ticks(self, UnsubscribeTradeTicks command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"venue-1",children:"venue"}),"\n",(0,r.jsx)(n.p,{children:"The clients venue ID (if applicable)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," Venue or ",(0,r.jsx)(n.code,{children:"None"})]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"class-backtestdataiterator",children:[(0,r.jsx)(n.em,{children:"class"})," BacktestDataIterator"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.code,{children:"object"})]}),"\n",(0,r.jsx)(n.p,{children:"BacktestDataIterator() -> None"}),"\n",(0,r.jsxs)(n.p,{children:["Time-ordered multiplexer for historical ",(0,r.jsx)(n.code,{children:"Data"})," streams in backtesting."]}),"\n",(0,r.jsxs)(n.p,{children:["The iterator efficiently manages multiple data streams and yields ",(0,r.jsx)(n.code,{children:"Data"})," objects in strict chronological order based on their ",(0,r.jsx)(n.code,{children:"ts_init"})," timestamps. It supports both static data lists and dynamic data generators for streaming large datasets."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Architecture:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u200b",(0,r.jsx)(n.strong,{children:"Single-stream optimization"}),"\u200b: When exactly one stream is loaded, uses a fast array walk for optimal performance."]}),"\n",(0,r.jsxs)(n.li,{children:["\u200b",(0,r.jsx)(n.strong,{children:"Multi-stream merging"}),"\u200b: With two or more streams, employs a binary min-heap to perform efficient k-way merge sorting."]}),"\n",(0,r.jsxs)(n.li,{children:["\u200b",(0,r.jsx)(n.strong,{children:"Dynamic streaming"}),"\u200b: Supports Python generators that yield data chunks on-demand, enabling processing of datasets larger than available memory."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Stream Priority:"})}),"\n",(0,r.jsxs)(n.p,{children:["Streams can be assigned different priorities using the ",(0,r.jsx)(n.code,{children:"append_data"})," parameter:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"append_data=True"})," (default): Lower priority, processed after existing streams"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"append_data=False"}),": Higher priority, processed before existing streams"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"When multiple data points have identical timestamps, higher priority streams are yielded first."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Performance Characteristics:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u200b",(0,r.jsx)(n.strong,{children:"Memory efficient"}),"\u200b: Dynamic generators load data incrementally"]}),"\n",(0,r.jsxs)(n.li,{children:["\u200b",(0,r.jsx)(n.strong,{children:"Time complexity"}),"\u200b: O(log n) per item for n streams (heap operations)"]}),"\n",(0,r.jsxs)(n.li,{children:["\u200b",(0,r.jsx)(n.strong,{children:"Space complexity"}),"\u200b: O(k) where k is the total number of active data points across all streams at any given time"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"empty_data_callback"})," (",(0,r.jsx)(n.em,{children:"Callable"})," ",(0,r.jsx)(n.em,{children:"["})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"int"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"None"})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Called once per stream when it is exhausted. Arguments are the stream name and the final ",(0,r.jsx)(n.code,{children:"ts_init"})," timestamp observed."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"see-also",children:"SEE ALSO"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.engine.BacktestEngine.add_data",children:(0,r.jsx)(n.code,{children:"BacktestEngine.add_data"})})," : Add static data to the backtest engine"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.engine.BacktestEngine.add_data_iterator",children:(0,r.jsx)(n.code,{children:"BacktestEngine.add_data_iterator"})})," : Add streaming data generators"]}),"\n",(0,r.jsx)(n.h4,{id:"add_dataself-data_name-list-data-bool-append_datatrue",children:"add_data(self, data_name, list data, bool append_data=True)"}),"\n",(0,r.jsx)(n.p,{children:"Add (or replace) a named, pre-sorted data list for static data loading."}),"\n",(0,r.jsxs)(n.p,{children:["If a stream with the same ",(0,r.jsx)(n.code,{children:"data_name"})," already exists, it will be replaced with the new data."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"data_name"})," (\u200b",(0,r.jsx)(n.em,{children:"str"}),"\u200b) \u2013 Unique identifier for the data stream."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"data"})," (",(0,r.jsx)(n.em,{children:"list"})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,r.jsx)(n.em,{children:"Data"})})," \u200b*]*\u200b) \u2013 Data instances sorted ascending by ts_init."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"append_data"})," (bool, default ",(0,r.jsx)(n.code,{children:"True"}),") \u2013 Controls stream priority for timestamp ties: ",(0,r.jsx)(n.code,{children:"True"})," \u2013 lower priority (appended). ",(0,r.jsx)(n.code,{children:"False"})," \u2013 higher priority (prepended)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"})," ",(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If data_name is not a valid string."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"all_dataself--dict",children:"all_data(self) \u2192 dict"}),"\n",(0,r.jsxs)(n.p,{children:["Return a ",(0,r.jsx)(n.em,{children:"shallow"})," mapping of ",(0,r.jsx)(n.code,{children:"{stream_name: list[Data]}"}),"."]}),"\n",(0,r.jsx)(n.h4,{id:"dataself-str-data_name--list",children:"data(self, str data_name) \u2192 list"}),"\n",(0,r.jsx)(n.p,{children:"Return the underlying data list for data_name."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:"Data"}),"]"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If data_name is not a valid string."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"KeyError"})," \u2013 If the stream is unknown."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"init_dataself-str-data_name-data_generator-bool-append_datatrue",children:"init_data(self, str data_name, data_generator, bool append_data=True)"}),"\n",(0,r.jsx)(n.p,{children:"Add (or replace) a named data generator for streaming large datasets."}),"\n",(0,r.jsx)(n.p,{children:"This method enables memory-efficient processing of large datasets by using Python generators that yield data chunks on-demand. The generator is called incrementally as data is consumed, allowing datasets larger than available memory to be processed."}),"\n",(0,r.jsxs)(n.p,{children:["The generator should yield lists of ",(0,r.jsx)(n.code,{children:"Data"})," objects, where each list represents a chunk of data. When a chunk is exhausted, the iterator automatically calls ",(0,r.jsx)(n.code,{children:"next()"})," on the generator to fetch the next chunk."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"data_name"})," (\u200b",(0,r.jsx)(n.em,{children:"str"}),"\u200b) \u2013 Unique identifier for the data stream."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"data_generator"})," (",(0,r.jsx)(n.em,{children:"Generator"})," *[*",(0,r.jsx)(n.em,{children:"list"})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,r.jsx)(n.em,{children:"Data"})})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"None"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"None"})," \u200b*]*\u200b) \u2013 A Python generator that yields lists of ",(0,r.jsx)(n.code,{children:"Data"})," instances sorted ascending by ts_init."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"append_data"})," (bool, default ",(0,r.jsx)(n.code,{children:"True"}),") \u2013 Controls stream priority for timestamp ties: ",(0,r.jsx)(n.code,{children:"True"})," \u2013 lower priority (appended). ",(0,r.jsx)(n.code,{children:"False"})," \u2013 higher priority (prepended)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"})," ",(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If data_name is not a valid string."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_doneself--bool",children:"is_done(self) \u2192 bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return ",(0,r.jsx)(n.code,{children:"True"})," when every stream has been fully consumed."]}),"\n",(0,r.jsxs)(n.h4,{id:"nextself--data",children:["next(self) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:"Data"})]}),"\n",(0,r.jsxs)(n.p,{children:["Return the next ",(0,r.jsx)(n.code,{children:"Data"})," object in chronological order."]}),"\n",(0,r.jsxs)(n.p,{children:["This method implements the core iteration logic, yielding data points from all streams in strict chronological order based on ",(0,r.jsx)(n.code,{children:"ts_init"})," timestamps. When multiple data points have identical timestamps, stream priority determines the order."]}),"\n",(0,r.jsx)(n.p,{children:"The method automatically handles:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Single-stream optimization for performance"}),"\n",(0,r.jsx)(n.li,{children:"Multi-stream heap-based merging"}),"\n",(0,r.jsx)(n.li,{children:"Dynamic data loading from generators"}),"\n",(0,r.jsx)(n.li,{children:"Stream exhaustion and cleanup"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The next ",(0,r.jsx)(n.code,{children:"Data"})," object in chronological order, or ",(0,r.jsx)(n.code,{children:"None"})," when all streams are exhausted."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:"Data"})," or None"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"remove_dataself-str-data_name-bool-complete_removefalse--void",children:"remove_data(self, str data_name, bool complete_remove=False) \u2192 void"}),"\n",(0,r.jsxs)(n.p,{children:["Remove the data stream identified by ",(0,r.jsx)(n.code,{children:"data_name"}),". The operation is silently ignored if the specified stream does not exist."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"data_name"})," (\u200b",(0,r.jsx)(n.em,{children:"str"}),"\u200b) \u2013 The unique identifier of the data stream to remove."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"complete_remove"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default False"}),"\u200b) \u2013\nControls the level of cleanup performed:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"False"}),": Remove stream data but preserve generator function for potential"]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"re-initialization (useful for temporary stream removal)"}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"True"}),": Complete removal including any associated generator function (recommended for permanent stream removal)"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Raises:"})," ",(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If data_name is not a valid string."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"set_indexself-str-data_name-int-index--void",children:"set_index(self, str data_name, int index) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Move the cursor of data_name to index and rebuild ordering."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"})," ",(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If data_name is not a valid string."]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"class-backtestengine",children:[(0,r.jsx)(n.em,{children:"class"})," BacktestEngine"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.code,{children:"object"})]}),"\n",(0,r.jsx)(n.p,{children:"BacktestEngine(config: BacktestEngineConfig | None = None) -> None"}),"\n",(0,r.jsx)(n.p,{children:"Provides a backtest engine to run a portfolio of strategies over historical data."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"config"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.backtest.config.BacktestEngineConfig",children:(0,r.jsx)(n.em,{children:"BacktestEngineConfig"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The configuration for the instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"})," ",(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If config is not of type BacktestEngineConfig."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"add_actorself-actor-actor-actor--none",children:"add_actor(self, Actor actor: Actor) \u2192 None"}),"\n",(0,r.jsx)(n.p,{children:"Add the given actor to the backtest engine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"actor"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:(0,r.jsx)(n.em,{children:"Actor"})}),") \u2013 The actor to add."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"add_actorsself-list-actors-listactor--none",children:"add_actors(self, list actors: list[Actor]) \u2192 None"}),"\n",(0,r.jsx)(n.p,{children:"Add the given list of actors to the backtest engine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"actors"})," (",(0,r.jsx)(n.em,{children:"list"})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:(0,r.jsx)(n.em,{children:"Actor"})})," \u200b*]*\u200b) \u2013 The actors to add."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"add_dataself-list-data-clientid-client_idnone-bool-validatetrue-bool-sorttrue--none",children:"add_data(self, list data, ClientId client_id=None, bool validate=True, bool sort=True) \u2192 None"}),"\n",(0,r.jsx)(n.p,{children:"Add the given data to the backtest engine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"data"})," (",(0,r.jsx)(n.em,{children:"list"})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,r.jsx)(n.em,{children:"Data"})})," \u200b*]*\u200b) \u2013 The data to add."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The client ID to associate with the data."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"validate"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If data should be validated (recommended when adding data directly to the engine)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"sort"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If data should be sorted by ts_init with the rest of the stream after adding (recommended when adding data directly to the engine)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If data is empty."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If data contains objects which are not a type of Data."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If instrument_id for the data is not found in the cache."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If data elements do not have an instrument_id and client_id is ",(0,r.jsx)(n.code,{children:"None"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If data is a Rust PyO3 data type (cannot add directly to engine yet)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-14",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Assumes all data elements are of the same type. Adding lists of varying data types could result in incorrect backtest logic."}),"\n",(0,r.jsx)(n.p,{children:"Caution if adding data without sort being True, as this could lead to running backtests on a stream which does not have monotonically increasing timestamps."}),"\n",(0,r.jsx)(n.h4,{id:"add_data_iteratorself-str-data_name-generator-generatorlistdata-none-none-clientid-client_idnone--none",children:"add_data_iterator(self, str data_name, generator: Generator[list[Data], None, None], ClientId client_id=None) \u2192 None"}),"\n",(0,r.jsxs)(n.p,{children:["Add a single stream generator that yields ",(0,r.jsx)(n.code,{children:"list[Data]"})," objects for the low-level streaming backtest API."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"data_name"})," (\u200b",(0,r.jsx)(n.em,{children:"str"}),"\u200b) \u2013 The name identifier for the data stream."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"generator"})," (",(0,r.jsx)(n.em,{children:"Generator"})," *[*",(0,r.jsx)(n.em,{children:"list"})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,r.jsx)(n.em,{children:"Data"})})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"None"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"None"})," \u200b*]*\u200b) \u2013 A Python generator that yields lists of ",(0,r.jsx)(n.code,{children:"Data"})," objects."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The client ID to associate with the data."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"add_exec_algorithmself-execalgorithm-exec_algorithm-execalgorithm--none",children:"add_exec_algorithm(self, ExecAlgorithm exec_algorithm: ExecAlgorithm) \u2192 None"}),"\n",(0,r.jsx)(n.p,{children:"Add the given execution algorithm to the backtest engine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"exec_algorithm"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/execution#nautilus_trader.execution.algorithm.ExecAlgorithm",children:(0,r.jsx)(n.em,{children:"ExecAlgorithm"})}),") \u2013 The execution algorithm to add."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"add_exec_algorithmsself-list-exec_algorithms-listexecalgorithm--none",children:"add_exec_algorithms(self, list exec_algorithms: list[ExecAlgorithm]) \u2192 None"}),"\n",(0,r.jsx)(n.p,{children:"Add the given list of execution algorithms to the backtest engine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"exec_algorithms"})," (",(0,r.jsx)(n.em,{children:"list"})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/execution#nautilus_trader.execution.algorithm.ExecAlgorithm",children:(0,r.jsx)(n.em,{children:"ExecAlgorithm"})})," \u200b*]*\u200b) \u2013 The execution algorithms to add."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"add_instrumentself-instrument-instrument--none",children:"add_instrument(self, Instrument instrument) \u2192 None"}),"\n",(0,r.jsx)(n.p,{children:"Add the instrument to the backtest engine."}),"\n",(0,r.jsxs)(n.p,{children:["The instrument must be valid for its associated venue. For instance, derivative instruments which would trade on margin cannot be added to a venue with a ",(0,r.jsx)(n.code,{children:"CASH"})," account."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"instrument"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.Instrument",children:(0,r.jsx)(n.em,{children:"Instrument"})}),") \u2013 The instrument to add."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.common.config.InvalidConfiguration",children:(0,r.jsx)(n.strong,{children:"InvalidConfiguration"})})," \u2013 If the venue for the instrument has not been added to the engine."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.common.config.InvalidConfiguration",children:(0,r.jsx)(n.strong,{children:"InvalidConfiguration"})})," \u2013 If instrument is not valid for its associated venue."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"add_strategiesself-list-strategies-liststrategy--none",children:"add_strategies(self, list strategies: list[Strategy]) \u2192 None"}),"\n",(0,r.jsx)(n.p,{children:"Add the given list of strategies to the backtest engine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"strategies"})," (",(0,r.jsx)(n.em,{children:"list"})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.Strategy",children:(0,r.jsx)(n.em,{children:"Strategy"})})," \u200b*]*\u200b) \u2013 The strategies to add."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"add_strategyself-strategy-strategy-strategy--none",children:"add_strategy(self, Strategy strategy: Strategy) \u2192 None"}),"\n",(0,r.jsx)(n.p,{children:"Add the given strategy to the backtest engine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"strategy"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.Strategy",children:(0,r.jsx)(n.em,{children:"Strategy"})}),") \u2013 The strategy to add."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"add_venueself-venue-venue-venue-omstype-oms_type-omstype-accounttype-account_type-accounttype-list-starting_balances-listmoney-currency-base_currency-currency--none--none-default_leverage-decimal--none--none-dict-leverages-dictinstrumentid-decimal--none--none-marginmodel-margin_model-marginmodel--none-list-modules-listsimulationmodule--none--none-fillmodel-fill_model-fillmodel--none--none-feemodel-fee_model-feemodel--none--none-latencymodel-latency_model-latencymodel--none--none-booktype-book_type-booktype--booktypel1_mbp-routing-bool--false-reject_stop_orders-bool--true-support_gtd_orders-bool--true-support_contingent_orders-bool--true-use_position_ids-bool--true-use_random_ids-bool--false-use_reduce_only-bool--true-use_message_queue-bool--true-bar_execution-bool--true-bar_adaptive_high_low_ordering-bool--false-trade_execution-bool--false-allow_cash_borrowing-bool--false-frozen_account-bool--false--none",children:"add_venue(self, Venue venue: Venue, OmsType oms_type: OmsType, AccountType account_type: AccountType, list starting_balances: list[Money], Currency base_currency: Currency | None = None, default_leverage: Decimal | None = None, dict leverages: dict[InstrumentId, Decimal] | None = None, MarginModel margin_model: MarginModel = None, list modules: list[SimulationModule] | None = None, FillModel fill_model: FillModel | None = None, FeeModel fee_model: FeeModel | None = None, LatencyModel latency_model: LatencyModel | None = None, BookType book_type: BookType = BookType.L1_MBP, routing: bool = False, reject_stop_orders: bool = True, support_gtd_orders: bool = True, support_contingent_orders: bool = True, use_position_ids: bool = True, use_random_ids: bool = False, use_reduce_only: bool = True, use_message_queue: bool = True, bar_execution: bool = True, bar_adaptive_high_low_ordering: bool = False, trade_execution: bool = False, allow_cash_borrowing: bool = False, frozen_account: bool = False) \u2192 None"}),"\n",(0,r.jsx)(n.p,{children:"Add a SimulatedExchange with the given parameters to the backtest engine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"venue"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.Venue",children:(0,r.jsx)(n.em,{children:"Venue"})}),") \u2013 The venue ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"oms_type"})," (OmsType ","NETTING",") \u2013 The order management system type for the exchange. If ",(0,r.jsx)(n.code,{children:"HEDGING"})," will generate new position IDs."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"account_type"})," (\u200b",(0,r.jsx)(n.em,{children:"AccountType"}),"\u200b) \u2013 The account type for the exchange."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"starting_balances"})," (",(0,r.jsx)(n.em,{children:"list"})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Money",children:(0,r.jsx)(n.em,{children:"Money"})})," \u200b*]*\u200b) \u2013 The starting account balances (specify one for a single asset account)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"base_currency"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Currency",children:(0,r.jsx)(n.em,{children:"Currency"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The account base currency for the client. Use ",(0,r.jsx)(n.code,{children:"None"})," for multi-currency accounts."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"default_leverage"})," (",(0,r.jsx)(n.em,{children:"Decimal"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The account default leverage (for margin accounts)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"leverages"})," (",(0,r.jsx)(n.em,{children:"dict"})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Decimal"})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The instrument specific leverage configuration (for margin accounts)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"margin_model"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.backtest.config.MarginModelConfig",children:(0,r.jsx)(n.em,{children:"MarginModelConfig"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The margin calculation model configuration. Default \u2018leveraged\u2019."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"modules"})," (",(0,r.jsx)(n.em,{children:"list"})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.modules.SimulationModule",children:(0,r.jsx)(n.em,{children:"SimulationModule"})})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The simulation modules to load into the exchange."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"fill_model"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.FillModel",children:(0,r.jsx)(n.em,{children:"FillModel"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The fill model for the exchange."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"fee_model"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.FeeModel",children:(0,r.jsx)(n.em,{children:"FeeModel"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The fee model for the venue."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"latency_model"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.LatencyModel",children:(0,r.jsx)(n.em,{children:"LatencyModel"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The latency model for the exchange."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"book_type"})," (BookType, default ",(0,r.jsx)(n.code,{children:"BookType.L1_MBP"}),") \u2013 The default order book type."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"routing"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If multi-venue routing should be enabled for the execution client."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"reject_stop_orders"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If stop orders are rejected on submission if trigger price is in the market."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"support_gtd_orders"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If orders with GTD time in force will be supported by the venue."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"support_contingent_orders"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If contingent orders will be supported/respected by the venue. If False, then it\u2019s expected the strategy will be managing any contingent orders."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"use_position_ids"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If venue position IDs will be generated on order fills."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"use_random_ids"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If all venue generated identifiers will be random UUID4\u2019s."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"use_reduce_only"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If the reduce_only execution instruction on orders will be honored."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"use_message_queue"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If an internal message queue should be used to process trading commands in sequence after they have initially arrived. Setting this to False would be appropriate for real-time sandbox environments, where we don\u2019t want to introduce additional latency of waiting for the next data event before processing the trading command."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"bar_execution"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If bars should be processed by the matching engine(s) (and move the market)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"bar_adaptive_high_low_ordering"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 Determines whether the processing order of bar prices is adaptive based on a heuristic. This setting is only relevant when bar_execution is True. If False, bar prices are always processed in the fixed order: Open, High, Low, Close. If True, the processing order adapts with the heuristic:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"If High is closer to Open than Low then the processing order is Open, High, Low, Close."}),"\n",(0,r.jsx)(n.li,{children:"If Low is closer to Open than High then the processing order is Open, Low, High, Close."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"trade_execution"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If trades should be processed by the matching engine(s) (and move the market)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"allow_cash_borrowing"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If cash accounts should allow borrowing (negative balances)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"frozen_account"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If the account for this exchange is frozen (balances will not change)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"})," ",(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If venue is already registered with the engine."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"backtest_end",children:"backtest_end"}),"\n",(0,r.jsx)(n.p,{children:"pd.Timestamp | None"}),"\n",(0,r.jsx)(n.p,{children:"Return the last backtest run time range end (if run)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," pd.Timestamp or ",(0,r.jsx)(n.code,{children:"None"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," BacktestEngine.backtest_end"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"backtest_start",children:"backtest_start"}),"\n",(0,r.jsx)(n.p,{children:"pd.Timestamp | None"}),"\n",(0,r.jsx)(n.p,{children:"Return the last backtest run time range start (if run)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," pd.Timestamp or ",(0,r.jsx)(n.code,{children:"None"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," BacktestEngine.backtest_start"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"cache",children:"cache"}),"\n",(0,r.jsx)(n.p,{children:"CacheFacade"}),"\n",(0,r.jsx)(n.p,{children:"Return the engines internal read-only cache."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/cache#nautilus_trader.cache.base.CacheFacade",children:"CacheFacade"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," BacktestEngine.cache"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"change_fill_modelself-venue-venue-fillmodel-model--none",children:"change_fill_model(self, Venue venue, FillModel model) \u2192 None"}),"\n",(0,r.jsx)(n.p,{children:"Change the fill model for the exchange of the given venue."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"venue"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.Venue",children:(0,r.jsx)(n.em,{children:"Venue"})}),") \u2013 The venue of the simulated exchange."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"model"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.FillModel",children:(0,r.jsx)(n.em,{children:"FillModel"})}),") \u2013 The fill model to change to."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"clear_actorsself--none",children:"clear_actors(self) \u2192 None"}),"\n",(0,r.jsx)(n.p,{children:"Clear all actors from the engines internal trader."}),"\n",(0,r.jsx)(n.h4,{id:"clear_dataself--none",children:"clear_data(self) \u2192 None"}),"\n",(0,r.jsx)(n.p,{children:"Clear the engines internal data stream."}),"\n",(0,r.jsx)(n.p,{children:"Does not clear added instruments."}),"\n",(0,r.jsx)(n.h4,{id:"clear_exec_algorithmsself--none",children:"clear_exec_algorithms(self) \u2192 None"}),"\n",(0,r.jsx)(n.p,{children:"Clear all execution algorithms from the engines internal trader."}),"\n",(0,r.jsx)(n.h4,{id:"clear_strategiesself--none",children:"clear_strategies(self) \u2192 None"}),"\n",(0,r.jsx)(n.p,{children:"Clear all trading strategies from the engines internal trader."}),"\n",(0,r.jsx)(n.h4,{id:"data",children:"data"}),"\n",(0,r.jsx)(n.p,{children:"list[Data]"}),"\n",(0,r.jsx)(n.p,{children:"Return the engines internal data stream."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:"Data"}),"]"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," BacktestEngine.data"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"disposeself--none",children:"dispose(self) \u2192 None"}),"\n",(0,r.jsx)(n.p,{children:"Dispose of the backtest engine by disposing the trader and releasing system resources."}),"\n",(0,r.jsx)(n.p,{children:"Calling this method multiple times has the same effect as calling it once (it is idempotent). Once called, it cannot be reversed, and no other methods should be called on this instance."}),"\n",(0,r.jsx)(n.h4,{id:"dump_pickled_dataself--bytes",children:"dump_pickled_data(self) \u2192 bytes"}),"\n",(0,r.jsx)(n.p,{children:"Return the internal data stream pickled."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bytes"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"endself",children:"end(self)"}),"\n",(0,r.jsx)(n.p,{children:"Manually end the backtest."}),"\n",(0,r.jsxs)(n.h4,{id:"get_log_guardself--nautilus_pyo3logguard--logguard--none",children:["get_log_guard(self) \u2192 nautilus_pyo3.LogGuard | ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.LogGuard",children:"LogGuard"})," | None"]}),"\n",(0,r.jsx)(n.p,{children:"Return the global logging subsystems log guard."}),"\n",(0,r.jsxs)(n.p,{children:["May return ",(0,r.jsx)(n.code,{children:"None"})," if the logging subsystem was already initialized."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," nautilus_pyo3.LogGuard | ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.LogGuard",children:"LogGuard"})," | None"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"get_resultself",children:"get_result(self)"}),"\n",(0,r.jsx)(n.p,{children:"Return the backtest result from the last run."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.results.BacktestResult",children:"BacktestResult"})]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"instance_id",children:"instance_id"}),"\n",(0,r.jsx)(n.p,{children:"UUID4"}),"\n",(0,r.jsx)(n.p,{children:"Return the engines instance ID."}),"\n",(0,r.jsx)(n.p,{children:"This is a unique identifier per initialized engine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," BacktestEngine.instance_id"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"iteration",children:"iteration"}),"\n",(0,r.jsx)(n.p,{children:"int"}),"\n",(0,r.jsx)(n.p,{children:"Return the backtest engine iteration count."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," int"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," BacktestEngine.iteration"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"kernel",children:"kernel"}),"\n",(0,r.jsx)(n.p,{children:"NautilusKernel"}),"\n",(0,r.jsx)(n.p,{children:"Return the internal kernel for the engine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/system#nautilus_trader.system.kernel.NautilusKernel",children:"NautilusKernel"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," BacktestEngine.kernel"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"list_venuesself--listvenue",children:["list_venues(self) \u2192 list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.Venue",children:"Venue"}),"]"]}),"\n",(0,r.jsx)(n.p,{children:"Return the venues contained within the engine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.Venue",children:"Venue"}),"]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"load_pickled_dataself-bytes-data--none",children:"load_pickled_data(self, bytes data) \u2192 None"}),"\n",(0,r.jsx)(n.p,{children:"Load the given pickled data directly into the internal data stream."}),"\n",(0,r.jsx)(n.p,{children:"It is highly advised to only pass data to this method which was obtained through a call to .dump_pickled_data()."}),"\n",(0,r.jsx)(n.h4,{id:"warning-15",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"This low-level direct access method makes the following assumptions: : - The data contains valid Nautilus objects only, which inherit from Data."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The data was successfully pickled from a call to pickle.dumps()."}),"\n",(0,r.jsx)(n.li,{children:"The data was sorted prior to pickling."}),"\n",(0,r.jsx)(n.li,{children:"All required instruments have been added to the engine."}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"logger",children:"logger"}),"\n",(0,r.jsx)(n.p,{children:"Logger"}),"\n",(0,r.jsx)(n.p,{children:"Return the internal logger for the engine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.Logger",children:"Logger"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," BacktestEngine.logger"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"machine_id",children:"machine_id"}),"\n",(0,r.jsx)(n.p,{children:"str"}),"\n",(0,r.jsx)(n.p,{children:"Return the engines machine ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," str"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," BacktestEngine.machine_id"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"portfolio",children:"portfolio"}),"\n",(0,r.jsx)(n.p,{children:"PortfolioFacade"}),"\n",(0,r.jsx)(n.p,{children:"Return the engines internal read-only portfolio."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/portfolio#nautilus_trader.portfolio.PortfolioFacade",children:"PortfolioFacade"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," BacktestEngine.portfolio"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"resetself--none",children:"reset(self) \u2192 None"}),"\n",(0,r.jsx)(n.p,{children:"Reset the backtest engine."}),"\n",(0,r.jsx)(n.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(n.p,{children:"Note: instruments and data are not dropped/reset, this can be done through a separate call to .clear_data() if desired."}),"\n",(0,r.jsx)(n.h4,{id:"runself-start-datetime--str--int--none--none-end-datetime--str--int--none--none-str-run_config_id-str--none--none-streaming-bool--false--none",children:"run(self, start: datetime | str | int | None = None, end: datetime | str | int | None = None, str run_config_id: str | None = None, streaming: bool = False) \u2192 None"}),"\n",(0,r.jsx)(n.p,{children:"Run a backtest."}),"\n",(0,r.jsx)(n.p,{children:"At the end of the run the trader and strategies will be stopped, then post-run analysis performed."}),"\n",(0,r.jsx)(n.p,{children:"For datasets larger than available memory, use streaming mode with the following sequence:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Add initial data batch and strategies"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"Call run(streaming=True)"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:"Call clear_data()"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.ol,{start:"4",children:["\n",(0,r.jsx)(n.li,{children:"Add next batch of data stream"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.ol,{start:"5",children:["\n",(0,r.jsx)(n.li,{children:"Call run(streaming=False) or end() when processing the final batch"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"start"})," (",(0,r.jsx)(n.em,{children:"datetime"})," ",(0,r.jsx)(n.em,{children:"or"})," ",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:"or"})," ",(0,r.jsx)(n.em,{children:"int"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The start datetime (UTC) for the backtest run. If ",(0,r.jsx)(n.code,{children:"None"})," engine runs from the start of the data."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"end"})," (",(0,r.jsx)(n.em,{children:"datetime"})," ",(0,r.jsx)(n.em,{children:"or"})," ",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:"or"})," ",(0,r.jsx)(n.em,{children:"int"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) for the backtest run. If ",(0,r.jsx)(n.code,{children:"None"})," engine runs to the end of the data."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"run_config_id"})," (",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The tokenized BacktestRunConfig ID."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"streaming"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default False"}),"\u200b) \u2013\nControls data loading and processing mode:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"If False (default): Loads all data at once."}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"This is currently the only supported mode for custom data (e.g., option Greeks)."}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"If True, loads data in chunks for memory-efficient processing of large datasets."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Raises:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If no data has been added to the engine."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If the start is >= the end datetime."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"run_config_id",children:"run_config_id"}),"\n",(0,r.jsx)(n.p,{children:"str"}),"\n",(0,r.jsx)(n.p,{children:"Return the last backtest engine run config ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," str or ",(0,r.jsx)(n.code,{children:"None"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," BacktestEngine.run_config_id"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"run_finished",children:"run_finished"}),"\n",(0,r.jsx)(n.p,{children:"pd.Timestamp | None"}),"\n",(0,r.jsx)(n.p,{children:"Return when the last backtest run finished (if run)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," pd.Timestamp or ",(0,r.jsx)(n.code,{children:"None"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," BacktestEngine.run_finished"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"run_id",children:"run_id"}),"\n",(0,r.jsx)(n.p,{children:"UUID4"}),"\n",(0,r.jsx)(n.p,{children:"Return the last backtest engine run ID (if run)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," UUID4 or ",(0,r.jsx)(n.code,{children:"None"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," BacktestEngine.run_id"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"run_started",children:"run_started"}),"\n",(0,r.jsx)(n.p,{children:"pd.Timestamp | None"}),"\n",(0,r.jsx)(n.p,{children:"Return when the last backtest run started (if run)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," pd.Timestamp or ",(0,r.jsx)(n.code,{children:"None"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," BacktestEngine.run_started"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"set_default_market_data_clientself--none",children:"set_default_market_data_client(self) \u2192 None"}),"\n",(0,r.jsx)(n.h4,{id:"sort_dataself--none",children:"sort_data(self) \u2192 None"}),"\n",(0,r.jsx)(n.p,{children:"Sort the engines internal data stream."}),"\n",(0,r.jsx)(n.h4,{id:"trader",children:"trader"}),"\n",(0,r.jsx)(n.p,{children:"Trader"}),"\n",(0,r.jsx)(n.p,{children:"Return the engines internal trader."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.Trader",children:"Trader"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," BacktestEngine.trader"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"trader_id-2",children:"trader_id"}),"\n",(0,r.jsx)(n.p,{children:"TraderId"}),"\n",(0,r.jsx)(n.p,{children:"Return the engines trader ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.TraderId",children:"TraderId"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," BacktestEngine.trader_id"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"class-ordermatchingengine",children:[(0,r.jsx)(n.em,{children:"class"})," OrderMatchingEngine"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.code,{children:"object"})]}),"\n",(0,r.jsx)(n.p,{children:"OrderMatchingEngine(Instrument instrument, uint32_t raw_id, FillModel fill_model, FeeModel fee_model, BookType book_type, OmsType oms_type, AccountType account_type, MessageBus msgbus, CacheFacade cache, TestClock clock, bool reject_stop_orders=True, bool support_gtd_orders=True, bool support_contingent_orders=True, bool use_position_ids=True, bool use_random_ids=False, bool use_reduce_only=True, bool bar_execution=True, bool bar_adaptive_high_low_ordering=False, bool trade_execution=False) -> None"}),"\n",(0,r.jsx)(n.p,{children:"Provides an order matching engine for a single market."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.Instrument",children:(0,r.jsx)(n.em,{children:"Instrument"})}),") \u2013 The market instrument for the matching engine."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"raw_id"})," (\u200b",(0,r.jsx)(n.em,{children:"uint32_t"}),"\u200b) \u2013 The raw integer ID for the instrument."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"fill_model"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.FillModel",children:(0,r.jsx)(n.em,{children:"FillModel"})}),") \u2013 The fill model for the matching engine."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"fee_model"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.FeeModel",children:(0,r.jsx)(n.em,{children:"FeeModel"})}),") \u2013 The fee model for the matching engine."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"book_type"})," (\u200b",(0,r.jsx)(n.em,{children:"BookType"}),"\u200b) \u2013 The order book type for the engine."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"oms_type"})," (\u200b",(0,r.jsx)(n.em,{children:"OmsType"}),"\u200b) \u2013 The order management system type for the matching engine. Determines the generation and handling of venue position IDs."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"account_type"})," (\u200b",(0,r.jsx)(n.em,{children:"AccountType"}),"\u200b) \u2013 The account type for the matching engine. Determines allowable executions based on the instrument."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"msgbus"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.MessageBus",children:(0,r.jsx)(n.em,{children:"MessageBus"})}),") \u2013 The message bus for the matching engine."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"cache"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/cache#nautilus_trader.cache.base.CacheFacade",children:(0,r.jsx)(n.em,{children:"CacheFacade"})}),") \u2013 The read-only cache for the matching engine."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"clock"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.TestClock",children:(0,r.jsx)(n.em,{children:"TestClock"})}),") \u2013 The clock for the matching engine."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"logger"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.Logger",children:(0,r.jsx)(n.em,{children:"Logger"})}),") \u2013 The logger for the matching engine."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"bar_execution"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If bars should be processed by the matching engine (and move the market)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"trade_execution"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If trades should be processed by the matching engine (and move the market)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"reject_stop_orders"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If stop orders are rejected if already in the market on submitting."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"support_gtd_orders"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If orders with GTD time in force will be supported by the venue."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"support_contingent_orders"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If contingent orders will be supported/respected by the venue. If False, then its expected the strategy will be managing any contingent orders."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"use_position_ids"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If venue position IDs will be generated on order fills."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"use_random_ids"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If all venue generated identifiers will be random UUID4\u2019s."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"use_reduce_only"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If the reduce_only execution instruction on orders will be honored."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"auction_match_algo"})," (",(0,r.jsx)(n.em,{children:"Callable"})," ",(0,r.jsx)(n.em,{children:"["})," *[*",(0,r.jsx)(n.em,{children:"Ladder"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Ladder"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Tuple"})," *[*"]}),"List",(0,r.jsxs)(n.em,{children:[(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"List"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional"]}),"\u200b) \u2013 The auction matching algorithm."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"bar_adaptive_high_low_ordering"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 Determines whether the processing order of bar prices is adaptive based on a heuristic. This setting is only relevant when bar_execution is True. If False, bar prices are always processed in the fixed order: Open, High, Low, Close. If True, the processing order adapts with the heuristic:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"If High is closer to Open than Low then the processing order is Open, High, Low, Close."}),"\n",(0,r.jsx)(n.li,{children:"If Low is closer to Open than High then the processing order is Open, Low, High, Close."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"accept_orderself-order-order--void",children:"accept_order(self, Order order) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"account_type",children:"account_type"}),"\n",(0,r.jsx)(n.p,{children:"The account type for the matching engine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," AccountType"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"apply_fillsself-order-order-list-fills-liquidityside-liquidity_side-positionid-venue_position_id-positionid--none--none-position-position-position--none--none--void",children:"apply_fills(self, Order order, list fills, LiquiditySide liquidity_side, PositionId venue_position_id: PositionId | None = None, Position position: Position | None = None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Apply the given list of fills to the given order. Optionally provide existing position details."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"If the fills list is empty, an error will be logged."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Market orders will be rejected if no opposing orders are available to fulfill them."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"order"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/orders#nautilus_trader.model.orders.Order",children:(0,r.jsx)(n.em,{children:"Order"})}),") \u2013 The order to fill."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"fills"})," (",(0,r.jsx)(n.em,{children:"list"})," *[*",(0,r.jsx)(n.em,{children:"tuple"})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Price",children:(0,r.jsx)(n.em,{children:"Price"})})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Quantity",children:(0,r.jsx)(n.em,{children:"Quantity"})})," ",(0,r.jsx)(n.em,{children:"]"})," \u200b*]*\u200b) \u2013 The fills to apply to the order."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"liquidity_side"})," (\u200b",(0,r.jsx)(n.em,{children:"LiquiditySide"}),"\u200b) \u2013 The liquidity side for the fill(s)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"venue_position_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.PositionId",children:(0,r.jsx)(n.em,{children:"PositionId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The current venue position ID related to the order (if assigned)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"position"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Position",children:(0,r.jsx)(n.em,{children:"Position"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The current position related to the order (if any)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Raises:"})," ",(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If liquidity_side is ",(0,r.jsx)(n.code,{children:"NO_LIQUIDITY_SIDE"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-16",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"The liquidity_side will override anything previously set on the order."}),"\n",(0,r.jsxs)(n.h4,{id:"best_ask_priceself--price",children:["best_ask_price(self) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Price",children:"Price"})]}),"\n",(0,r.jsx)(n.p,{children:"Return the best ask price for the given instrument ID (if found)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," Price or ",(0,r.jsx)(n.code,{children:"None"})]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"best_bid_priceself--price",children:["best_bid_price(self) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Price",children:"Price"})]}),"\n",(0,r.jsx)(n.p,{children:"Return the best bid price for the given instrument ID (if found)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," Price or ",(0,r.jsx)(n.code,{children:"None"})]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"book_type",children:"book_type"}),"\n",(0,r.jsx)(n.p,{children:"The order book type for the matching engine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," BookType"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"cache-1",children:"cache"}),"\n",(0,r.jsx)(n.p,{children:"The cache for the matching engine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," CacheFacade"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"cancel_orderself-order-order-bool-cancel_contingenciestrue--void",children:"cancel_order(self, Order order, bool cancel_contingencies=True) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"determine_limit_price_and_volumeself-order-order--list",children:"determine_limit_price_and_volume(self, Order order) \u2192 list"}),"\n",(0,r.jsxs)(n.p,{children:["Return the projected fills for the given ",(0,r.jsx)(n.em,{children:"limit"})," order filling passively from its limit price."]}),"\n",(0,r.jsx)(n.p,{children:"The list may be empty if no fills."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"order"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/orders#nautilus_trader.model.orders.Order",children:(0,r.jsx)(n.em,{children:"Order"})}),") \u2013 The order to determine fills for."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[tuple[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Price",children:"Price"}),", ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Quantity",children:"Quantity"}),"]]"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"})," ",(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If the order does not have a LIMIT price."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"determine_market_price_and_volumeself-order-order--list",children:"determine_market_price_and_volume(self, Order order) \u2192 list"}),"\n",(0,r.jsxs)(n.p,{children:["Return the projected fills for the given ",(0,r.jsx)(n.em,{children:"marketable"})," order filling aggressively into the opposite order side."]}),"\n",(0,r.jsx)(n.p,{children:"The list may be empty if no fills."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"order"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/orders#nautilus_trader.model.orders.Order",children:(0,r.jsx)(n.em,{children:"Order"})}),") \u2013 The order to determine fills for."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[tuple[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Price",children:"Price"}),", ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Quantity",children:"Quantity"}),"]]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"expire_orderself-order-order--void",children:"expire_order(self, Order order) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"fill_limit_orderself-order-order--void",children:"fill_limit_order(self, Order order) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Fill the given limit order."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"order"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/orders#nautilus_trader.model.orders.Order",children:(0,r.jsx)(n.em,{children:"Order"})}),") \u2013 The order to fill."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"})," ",(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If the order does not have a LIMIT price."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"fill_market_orderself-order-order--void",children:"fill_market_order(self, Order order) \u2192 void"}),"\n",(0,r.jsxs)(n.p,{children:["Fill the given ",(0,r.jsx)(n.em,{children:"marketable"})," order."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"order"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/orders#nautilus_trader.model.orders.Order",children:(0,r.jsx)(n.em,{children:"Order"})}),") \u2013 The order to fill."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"fill_orderself-order-order-price-last_px-quantity-last_qty-liquidityside-liquidity_side-positionid-venue_position_id-positionid--none--none-position-position-position--none--none--void",children:"fill_order(self, Order order, Price last_px, Quantity last_qty, LiquiditySide liquidity_side, PositionId venue_position_id: PositionId | None = None, Position position: Position | None = None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Apply the given list of fills to the given order. Optionally provide existing position details."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"order"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/orders#nautilus_trader.model.orders.Order",children:(0,r.jsx)(n.em,{children:"Order"})}),") \u2013 The order to fill."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"last_px"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Price",children:(0,r.jsx)(n.em,{children:"Price"})}),") \u2013 The fill price for the order."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"last_qty"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Quantity",children:(0,r.jsx)(n.em,{children:"Quantity"})}),") \u2013 The fill quantity for the order."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"liquidity_side"})," (\u200b",(0,r.jsx)(n.em,{children:"LiquiditySide"}),"\u200b) \u2013 The liquidity side for the fill."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"venue_position_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.PositionId",children:(0,r.jsx)(n.em,{children:"PositionId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The current venue position ID related to the order (if assigned)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"position"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Position",children:(0,r.jsx)(n.em,{children:"Position"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The current position related to the order (if any)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"})," ",(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If liquidity_side is ",(0,r.jsx)(n.code,{children:"NO_LIQUIDITY_SIDE"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-17",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"The liquidity_side will override anything previously set on the order."}),"\n",(0,r.jsxs)(n.h4,{id:"get_bookself--orderbook",children:["get_book(self) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/book#nautilus_trader.model.book.OrderBook",children:"OrderBook"})]}),"\n",(0,r.jsx)(n.p,{children:"Return the internal order book."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/book#nautilus_trader.model.book.OrderBook",children:"OrderBook"})]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"get_open_ask_ordersself--list",children:"get_open_ask_orders(self) \u2192 list"}),"\n",(0,r.jsx)(n.p,{children:"Return the open ask orders at the exchange."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/orders#nautilus_trader.model.orders.Order",children:"Order"}),"]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"get_open_bid_ordersself--list",children:"get_open_bid_orders(self) \u2192 list"}),"\n",(0,r.jsx)(n.p,{children:"Return the open bid orders in the matching engine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/orders#nautilus_trader.model.orders.Order",children:"Order"}),"]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"get_open_ordersself--list",children:"get_open_orders(self) \u2192 list"}),"\n",(0,r.jsx)(n.p,{children:"Return the open orders in the matching engine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/orders#nautilus_trader.model.orders.Order",children:"Order"}),"]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"instrument",children:"instrument"}),"\n",(0,r.jsx)(n.p,{children:"The instrument for the matching engine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," Instrument"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"iterateself-uint64_t-timestamp_ns-aggressorside-aggressor_sideaggressorsideno_aggressor--void",children:"iterate(self, uint64_t timestamp_ns, AggressorSide aggressor_side=AggressorSide.NO_AGGRESSOR) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Iterate the matching engine by processing the bid and ask order sides and advancing time up to the given UNIX timestamp_ns."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"timestamp_ns"})," (\u200b",(0,r.jsx)(n.em,{children:"uint64_t"}),"\u200b) \u2013 UNIX timestamp to advance the matching engine time to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"aggressor_side"})," (",(0,r.jsx)(n.em,{children:"AggressorSide"})," ",(0,r.jsx)(n.em,{children:","})," \u200b*default 'NO_AGGRESSOR'*\u200b) \u2013 The aggressor side for trade execution processing."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"market_status",children:"market_status"}),"\n",(0,r.jsx)(n.p,{children:"The market status for the matching engine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," MarketStatus"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"msgbus",children:"msgbus"}),"\n",(0,r.jsx)(n.p,{children:"The message bus for the matching engine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," MessageBus"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"oms_type",children:"oms_type"}),"\n",(0,r.jsx)(n.p,{children:"The order management system type for the matching engine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," OmsType"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"order_existsself-clientorderid-client_order_id--bool",children:"order_exists(self, ClientOrderId client_order_id) \u2192 bool"}),"\n",(0,r.jsx)(n.h4,{id:"process_auction_bookself-orderbook-book--void",children:"process_auction_book(self, OrderBook book) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"process_barself-bar-bar--void",children:"process_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Process the exchanges market for the given bar."}),"\n",(0,r.jsx)(n.p,{children:"Market dynamics are simulated by auctioning open orders."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"bar"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(n.em,{children:"Bar"})}),") \u2013 The bar to process."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"RuntimeError"})," \u2013 If a price precision does not match the instrument for the matching engine."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"RuntimeError"})," \u2013 If a size precision does not match the instrument for the matching engine."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"process_batch_cancelself-batchcancelorders-command-accountid-account_id--void",children:"process_batch_cancel(self, BatchCancelOrders command, AccountId account_id) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"process_cancelself-cancelorder-command-accountid-account_id--void",children:"process_cancel(self, CancelOrder command, AccountId account_id) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"process_cancel_allself-cancelallorders-command-accountid-account_id--void",children:"process_cancel_all(self, CancelAllOrders command, AccountId account_id) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"process_instrument_closeself-instrumentclose-close--void",children:"process_instrument_close(self, InstrumentClose close) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Process the instrument close."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"close"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.InstrumentClose",children:(0,r.jsx)(n.em,{children:"InstrumentClose"})}),") \u2013 The close price to process."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"process_modifyself-modifyorder-command-accountid-account_id--void",children:"process_modify(self, ModifyOrder command, AccountId account_id) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"process_orderself-order-order-accountid-account_id--void",children:"process_order(self, Order order, AccountId account_id) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"process_order_book_deltaself-orderbookdelta-delta--void",children:"process_order_book_delta(self, OrderBookDelta delta) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Process the exchanges market for the given order book delta."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"delta"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.OrderBookDelta",children:(0,r.jsx)(n.em,{children:"OrderBookDelta"})}),") \u2013 The order book delta to process."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"process_order_book_deltasself-orderbookdeltas-deltas--void",children:"process_order_book_deltas(self, OrderBookDeltas deltas) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Process the exchanges market for the given order book deltas."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"delta"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.OrderBookDeltas",children:(0,r.jsx)(n.em,{children:"OrderBookDeltas"})}),") \u2013 The order book deltas to process."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"process_order_book_depth10self-orderbookdepth10-depth--void",children:"process_order_book_depth10(self, OrderBookDepth10 depth) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Process the exchanges market for the given order book depth."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"depth"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.OrderBookDepth10",children:(0,r.jsx)(n.em,{children:"OrderBookDepth10"})}),") \u2013 The order book depth to process."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"process_quote_tickself-quotetick-tick--void",children:"process_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Process the exchanges market for the given quote tick."}),"\n",(0,r.jsx)(n.p,{children:"The internal order book will only be updated if the venue book_type is \u2018L1_MBP\u2019."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"tick"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(n.em,{children:"QuoteTick"})}),") \u2013 The tick to process."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"RuntimeError"})," \u2013 If a price precision does not match the instrument for the matching engine."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"RuntimeError"})," \u2013 If a size precision does not match the instrument for the matching engine."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"process_statusself-marketstatusaction-status--void",children:"process_status(self, MarketStatusAction status) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Process the exchange status."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"status"})," (\u200b",(0,r.jsx)(n.em,{children:"MarketStatusAction"}),"\u200b) \u2013 The status action to process."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"process_trade_tickself-tradetick-tick--void",children:"process_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Process the exchanges market for the given trade tick."}),"\n",(0,r.jsx)(n.p,{children:"The internal order book will only be updated if the venue book_type is \u2018L1_MBP\u2019."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"tick"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(n.em,{children:"TradeTick"})}),") \u2013 The tick to process."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"RuntimeError"})," \u2013 If the trades price precision does not match the instrument for the matching engine."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"RuntimeError"})," \u2013 If the trades size precision does not match the instrument for the matching engine."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"raw_id",children:"raw_id"}),"\n",(0,r.jsx)(n.p,{children:"The instruments raw integer ID for the exchange."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"resetself--void-2",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"set_fill_modelself-fillmodel-fill_model--void",children:"set_fill_model(self, FillModel fill_model) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Set the fill model to the given model."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"fill_model"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.FillModel",children:(0,r.jsx)(n.em,{children:"FillModel"})}),") \u2013 The fill model to set."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"trigger_stop_orderself-order-order--void",children:"trigger_stop_order(self, Order order) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"update_instrumentself-instrument-instrument--void",children:"update_instrument(self, Instrument instrument) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Update the matching engines current instrument definition with the given instrument."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"instrument"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.Instrument",children:(0,r.jsx)(n.em,{children:"Instrument"})}),") \u2013 The instrument definition to update."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"update_orderself-order-order-quantity-qty-price-pricenone-price-trigger_pricenone-bool-update_contingenciestrue--void",children:"update_order(self, Order order, Quantity qty, Price price=None, Price trigger_price=None, bool update_contingencies=True) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"venue-2",children:"venue"}),"\n",(0,r.jsx)(n.p,{children:"The venue for the matching engine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," Venue"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"class-simulatedexchange",children:[(0,r.jsx)(n.em,{children:"class"})," SimulatedExchange"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.code,{children:"object"})]}),"\n",(0,r.jsx)(n.p,{children:"SimulatedExchange(Venue venue, OmsType oms_type, AccountType account_type, list starting_balances, Currency base_currency: Currency | None, default_leverage: Decimal, dict leverages: dict[InstrumentId, Decimal], list modules, PortfolioFacade portfolio, MessageBus msgbus, CacheFacade cache, TestClock clock, FillModel fill_model, FeeModel fee_model, LatencyModel latency_model=None, MarginModel margin_model=None, BookType book_type=BookType.L1_MBP, bool frozen_account=False, bool reject_stop_orders=True, bool support_gtd_orders=True, bool support_contingent_orders=True, bool use_position_ids=True, bool use_random_ids=False, bool use_reduce_only=True, bool use_message_queue=True, bool bar_execution=True, bool bar_adaptive_high_low_ordering=False, bool trade_execution=False) -> None"}),"\n",(0,r.jsx)(n.p,{children:"Provides a simulated exchange venue."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"venue"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.Venue",children:(0,r.jsx)(n.em,{children:"Venue"})}),") \u2013 The venue to simulate."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"oms_type"})," (OmsType ","NETTING",") \u2013 The order management system type used by the exchange."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"account_type"})," (\u200b",(0,r.jsx)(n.em,{children:"AccountType"}),"\u200b) \u2013 The account type for the client."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"starting_balances"})," (",(0,r.jsx)(n.em,{children:"list"})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Money",children:(0,r.jsx)(n.em,{children:"Money"})})," \u200b*]*\u200b) \u2013 The starting balances for the exchange."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"base_currency"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Currency",children:(0,r.jsx)(n.em,{children:"Currency"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The account base currency for the client. Use ",(0,r.jsx)(n.code,{children:"None"})," for multi-currency accounts."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"default_leverage"})," (\u200b",(0,r.jsx)(n.em,{children:"Decimal"}),"\u200b) \u2013 The account default leverage (for margin accounts)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"leverages"})," (",(0,r.jsx)(n.em,{children:"dict"})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Decimal"})," \u200b*]*\u200b) \u2013 The instrument specific leverage configuration (for margin accounts)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"modules"})," (",(0,r.jsx)(n.em,{children:"list"})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.modules.SimulationModule",children:(0,r.jsx)(n.em,{children:"SimulationModule"})})," \u200b*]*\u200b) \u2013 The simulation modules for the exchange."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"portfolio"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/portfolio#nautilus_trader.portfolio.PortfolioFacade",children:(0,r.jsx)(n.em,{children:"PortfolioFacade"})}),") \u2013 The read-only portfolio for the exchange."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"msgbus"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.MessageBus",children:(0,r.jsx)(n.em,{children:"MessageBus"})}),") \u2013 The message bus for the exchange."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"cache"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/cache#nautilus_trader.cache.base.CacheFacade",children:(0,r.jsx)(n.em,{children:"CacheFacade"})}),") \u2013 The read-only cache for the exchange."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"clock"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.TestClock",children:(0,r.jsx)(n.em,{children:"TestClock"})}),") \u2013 The clock for the exchange."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"fill_model"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.FillModel",children:(0,r.jsx)(n.em,{children:"FillModel"})}),") \u2013 The fill model for the exchange."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"fee_model"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.FeeModel",children:(0,r.jsx)(n.em,{children:"FeeModel"})}),") \u2013 The fee model for the exchange."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"latency_model"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.LatencyModel",children:(0,r.jsx)(n.em,{children:"LatencyModel"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The latency model for the exchange."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"book_type"})," (\u200b",(0,r.jsx)(n.em,{children:"BookType"}),"\u200b) \u2013 The order book type for the exchange."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"frozen_account"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If the account for this exchange is frozen (balances will not change)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"reject_stop_orders"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If stop orders are rejected on submission if in the market."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"support_gtd_orders"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If orders with GTD time in force will be supported by the exchange."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"support_contingent_orders"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If contingent orders will be supported/respected by the exchange. If False, then its expected the strategy will be managing any contingent orders."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"use_position_ids"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If venue position IDs will be generated on order fills."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"use_random_ids"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If all exchange generated identifiers will be random UUID4\u2019s."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"use_reduce_only"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If the reduce_only execution instruction on orders will be honored."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"use_message_queue"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If an internal message queue should be used to process trading commands in sequence after they have initially arrived. Setting this to False would be appropriate for real-time sandbox environments, where we don\u2019t want to introduce additional latency of waiting for the next data event before processing the trading command."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"bar_execution"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If bars should be processed by the matching engine(s) (and move the market)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"bar_adaptive_high_low_ordering"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 Determines whether the processing order of bar prices is adaptive based on a heuristic. This setting is only relevant when bar_execution is True. If False, bar prices are always processed in the fixed order: Open, High, Low, Close. If True, the processing order adapts with the heuristic:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"If High is closer to Open than Low then the processing order is Open, High, Low, Close."}),"\n",(0,r.jsx)(n.li,{children:"If Low is closer to Open than High then the processing order is Open, Low, High, Close."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"trade_execution"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If trades should be processed by the matching engine(s) (and move the market)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If instruments is empty."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If instruments contains a type other than Instrument."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If starting_balances is empty."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If starting_balances contains a type other than Money."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If base_currency and multiple starting balances."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If modules contains a type other than SimulationModule."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"account_type-1",children:"account_type"}),"\n",(0,r.jsx)(n.p,{children:"The account base currency."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," AccountType"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"add_instrumentself-instrument-instrument--void",children:"add_instrument(self, Instrument instrument) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Add the given instrument to the exchange."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"instrument"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.Instrument",children:(0,r.jsx)(n.em,{children:"Instrument"})}),") \u2013 The instrument to add."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If instrument.id.venue is not equal to the venue ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.common.config.InvalidConfiguration",children:(0,r.jsx)(n.strong,{children:"InvalidConfiguration"})})," \u2013 If instrument is invalid for this venue."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"adjust_accountself-money-adjustment--void",children:"adjust_account(self, Money adjustment) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Adjust the account at the exchange with the given adjustment."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"adjustment"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Money",children:(0,r.jsx)(n.em,{children:"Money"})}),") \u2013 The adjustment for the account."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"bar_adaptive_high_low_ordering",children:"bar_adaptive_high_low_ordering"}),"\n",(0,r.jsx)(n.p,{children:"If the processing order of bar prices is adaptive based on a heuristic."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"bar_execution",children:"bar_execution"}),"\n",(0,r.jsx)(n.p,{children:"If bars should be processed by the matching engine(s) (and move the market)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"base_currency",children:"base_currency"}),"\n",(0,r.jsx)(n.p,{children:"The account base currency (None for multi-currency accounts)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," Currency or ",(0,r.jsx)(n.code,{children:"None"})]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"best_ask_priceself-instrumentid-instrument_id--price",children:["best_ask_price(self, InstrumentId instrument_id) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Price",children:"Price"})]}),"\n",(0,r.jsx)(n.p,{children:"Return the best ask price for the given instrument ID (if found)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID for the price."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," Price or ",(0,r.jsx)(n.code,{children:"None"})]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"best_bid_priceself-instrumentid-instrument_id--price",children:["best_bid_price(self, InstrumentId instrument_id) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Price",children:"Price"})]}),"\n",(0,r.jsx)(n.p,{children:"Return the best bid price for the given instrument ID (if found)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID for the price."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," Price or ",(0,r.jsx)(n.code,{children:"None"})]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"book_type-1",children:"book_type"}),"\n",(0,r.jsx)(n.p,{children:"The exchange default order book type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," BookType"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"cache-2",children:"cache"}),"\n",(0,r.jsx)(n.p,{children:"The cache wired to the exchange."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," CacheFacade"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"default_leverage",children:"default_leverage"}),"\n",(0,r.jsx)(n.p,{children:"The accounts default leverage."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," Decimal"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"exec_client",children:"exec_client"}),"\n",(0,r.jsx)(n.p,{children:"The execution client wired to the exchange."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," BacktestExecClient"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"fee_model",children:"fee_model"}),"\n",(0,r.jsx)(n.p,{children:"The fee model for the exchange."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," FeeModel"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"fill_model",children:"fill_model"}),"\n",(0,r.jsx)(n.p,{children:"The fill model for the exchange."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," FillModel"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"get_accountself--account",children:"get_account(self) \u2192 Account"}),"\n",(0,r.jsx)(n.p,{children:"Return the account for the registered client (if registered)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," Account or ",(0,r.jsx)(n.code,{children:"None"})]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"get_bookself-instrumentid-instrument_id--orderbook",children:["get_book(self, InstrumentId instrument_id) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/book#nautilus_trader.model.book.OrderBook",children:"OrderBook"})]}),"\n",(0,r.jsx)(n.p,{children:"Return the order book for the given instrument ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID for the price."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," OrderBook or ",(0,r.jsx)(n.code,{children:"None"})]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"get_booksself--dict",children:"get_books(self) \u2192 dict"}),"\n",(0,r.jsx)(n.p,{children:"Return all order books within the exchange."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," dict[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:"InstrumentId"}),", ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/book#nautilus_trader.model.book.OrderBook",children:"OrderBook"}),"]"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"get_matching_engineself-instrumentid-instrument_id--ordermatchingengine",children:["get_matching_engine(self, InstrumentId instrument_id) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.engine.OrderMatchingEngine",children:"OrderMatchingEngine"})]}),"\n",(0,r.jsx)(n.p,{children:"Return the matching engine for the given instrument ID (if found)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID for the matching engine."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," OrderMatchingEngine or ",(0,r.jsx)(n.code,{children:"None"})]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"get_matching_enginesself--dict",children:"get_matching_engines(self) \u2192 dict"}),"\n",(0,r.jsx)(n.p,{children:"Return all matching engines for the exchange (for every instrument)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," dict[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:"InstrumentId"}),", ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.engine.OrderMatchingEngine",children:"OrderMatchingEngine"}),"]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"get_open_ask_ordersself-instrumentid-instrument_idnone--list",children:"get_open_ask_orders(self, InstrumentId instrument_id=None) \u2192 list"}),"\n",(0,r.jsx)(n.p,{children:"Return the open ask orders at the exchange."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The instrument_id query filter."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/orders#nautilus_trader.model.orders.Order",children:"Order"}),"]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"get_open_bid_ordersself-instrumentid-instrument_idnone--list",children:"get_open_bid_orders(self, InstrumentId instrument_id=None) \u2192 list"}),"\n",(0,r.jsx)(n.p,{children:"Return the open bid orders at the exchange."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The instrument_id query filter."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/orders#nautilus_trader.model.orders.Order",children:"Order"}),"]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"get_open_ordersself-instrumentid-instrument_idnone--list",children:"get_open_orders(self, InstrumentId instrument_id=None) \u2192 list"}),"\n",(0,r.jsx)(n.p,{children:"Return the open orders at the exchange."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The instrument_id query filter."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/orders#nautilus_trader.model.orders.Order",children:"Order"}),"]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"id-2",children:"id"}),"\n",(0,r.jsx)(n.p,{children:"The exchange ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," Venue"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"initialize_accountself--void",children:"initialize_account(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Initialize the account to the starting balances."}),"\n",(0,r.jsx)(n.h4,{id:"instruments",children:"instruments"}),"\n",(0,r.jsx)(n.p,{children:"The exchange instruments."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," dict[InstrumentId, Instrument]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_frozen_account",children:"is_frozen_account"}),"\n",(0,r.jsx)(n.p,{children:"If the account for the exchange is frozen."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"latency_model",children:"latency_model"}),"\n",(0,r.jsx)(n.p,{children:"The latency model for the exchange."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," LatencyModel"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"leverages",children:"leverages"}),"\n",(0,r.jsx)(n.p,{children:"The accounts instrument specific leverage configuration."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," dict[InstrumentId, Decimal]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"margin_model",children:"margin_model"}),"\n",(0,r.jsx)(n.p,{children:"The margin calculation model for the exchange."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," MarginModel"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"modules",children:"modules"}),"\n",(0,r.jsx)(n.p,{children:"The simulation modules registered with the exchange."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," list[SimulationModule]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"msgbus-1",children:"msgbus"}),"\n",(0,r.jsx)(n.p,{children:"The message bus wired to the exchange."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," MessageBus"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"oms_type-1",children:"oms_type"}),"\n",(0,r.jsx)(n.p,{children:"The exchange order management system type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," OmsType"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"processself-uint64_t-ts_now--void",children:"process(self, uint64_t ts_now) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Process the exchange to the given time."}),"\n",(0,r.jsx)(n.p,{children:"All pending commands will be processed along with all simulation modules."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"ts_now"})," (\u200b",(0,r.jsx)(n.em,{children:"uint64_t"}),"\u200b) \u2013 The current UNIX timestamp (nanoseconds)."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"process_barself-bar-bar--void-1",children:"process_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Process the exchanges market for the given bar."}),"\n",(0,r.jsx)(n.p,{children:"Market dynamics are simulated by auctioning open orders."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"bar"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(n.em,{children:"Bar"})}),") \u2013 The bar to process."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"process_instrument_closeself-instrumentclose-close--void-1",children:"process_instrument_close(self, InstrumentClose close) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Process the exchanges market for the given instrument close."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"close"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.InstrumentClose",children:(0,r.jsx)(n.em,{children:"InstrumentClose"})}),") \u2013 The instrument close to process."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"process_instrument_statusself-instrumentstatus-data--void",children:"process_instrument_status(self, InstrumentStatus data) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Process a specific instrument status."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"data"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.InstrumentStatus",children:(0,r.jsx)(n.em,{children:"InstrumentStatus"})}),") \u2013 The instrument status update to process."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"process_order_book_deltaself-orderbookdelta-delta--void-1",children:"process_order_book_delta(self, OrderBookDelta delta) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Process the exchanges market for the given order book delta."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"data"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.OrderBookDelta",children:(0,r.jsx)(n.em,{children:"OrderBookDelta"})}),") \u2013 The order book delta to process."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"process_order_book_deltasself-orderbookdeltas-deltas--void-1",children:"process_order_book_deltas(self, OrderBookDeltas deltas) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Process the exchanges market for the given order book deltas."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"data"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.OrderBookDeltas",children:(0,r.jsx)(n.em,{children:"OrderBookDeltas"})}),") \u2013 The order book deltas to process."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"process_order_book_depth10self-orderbookdepth10-depth--void-1",children:"process_order_book_depth10(self, OrderBookDepth10 depth) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Process the exchanges market for the given order book depth."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"depth"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.OrderBookDepth10",children:(0,r.jsx)(n.em,{children:"OrderBookDepth10"})}),") \u2013 The order book depth to process."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"process_quote_tickself-quotetick-tick--void-1",children:"process_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Process the exchanges market for the given quote tick."}),"\n",(0,r.jsx)(n.p,{children:"Market dynamics are simulated by auctioning open orders."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"tick"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(n.em,{children:"QuoteTick"})}),") \u2013 The tick to process."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"process_trade_tickself-tradetick-tick--void-1",children:"process_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Process the exchanges market for the given trade tick."}),"\n",(0,r.jsx)(n.p,{children:"Market dynamics are simulated by auctioning open orders."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"tick"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(n.em,{children:"TradeTick"})}),") \u2013 The tick to process."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"register_clientself-backtestexecclient-client--void",children:"register_client(self, BacktestExecClient client) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Register the given execution client with the simulated exchange."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"client"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.execution_client.BacktestExecClient",children:(0,r.jsx)(n.em,{children:"BacktestExecClient"})}),") \u2013 The client to register"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"reject_stop_orders",children:"reject_stop_orders"}),"\n",(0,r.jsx)(n.p,{children:"If stop orders are rejected on submission if in the market."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"resetself--void-3",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Reset the simulated exchange."}),"\n",(0,r.jsx)(n.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(n.h4,{id:"sendself-tradingcommand-command--void",children:"send(self, TradingCommand command) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Send the given trading command into the exchange."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"command"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/execution#nautilus_trader.execution.messages.TradingCommand",children:(0,r.jsx)(n.em,{children:"TradingCommand"})}),") \u2013 The command to send."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"set_fill_modelself-fillmodel-fill_model--void-1",children:"set_fill_model(self, FillModel fill_model) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Set the fill model for all matching engines."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"fill_model"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.FillModel",children:(0,r.jsx)(n.em,{children:"FillModel"})}),") \u2013 The fill model to set."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"set_latency_modelself-latencymodel-latency_model--void",children:"set_latency_model(self, LatencyModel latency_model) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Change the latency model for this exchange."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"latency_model"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.LatencyModel",children:(0,r.jsx)(n.em,{children:"LatencyModel"})}),") \u2013 The latency model to set."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"starting_balances",children:"starting_balances"}),"\n",(0,r.jsx)(n.p,{children:"The account starting balances for each backtest run."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"support_contingent_orders",children:"support_contingent_orders"}),"\n",(0,r.jsx)(n.p,{children:"If contingent orders will be supported/respected by the venue."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"support_gtd_orders",children:"support_gtd_orders"}),"\n",(0,r.jsx)(n.p,{children:"If orders with GTD time in force will be supported by the venue."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"trade_execution",children:"trade_execution"}),"\n",(0,r.jsx)(n.p,{children:"If trades should be processed by the matching engine(s) (and move the market)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"update_instrumentself-instrument-instrument--void-1",children:"update_instrument(self, Instrument instrument) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Update the venues current instrument definition with the given instrument."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"instrument"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.Instrument",children:(0,r.jsx)(n.em,{children:"Instrument"})}),") \u2013 The instrument definition to update."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"use_message_queue",children:"use_message_queue"}),"\n",(0,r.jsx)(n.p,{children:"If an internal message queue is being used to sequentially process incoming trading commands."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"use_position_ids",children:"use_position_ids"}),"\n",(0,r.jsx)(n.p,{children:"If venue position IDs will be generated on order fills."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"use_random_ids",children:"use_random_ids"}),"\n",(0,r.jsx)(n.p,{children:"If venue order and position IDs will be randomly generated UUID4s."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"use_reduce_only",children:"use_reduce_only"}),"\n",(0,r.jsx)(n.p,{children:"If the reduce_only option on orders will be honored."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"class-backtestexecclient",children:[(0,r.jsx)(n.em,{children:"class"})," BacktestExecClient"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/execution#nautilus_trader.execution.client.ExecutionClient",children:(0,r.jsx)(n.code,{children:"ExecutionClient"})})]}),"\n",(0,r.jsx)(n.p,{children:"BacktestExecClient(SimulatedExchange exchange, MessageBus msgbus, Cache cache, TestClock clock, bool routing=False, bool frozen_account=False, bool allow_cash_borrowing=False) -> None"}),"\n",(0,r.jsx)(n.p,{children:"Provides an execution client for the BacktestEngine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"exchange"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.engine.SimulatedExchange",children:(0,r.jsx)(n.em,{children:"SimulatedExchange"})}),") \u2013 The simulated exchange for the backtest."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"msgbus"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.MessageBus",children:(0,r.jsx)(n.em,{children:"MessageBus"})}),") \u2013 The message bus for the client."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"cache"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/cache#nautilus_trader.cache.Cache",children:(0,r.jsx)(n.em,{children:"Cache"})}),") \u2013 The cache for the client."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"clock"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.TestClock",children:(0,r.jsx)(n.em,{children:"TestClock"})}),") \u2013 The clock for the client."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"routing"})," (\u200b",(0,r.jsx)(n.em,{children:"bool"}),"\u200b) \u2013 If multi-venue routing is enabled for the client."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"frozen_account"})," (\u200b",(0,r.jsx)(n.em,{children:"bool"}),"\u200b) \u2013 If the backtest run account is frozen."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"allow_cash_borrowing"})," (\u200b",(0,r.jsx)(n.em,{children:"bool"}),"\u200b) \u2013 If cash accounts should allow borrowing (negative balances)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"account_id",children:"account_id"}),"\n",(0,r.jsx)(n.p,{children:"The clients account ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," AccountId or ",(0,r.jsx)(n.code,{children:"None"})]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"account_type-2",children:"account_type"}),"\n",(0,r.jsx)(n.p,{children:"The clients account type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," AccountType"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"base_currency-1",children:"base_currency"}),"\n",(0,r.jsx)(n.p,{children:"The clients account base currency (None for multi-currency accounts)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," Currency or ",(0,r.jsx)(n.code,{children:"None"})]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"batch_cancel_ordersself-batchcancelorders-command--void",children:"batch_cancel_orders(self, BatchCancelOrders command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"cancel_all_ordersself-cancelallorders-command--void",children:"cancel_all_orders(self, CancelAllOrders command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"cancel_orderself-cancelorder-command--void",children:"cancel_order(self, CancelOrder command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"degradeself--void-2",children:"degrade(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Degrade the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_degrade() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"DEGRADING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-18",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"disposeself--void-2",children:"dispose(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Dispose of the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_dispose() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"DISPOSING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-19",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"faultself--void-2",children:"fault(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Fault the component."}),"\n",(0,r.jsx)(n.p,{children:"Calling this method multiple times has the same effect as calling it once (it is idempotent). Once called, it cannot be reversed, and no other methods should be called on this instance."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_fault() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"FAULTING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-20",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsxs)(n.h4,{id:"classmethod-fully_qualified_namecls--str-2",children:[(0,r.jsx)(n.em,{children:"classmethod"})," fully_qualified_name(cls) \u2192 str"]}),"\n",(0,r.jsx)(n.p,{children:"Return the fully qualified name for the components class."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"generate_account_stateself-list-balances-list-margins-bool-reported-uint64_t-ts_event-dict-infonone--void",children:"generate_account_state(self, list balances, list margins, bool reported, uint64_t ts_event, dict info=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Generate an AccountState event and publish on the message bus."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"balances"})," (",(0,r.jsx)(n.em,{children:"list"})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.AccountBalance",children:(0,r.jsx)(n.em,{children:"AccountBalance"})})," \u200b*]*\u200b) \u2013 The account balances."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"margins"})," (",(0,r.jsx)(n.em,{children:"list"})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.MarginBalance",children:(0,r.jsx)(n.em,{children:"MarginBalance"})})," \u200b*]*\u200b) \u2013 The margin balances."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"reported"})," (\u200b",(0,r.jsx)(n.em,{children:"bool"}),"\u200b) \u2013 If the balances are reported directly from the exchange."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ts_event"})," (\u200b",(0,r.jsx)(n.em,{children:"uint64_t"}),"\u200b) \u2013 UNIX timestamp (nanoseconds) when the account state event occurred."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"info"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"object"})," \u200b*]*\u200b) \u2013 The additional implementation specific account information."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"generate_order_acceptedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-uint64_t-ts_event--void",children:"generate_order_accepted(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Generate an OrderAccepted event and send it to the ExecutionEngine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"strategy_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:(0,r.jsx)(n.em,{children:"StrategyId"})}),") \u2013 The strategy ID associated with the event."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_order_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientOrderId",children:(0,r.jsx)(n.em,{children:"ClientOrderId"})}),") \u2013 The client order ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"venue_order_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.VenueOrderId",children:(0,r.jsx)(n.em,{children:"VenueOrderId"})}),") \u2013 The venue order ID (assigned by the venue)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ts_event"})," (\u200b",(0,r.jsx)(n.em,{children:"uint64_t"}),"\u200b) \u2013 UNIX timestamp (nanoseconds) when the order accepted event occurred."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"generate_order_cancel_rejectedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-str-reason-uint64_t-ts_event--void",children:"generate_order_cancel_rejected(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, str reason, uint64_t ts_event) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Generate an OrderCancelRejected event and send it to the ExecutionEngine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"strategy_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:(0,r.jsx)(n.em,{children:"StrategyId"})}),") \u2013 The strategy ID associated with the event."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_order_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientOrderId",children:(0,r.jsx)(n.em,{children:"ClientOrderId"})}),") \u2013 The client order ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"venue_order_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.VenueOrderId",children:(0,r.jsx)(n.em,{children:"VenueOrderId"})}),") \u2013 The venue order ID (assigned by the venue)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"reason"})," (\u200b",(0,r.jsx)(n.em,{children:"str"}),"\u200b) \u2013 The order cancel rejected reason."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ts_event"})," (\u200b",(0,r.jsx)(n.em,{children:"uint64_t"}),"\u200b) \u2013 UNIX timestamp (nanoseconds) when the order cancel rejected event occurred."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"generate_order_canceledself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-uint64_t-ts_event--void",children:"generate_order_canceled(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Generate an OrderCanceled event and send it to the ExecutionEngine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"strategy_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:(0,r.jsx)(n.em,{children:"StrategyId"})}),") \u2013 The strategy ID associated with the event."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_order_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientOrderId",children:(0,r.jsx)(n.em,{children:"ClientOrderId"})}),") \u2013 The client order ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"venue_order_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.VenueOrderId",children:(0,r.jsx)(n.em,{children:"VenueOrderId"})}),") \u2013 The venue order ID (assigned by the venue)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ts_event"})," (\u200b",(0,r.jsx)(n.em,{children:"uint64_t"}),"\u200b) \u2013 UNIX timestamp (nanoseconds) when order canceled event occurred."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"generate_order_expiredself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-uint64_t-ts_event--void",children:"generate_order_expired(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Generate an OrderExpired event and send it to the ExecutionEngine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"strategy_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:(0,r.jsx)(n.em,{children:"StrategyId"})}),") \u2013 The strategy ID associated with the event."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_order_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientOrderId",children:(0,r.jsx)(n.em,{children:"ClientOrderId"})}),") \u2013 The client order ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"venue_order_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.VenueOrderId",children:(0,r.jsx)(n.em,{children:"VenueOrderId"})}),") \u2013 The venue order ID (assigned by the venue)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ts_event"})," (\u200b",(0,r.jsx)(n.em,{children:"uint64_t"}),"\u200b) \u2013 UNIX timestamp (nanoseconds) when the order expired event occurred."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"generate_order_filledself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-positionid-venue_position_id-positionid--none-tradeid-trade_id-orderside-order_side-ordertype-order_type-quantity-last_qty-price-last_px-currency-quote_currency-money-commission-liquidityside-liquidity_side-uint64_t-ts_event-dict-infonone--void",children:"generate_order_filled(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, PositionId venue_position_id: PositionId | None, TradeId trade_id, OrderSide order_side, OrderType order_type, Quantity last_qty, Price last_px, Currency quote_currency, Money commission, LiquiditySide liquidity_side, uint64_t ts_event, dict info=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Generate an OrderFilled event and send it to the ExecutionEngine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"strategy_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:(0,r.jsx)(n.em,{children:"StrategyId"})}),") \u2013 The strategy ID associated with the event."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_order_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientOrderId",children:(0,r.jsx)(n.em,{children:"ClientOrderId"})}),") \u2013 The client order ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"venue_order_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.VenueOrderId",children:(0,r.jsx)(n.em,{children:"VenueOrderId"})}),") \u2013 The venue order ID (assigned by the venue)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"trade_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.TradeId",children:(0,r.jsx)(n.em,{children:"TradeId"})}),") \u2013 The trade ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"venue_position_id"})," (PositionId or ",(0,r.jsx)(n.code,{children:"None"}),") \u2013 The venue position ID associated with the order. If the trading venue has assigned a position ID / ticket then pass that here, otherwise pass ",(0,r.jsx)(n.code,{children:"None"})," and the execution engine OMS will handle position ID resolution."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"order_side"})," (OrderSide ","SELL",") \u2013 The execution order side."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"order_type"})," (\u200b",(0,r.jsx)(n.em,{children:"OrderType"}),"\u200b) \u2013 The execution order type."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"last_qty"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Quantity",children:(0,r.jsx)(n.em,{children:"Quantity"})}),") \u2013 The fill quantity for this execution."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"last_px"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Price",children:(0,r.jsx)(n.em,{children:"Price"})}),") \u2013 The fill price for this execution (not average price)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"quote_currency"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Currency",children:(0,r.jsx)(n.em,{children:"Currency"})}),") \u2013 The currency of the price."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"commission"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Money",children:(0,r.jsx)(n.em,{children:"Money"})}),") \u2013 The fill commission."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"liquidity_side"})," (LiquiditySide ","TAKER",") \u2013 The execution liquidity side."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ts_event"})," (\u200b",(0,r.jsx)(n.em,{children:"uint64_t"}),"\u200b) \u2013 UNIX timestamp (nanoseconds) when the order filled event occurred."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"info"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"object"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 The additional fill information."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"generate_order_modify_rejectedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-str-reason-uint64_t-ts_event--void",children:"generate_order_modify_rejected(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, str reason, uint64_t ts_event) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Generate an OrderModifyRejected event and send it to the ExecutionEngine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"strategy_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:(0,r.jsx)(n.em,{children:"StrategyId"})}),") \u2013 The strategy ID associated with the event."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_order_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientOrderId",children:(0,r.jsx)(n.em,{children:"ClientOrderId"})}),") \u2013 The client order ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"venue_order_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.VenueOrderId",children:(0,r.jsx)(n.em,{children:"VenueOrderId"})}),") \u2013 The venue order ID (assigned by the venue)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"reason"})," (\u200b",(0,r.jsx)(n.em,{children:"str"}),"\u200b) \u2013 The order update rejected reason."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ts_event"})," (\u200b",(0,r.jsx)(n.em,{children:"uint64_t"}),"\u200b) \u2013 UNIX timestamp (nanoseconds) when the order update rejection event occurred."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"generate_order_rejectedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-str-reason-uint64_t-ts_event-bool-due_post_onlyfalse--void",children:"generate_order_rejected(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, str reason, uint64_t ts_event, bool due_post_only=False) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Generate an OrderRejected event and send it to the ExecutionEngine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"strategy_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:(0,r.jsx)(n.em,{children:"StrategyId"})}),") \u2013 The strategy ID associated with the event."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_order_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientOrderId",children:(0,r.jsx)(n.em,{children:"ClientOrderId"})}),") \u2013 The client order ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"reason"})," (\u200b",(0,r.jsx)(n.em,{children:"datetime"}),"\u200b) \u2013 The order rejected reason."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ts_event"})," (\u200b",(0,r.jsx)(n.em,{children:"uint64_t"}),"\u200b) \u2013 UNIX timestamp (nanoseconds) when the order rejected event occurred."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"due_post_only"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If the order was rejected because it was post-only and would execute immediately as a taker."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"generate_order_submittedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-uint64_t-ts_event--void",children:"generate_order_submitted(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, uint64_t ts_event) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Generate an OrderSubmitted event and send it to the ExecutionEngine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"strategy_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:(0,r.jsx)(n.em,{children:"StrategyId"})}),") \u2013 The strategy ID associated with the event."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_order_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientOrderId",children:(0,r.jsx)(n.em,{children:"ClientOrderId"})}),") \u2013 The client order ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ts_event"})," (\u200b",(0,r.jsx)(n.em,{children:"uint64_t"}),"\u200b) \u2013 UNIX timestamp (nanoseconds) when the order submitted event occurred."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"generate_order_triggeredself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-uint64_t-ts_event--void",children:"generate_order_triggered(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Generate an OrderTriggered event and send it to the ExecutionEngine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"strategy_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:(0,r.jsx)(n.em,{children:"StrategyId"})}),") \u2013 The strategy ID associated with the event."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_order_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientOrderId",children:(0,r.jsx)(n.em,{children:"ClientOrderId"})}),") \u2013 The client order ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"venue_order_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.VenueOrderId",children:(0,r.jsx)(n.em,{children:"VenueOrderId"})}),") \u2013 The venue order ID (assigned by the venue)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ts_event"})," (\u200b",(0,r.jsx)(n.em,{children:"uint64_t"}),"\u200b) \u2013 UNIX timestamp (nanoseconds) when the order triggered event occurred."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"generate_order_updatedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-quantity-quantity-price-price-price-trigger_price-uint64_t-ts_event-bool-venue_order_id_modifiedfalse--void",children:"generate_order_updated(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, Quantity quantity, Price price, Price trigger_price, uint64_t ts_event, bool venue_order_id_modified=False) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Generate an OrderUpdated event and send it to the ExecutionEngine."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"strategy_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:(0,r.jsx)(n.em,{children:"StrategyId"})}),") \u2013 The strategy ID associated with the event."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_order_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientOrderId",children:(0,r.jsx)(n.em,{children:"ClientOrderId"})}),") \u2013 The client order ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"venue_order_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.VenueOrderId",children:(0,r.jsx)(n.em,{children:"VenueOrderId"})}),") \u2013 The venue order ID (assigned by the venue)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"quantity"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Quantity",children:(0,r.jsx)(n.em,{children:"Quantity"})}),") \u2013 The orders current quantity."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"price"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Price",children:(0,r.jsx)(n.em,{children:"Price"})}),") \u2013 The orders current price."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"trigger_price"})," (Price or ",(0,r.jsx)(n.code,{children:"None"}),") \u2013 The orders current trigger price."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ts_event"})," (\u200b",(0,r.jsx)(n.em,{children:"uint64_t"}),"\u200b) \u2013 UNIX timestamp (nanoseconds) when the order update event occurred."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"venue_order_id_modified"})," (\u200b",(0,r.jsx)(n.em,{children:"bool"}),"\u200b) \u2013 If the ID was modified for this event."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"get_accountself--account-1",children:"get_account(self) \u2192 Account"}),"\n",(0,r.jsx)(n.p,{children:"Return the account for the client (if registered)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," Account or ",(0,r.jsx)(n.code,{children:"None"})]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"id-3",children:"id"}),"\n",(0,r.jsx)(n.p,{children:"The components ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," ComponentId"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_connected-2",children:"is_connected"}),"\n",(0,r.jsx)(n.p,{children:"If the client is connected."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_degraded-2",children:"is_degraded"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"DEGRADED"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_degraded"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_disposed-2",children:"is_disposed"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"DISPOSED"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_disposed"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_faulted-2",children:"is_faulted"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"FAULTED"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_faulted"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_initialized-2",children:"is_initialized"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the component has been initialized (component.state >= ",(0,r.jsx)(n.code,{children:"INITIALIZED"}),")."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_initialized"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_running-2",children:"is_running"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_running"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_stopped-2",children:"is_stopped"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"STOPPED"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_stopped"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"modify_orderself-modifyorder-command--void",children:"modify_order(self, ModifyOrder command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"oms_type-2",children:"oms_type"}),"\n",(0,r.jsx)(n.p,{children:"The venues order management system type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," OmsType"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"query_accountself-queryaccount-command--void",children:"query_account(self, QueryAccount command) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Query the account specified by the command which will generate an AccountState event."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"command"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/execution#nautilus_trader.execution.messages.QueryAccount",children:(0,r.jsx)(n.em,{children:"QueryAccount"})}),") \u2013 The command to execute."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"query_orderself-queryorder-command--void",children:"query_order(self, QueryOrder command) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Initiate a reconciliation for the queried order which will generate an OrderStatusReport."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"command"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/execution#nautilus_trader.execution.messages.QueryOrder",children:(0,r.jsx)(n.em,{children:"QueryOrder"})}),") \u2013 The command to execute."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"resetself--void-4",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Reset the component."}),"\n",(0,r.jsx)(n.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_reset() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"RESETTING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-21",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"resumeself--void-2",children:"resume(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Resume the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_resume() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"RESUMING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-22",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"shutdown_systemself-str-reasonnone--void-2",children:"shutdown_system(self, str reason=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Initiate a system-wide shutdown by generating and publishing a ShutdownSystem command."}),"\n",(0,r.jsx)(n.p,{children:"The command is handled by the system\u2019s NautilusKernel, which will invoke either stop (synchronously) or stop_async (asynchronously) depending on the execution context and the presence of an active event loop."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"reason"})," (",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The reason for issuing the shutdown command."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"startself--void-2",children:"start(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Start the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_start() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"STARTING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-23",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"state-2",children:"state"}),"\n",(0,r.jsx)(n.p,{children:"ComponentState"}),"\n",(0,r.jsx)(n.p,{children:"Return the components current state."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ComponentState"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.state"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"stopself--void-2",children:"stop(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Stop the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_stop() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"STOPPING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-24",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"submit_orderself-submitorder-command--void",children:"submit_order(self, SubmitOrder command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"submit_order_listself-submitorderlist-command--void",children:"submit_order_list(self, SubmitOrderList command) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"trader_id-3",children:"trader_id"}),"\n",(0,r.jsx)(n.p,{children:"The trader ID associated with the component."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," TraderId"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"type-2",children:"type"}),"\n",(0,r.jsx)(n.p,{children:"The components type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," type"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"venue-3",children:"venue"}),"\n",(0,r.jsx)(n.p,{children:"The clients venue ID (if not a routing client)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," Venue or ",(0,r.jsx)(n.code,{children:"None"})]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"class-bestpricefillmodel",children:[(0,r.jsx)(n.em,{children:"class"})," BestPriceFillModel"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.FillModel",children:(0,r.jsx)(n.code,{children:"FillModel"})})]}),"\n",(0,r.jsx)(n.p,{children:"Fill model that executes all orders at the best available price."}),"\n",(0,r.jsx)(n.p,{children:"This model simulates optimistic market conditions where every order gets filled immediately at the best available price. Ideal for testing basic strategy logic."}),"\n",(0,r.jsxs)(n.h4,{id:"get_orderbook_for_fill_simulationself-instrument-instrument-instrument-order-order-order-price-best_bid-price-price-best_ask-price--orderbook--none",children:["get_orderbook_for_fill_simulation(self, Instrument instrument: Instrument, Order order: Order, Price best_bid: Price, Price best_ask: Price) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/book#nautilus_trader.model.book.OrderBook",children:"OrderBook"})," | None"]}),"\n",(0,r.jsx)(n.p,{children:"Return OrderBook with unlimited liquidity at best prices."}),"\n",(0,r.jsx)(n.h4,{id:"is_limit_filledself--bool",children:"is_limit_filled(self) \u2192 bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return a value indicating whether a ",(0,r.jsx)(n.code,{children:"LIMIT"})," order filled."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_slippedself--bool",children:"is_slipped(self) \u2192 bool"}),"\n",(0,r.jsx)(n.p,{children:"Return a value indicating whether an order fill slipped."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_stop_filledself--bool",children:"is_stop_filled(self) \u2192 bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return a value indicating whether a ",(0,r.jsx)(n.code,{children:"STOP-MARKET"})," order filled."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_fill_on_limit",children:"prob_fill_on_limit"}),"\n",(0,r.jsx)(n.p,{children:"The probability of limit orders filling on the limit price."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_fill_on_stop",children:"prob_fill_on_stop"}),"\n",(0,r.jsx)(n.p,{children:"The probability of stop orders filling on the stop price."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_slippage",children:"prob_slippage"}),"\n",(0,r.jsx)(n.p,{children:"The probability of aggressive order execution slipping."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"class-competitionawarefillmodel",children:[(0,r.jsx)(n.em,{children:"class"})," CompetitionAwareFillModel"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.FillModel",children:(0,r.jsx)(n.code,{children:"FillModel"})})]}),"\n",(0,r.jsx)(n.p,{children:"Fill model that simulates market competition effects."}),"\n",(0,r.jsx)(n.p,{children:"Makes only a percentage of visible liquidity actually available, reflecting realistic conditions where multiple traders compete for the same liquidity."}),"\n",(0,r.jsxs)(n.h4,{id:"get_orderbook_for_fill_simulationself-instrument-instrument-instrument-order-order-order-price-best_bid-price-price-best_ask-price--orderbook--none-1",children:["get_orderbook_for_fill_simulation(self, Instrument instrument: Instrument, Order order: Order, Price best_bid: Price, Price best_ask: Price) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/book#nautilus_trader.model.book.OrderBook",children:"OrderBook"})," | None"]}),"\n",(0,r.jsx)(n.p,{children:"Return OrderBook with competition-adjusted liquidity."}),"\n",(0,r.jsx)(n.h4,{id:"is_limit_filledself--bool-1",children:"is_limit_filled(self) \u2192 bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return a value indicating whether a ",(0,r.jsx)(n.code,{children:"LIMIT"})," order filled."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_slippedself--bool-1",children:"is_slipped(self) \u2192 bool"}),"\n",(0,r.jsx)(n.p,{children:"Return a value indicating whether an order fill slipped."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_stop_filledself--bool-1",children:"is_stop_filled(self) \u2192 bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return a value indicating whether a ",(0,r.jsx)(n.code,{children:"STOP-MARKET"})," order filled."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_fill_on_limit-1",children:"prob_fill_on_limit"}),"\n",(0,r.jsx)(n.p,{children:"The probability of limit orders filling on the limit price."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_fill_on_stop-1",children:"prob_fill_on_stop"}),"\n",(0,r.jsx)(n.p,{children:"The probability of stop orders filling on the stop price."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_slippage-1",children:"prob_slippage"}),"\n",(0,r.jsx)(n.p,{children:"The probability of aggressive order execution slipping."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"class-feemodel",children:[(0,r.jsx)(n.em,{children:"class"})," FeeModel"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.code,{children:"object"})]}),"\n",(0,r.jsx)(n.p,{children:"Provides an abstract fee model for trades."}),"\n",(0,r.jsxs)(n.h4,{id:"get_commissionself-order-order-quantity-fill_qty-price-fill_px-instrument-instrument--money",children:["get_commission(self, Order order, Quantity fill_qty, Price fill_px, Instrument instrument) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Money",children:"Money"})]}),"\n",(0,r.jsx)(n.p,{children:"Return the commission for a trade."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"order"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/orders#nautilus_trader.model.orders.Order",children:(0,r.jsx)(n.em,{children:"Order"})}),") \u2013 The order to calculate the commission for."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"fill_qty"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Quantity",children:(0,r.jsx)(n.em,{children:"Quantity"})}),") \u2013 The fill quantity of the order."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"fill_px"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Price",children:(0,r.jsx)(n.em,{children:"Price"})}),") \u2013 The fill price of the order."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.Instrument",children:(0,r.jsx)(n.em,{children:"Instrument"})}),") \u2013 The instrument for the order."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Money",children:"Money"})]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"class-fillmodel",children:[(0,r.jsx)(n.em,{children:"class"})," FillModel"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.code,{children:"object"})]}),"\n",(0,r.jsx)(n.p,{children:"FillModel(double prob_fill_on_limit=1.0, double prob_fill_on_stop=1.0, double prob_slippage=0.0, int random_seed: int | None = None, config=None) -> None"}),"\n",(0,r.jsx)(n.p,{children:"Provides probabilistic modeling for order fill dynamics including probability of fills and slippage by order type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"prob_fill_on_limit"})," (\u200b",(0,r.jsx)(n.em,{children:"double"}),"\u200b) \u2013 The probability of limit order filling if the market rests on its price."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"prob_fill_on_stop"})," (\u200b",(0,r.jsx)(n.em,{children:"double"}),"\u200b) \u2013 The probability of stop orders filling if the market rests on its price."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"prob_slippage"})," (\u200b",(0,r.jsx)(n.em,{children:"double"}),"\u200b) \u2013 The probability of order fill prices slipping by one tick."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"random_seed"})," (",(0,r.jsx)(n.em,{children:"int"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The random seed (if None then no random seed)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"config"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.backtest.config.FillModelConfig",children:(0,r.jsx)(n.em,{children:"FillModelConfig"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The configuration for the model."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If any probability argument is not within range [0, 1]."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If random_seed is not None and not of type int."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"get_orderbook_for_fill_simulationself-instrument-instrument-order-order-price-best_bid-price-best_ask--orderbook",children:["get_orderbook_for_fill_simulation(self, Instrument instrument, Order order, Price best_bid, Price best_ask) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/book#nautilus_trader.model.book.OrderBook",children:"OrderBook"})]}),"\n",(0,r.jsx)(n.p,{children:"Return a simulated OrderBook for fill simulation."}),"\n",(0,r.jsx)(n.p,{children:"This method allows custom fill models to provide their own liquidity simulation by returning a custom OrderBook that represents the expected market liquidity. The matching engine will use this simulated OrderBook to determine fills."}),"\n",(0,r.jsx)(n.p,{children:"The default implementation returns None, which means the matching engine will use its standard fill logic (maintaining backward compatibility)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.Instrument",children:(0,r.jsx)(n.em,{children:"Instrument"})}),") \u2013 The instrument being traded."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"order"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/orders#nautilus_trader.model.orders.Order",children:(0,r.jsx)(n.em,{children:"Order"})}),") \u2013 The order to simulate fills for."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"best_bid"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Price",children:(0,r.jsx)(n.em,{children:"Price"})}),") \u2013 The current best bid price."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"best_ask"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Price",children:(0,r.jsx)(n.em,{children:"Price"})}),") \u2013 The current best ask price."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The simulated OrderBook for fill simulation, or None to use default logic."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/book#nautilus_trader.model.book.OrderBook",children:"OrderBook"})," or None"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_limit_filledself--bool-2",children:"is_limit_filled(self) \u2192 bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return a value indicating whether a ",(0,r.jsx)(n.code,{children:"LIMIT"})," order filled."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_slippedself--bool-2",children:"is_slipped(self) \u2192 bool"}),"\n",(0,r.jsx)(n.p,{children:"Return a value indicating whether an order fill slipped."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_stop_filledself--bool-2",children:"is_stop_filled(self) \u2192 bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return a value indicating whether a ",(0,r.jsx)(n.code,{children:"STOP-MARKET"})," order filled."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_fill_on_limit-2",children:"prob_fill_on_limit"}),"\n",(0,r.jsx)(n.p,{children:"The probability of limit orders filling on the limit price."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_fill_on_stop-2",children:"prob_fill_on_stop"}),"\n",(0,r.jsx)(n.p,{children:"The probability of stop orders filling on the stop price."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_slippage-2",children:"prob_slippage"}),"\n",(0,r.jsx)(n.p,{children:"The probability of aggressive order execution slipping."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"class-fixedfeemodel",children:[(0,r.jsx)(n.em,{children:"class"})," FixedFeeModel"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.FeeModel",children:(0,r.jsx)(n.code,{children:"FeeModel"})})]}),"\n",(0,r.jsx)(n.p,{children:"FixedFeeModel(Money commission=None, bool charge_commission_once: bool = True, config=None) -> None"}),"\n",(0,r.jsx)(n.p,{children:"Provides a fixed fee model for trades."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"commission"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Money",children:(0,r.jsx)(n.em,{children:"Money"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The fixed commission amount for trades."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"charge_commission_once"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 Whether to charge the commission once per order or per fill."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"config"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.backtest.config.FixedFeeModelConfig",children:(0,r.jsx)(n.em,{children:"FixedFeeModelConfig"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The configuration for the model."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If both ",(0,r.jsx)(n.code,{children:"commission"})," ",(0,r.jsx)(n.strong,{children:"and"})," ",(0,r.jsx)(n.code,{children:"config"})," are provided, ",(0,r.jsx)(n.strong,{children:"or"})," if both are ",(0,r.jsx)(n.code,{children:"None"})," (exactly one must be supplied)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If commission is not a positive amount."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"get_commissionself-order-order-quantity-fill_qty-price-fill_px-instrument-instrument--money-1",children:["get_commission(self, Order order, Quantity fill_qty, Price fill_px, Instrument instrument) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Money",children:"Money"})]}),"\n",(0,r.jsxs)(n.h3,{id:"class-latencymodel",children:[(0,r.jsx)(n.em,{children:"class"})," LatencyModel"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.code,{children:"object"})]}),"\n",(0,r.jsx)(n.p,{children:"LatencyModel(uint64_t base_latency_nanos=NANOSECONDS_IN_MILLISECOND, uint64_t insert_latency_nanos=0, uint64_t update_latency_nanos=0, uint64_t cancel_latency_nanos=0, config=None) -> None"}),"\n",(0,r.jsx)(n.p,{children:"Provides a latency model for simulated exchange message I/O."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"base_latency_nanos"})," (",(0,r.jsx)(n.em,{children:"int"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default 1_000_000_000"}),"\u200b) \u2013 The base latency (nanoseconds) for the model."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"insert_latency_nanos"})," (",(0,r.jsx)(n.em,{children:"int"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default 0"}),"\u200b) \u2013 The order insert latency (nanoseconds) for the model."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"update_latency_nanos"})," (",(0,r.jsx)(n.em,{children:"int"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default 0"}),"\u200b) \u2013 The order update latency (nanoseconds) for the model."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"cancel_latency_nanos"})," (",(0,r.jsx)(n.em,{children:"int"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default 0"}),"\u200b) \u2013 The order cancel latency (nanoseconds) for the model."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"config"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.backtest.config.FillModelConfig",children:(0,r.jsx)(n.em,{children:"FillModelConfig"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The configuration for the model."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If base_latency_nanos is negative (< 0)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If insert_latency_nanos is negative (< 0)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If update_latency_nanos is negative (< 0)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If cancel_latency_nanos is negative (< 0)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"base_latency_nanos",children:"base_latency_nanos"}),"\n",(0,r.jsx)(n.p,{children:"The default latency to the exchange."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"cancel_latency_nanos",children:"cancel_latency_nanos"}),"\n",(0,r.jsx)(n.p,{children:"The latency (nanoseconds) for order cancel messages to reach the exchange."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"insert_latency_nanos",children:"insert_latency_nanos"}),"\n",(0,r.jsx)(n.p,{children:"The latency (nanoseconds) for order insert messages to reach the exchange."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"update_latency_nanos",children:"update_latency_nanos"}),"\n",(0,r.jsx)(n.p,{children:"The latency (nanoseconds) for order update messages to reach the exchange."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"class-leveragedmarginmodel",children:[(0,r.jsx)(n.em,{children:"class"})," LeveragedMarginModel"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.MarginModel",children:(0,r.jsx)(n.code,{children:"MarginModel"})})]}),"\n",(0,r.jsx)(n.p,{children:"Leveraged margin model that divides margin requirements by leverage."}),"\n",(0,r.jsx)(n.p,{children:"This model represents the current Nautilus behavior and may be appropriate for certain crypto exchanges or specific trading scenarios where leverage directly reduces margin requirements."}),"\n",(0,r.jsx)(n.p,{children:"Formula:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Initial Margin = (notional_value / leverage) * instrument.margin_init"}),"\n",(0,r.jsx)(n.li,{children:"Maintenance Margin = (notional_value / leverage) * instrument.margin_maint"}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"calculate_margin_initself-instrument-instrument-quantity-quantity-price-price-leverage-decimal-bool-use_quote_for_inversefalse--money",children:["calculate_margin_init(self, Instrument instrument, Quantity quantity, Price price, leverage: Decimal, bool use_quote_for_inverse=False) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Money",children:"Money"})]}),"\n",(0,r.jsx)(n.p,{children:"Calculate initial margin with leverage division."}),"\n",(0,r.jsxs)(n.h4,{id:"calculate_margin_maintself-instrument-instrument-positionside-side-quantity-quantity-price-price-leverage-decimal-bool-use_quote_for_inversefalse--money",children:["calculate_margin_maint(self, Instrument instrument, PositionSide side, Quantity quantity, Price price, leverage: Decimal, bool use_quote_for_inverse=False) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Money",children:"Money"})]}),"\n",(0,r.jsx)(n.p,{children:"Calculate maintenance margin with leverage division."}),"\n",(0,r.jsxs)(n.h3,{id:"class-limitorderpartialfillmodel",children:[(0,r.jsx)(n.em,{children:"class"})," LimitOrderPartialFillModel"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.FillModel",children:(0,r.jsx)(n.code,{children:"FillModel"})})]}),"\n",(0,r.jsx)(n.p,{children:"Fill model that simulates partial fills for limit orders."}),"\n",(0,r.jsx)(n.p,{children:"When price touches the limit level, only fills maximum 5 contracts of the order quantity, modeling typical limit order queue behavior."}),"\n",(0,r.jsxs)(n.h4,{id:"get_orderbook_for_fill_simulationself-instrument-instrument-instrument-order-order-order-price-best_bid-price-price-best_ask-price--orderbook--none-2",children:["get_orderbook_for_fill_simulation(self, Instrument instrument: Instrument, Order order: Order, Price best_bid: Price, Price best_ask: Price) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/book#nautilus_trader.model.book.OrderBook",children:"OrderBook"})," | None"]}),"\n",(0,r.jsx)(n.p,{children:"Return OrderBook with limited fills at limit prices."}),"\n",(0,r.jsx)(n.h4,{id:"is_limit_filledself--bool-3",children:"is_limit_filled(self) \u2192 bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return a value indicating whether a ",(0,r.jsx)(n.code,{children:"LIMIT"})," order filled."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_slippedself--bool-3",children:"is_slipped(self) \u2192 bool"}),"\n",(0,r.jsx)(n.p,{children:"Return a value indicating whether an order fill slipped."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_stop_filledself--bool-3",children:"is_stop_filled(self) \u2192 bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return a value indicating whether a ",(0,r.jsx)(n.code,{children:"STOP-MARKET"})," order filled."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_fill_on_limit-3",children:"prob_fill_on_limit"}),"\n",(0,r.jsx)(n.p,{children:"The probability of limit orders filling on the limit price."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_fill_on_stop-3",children:"prob_fill_on_stop"}),"\n",(0,r.jsx)(n.p,{children:"The probability of stop orders filling on the stop price."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_slippage-3",children:"prob_slippage"}),"\n",(0,r.jsx)(n.p,{children:"The probability of aggressive order execution slipping."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"class-makertakerfeemodel",children:[(0,r.jsx)(n.em,{children:"class"})," MakerTakerFeeModel"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.FeeModel",children:(0,r.jsx)(n.code,{children:"FeeModel"})})]}),"\n",(0,r.jsx)(n.p,{children:"MakerTakerFeeModel(config=None) -> None"}),"\n",(0,r.jsx)(n.p,{children:"Provide a fee model for trades based on a maker/taker fee schedule and notional value of the trade."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"config"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.backtest.config.MakerTakerFeeModelConfig",children:(0,r.jsx)(n.em,{children:"MakerTakerFeeModelConfig"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The configuration for the fee model."]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"get_commissionself-order-order-quantity-fill_qty-price-fill_px-instrument-instrument--money-2",children:["get_commission(self, Order order, Quantity fill_qty, Price fill_px, Instrument instrument) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Money",children:"Money"})]}),"\n",(0,r.jsxs)(n.h3,{id:"class-marginmodel",children:[(0,r.jsx)(n.em,{children:"class"})," MarginModel"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.code,{children:"object"})]}),"\n",(0,r.jsx)(n.p,{children:"Abstract base class for margin calculation models."}),"\n",(0,r.jsx)(n.p,{children:"Different venues and instrument types may have varying approaches to calculating margin requirements. This abstraction allows for flexible margin calculation strategies."}),"\n",(0,r.jsxs)(n.h4,{id:"calculate_margin_initself-instrument-instrument-quantity-quantity-price-price-leverage-decimal-bool-use_quote_for_inversefalse--money-1",children:["calculate_margin_init(self, Instrument instrument, Quantity quantity, Price price, leverage: Decimal, bool use_quote_for_inverse=False) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Money",children:"Money"})]}),"\n",(0,r.jsx)(n.p,{children:"Calculate the initial (order) margin requirement."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.Instrument",children:(0,r.jsx)(n.em,{children:"Instrument"})}),") \u2013 The instrument for the calculation."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"quantity"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Quantity",children:(0,r.jsx)(n.em,{children:"Quantity"})}),") \u2013 The order quantity."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"price"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Price",children:(0,r.jsx)(n.em,{children:"Price"})}),") \u2013 The order price."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"leverage"})," (\u200b",(0,r.jsx)(n.em,{children:"Decimal"}),"\u200b) \u2013 The account leverage for this instrument."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"use_quote_for_inverse"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If inverse instrument calculations use quote currency (instead of base)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The initial margin requirement."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Money",children:"Money"})]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"calculate_margin_maintself-instrument-instrument-positionside-side-quantity-quantity-price-price-leverage-decimal-bool-use_quote_for_inversefalse--money-1",children:["calculate_margin_maint(self, Instrument instrument, PositionSide side, Quantity quantity, Price price, leverage: Decimal, bool use_quote_for_inverse=False) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Money",children:"Money"})]}),"\n",(0,r.jsx)(n.p,{children:"Calculate the maintenance (position) margin requirement."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.Instrument",children:(0,r.jsx)(n.em,{children:"Instrument"})}),") \u2013 The instrument for the calculation."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"side"})," (\u200b",(0,r.jsx)(n.em,{children:"PositionSide"}),"\u200b) \u2013 The position side."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"quantity"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Quantity",children:(0,r.jsx)(n.em,{children:"Quantity"})}),") \u2013 The position quantity."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"price"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Price",children:(0,r.jsx)(n.em,{children:"Price"})}),") \u2013 The current price."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"leverage"})," (\u200b",(0,r.jsx)(n.em,{children:"Decimal"}),"\u200b) \u2013 The account leverage for this instrument."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"use_quote_for_inverse"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If inverse instrument calculations use quote currency (instead of base)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The maintenance margin requirement."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Money",children:"Money"})]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"class-markethoursfillmodel",children:[(0,r.jsx)(n.em,{children:"class"})," MarketHoursFillModel"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.FillModel",children:(0,r.jsx)(n.code,{children:"FillModel"})})]}),"\n",(0,r.jsx)(n.p,{children:"Fill model that simulates varying market conditions based on time."}),"\n",(0,r.jsx)(n.p,{children:"Implements wider spreads during low liquidity periods (e.g., outside market hours). Essential for strategies that trade across different market sessions."}),"\n",(0,r.jsxs)(n.h4,{id:"get_orderbook_for_fill_simulationself-instrument-instrument-instrument-order-order-order-price-best_bid-price-price-best_ask-price--orderbook--none-3",children:["get_orderbook_for_fill_simulation(self, Instrument instrument: Instrument, Order order: Order, Price best_bid: Price, Price best_ask: Price) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/book#nautilus_trader.model.book.OrderBook",children:"OrderBook"})," | None"]}),"\n",(0,r.jsx)(n.p,{children:"Return OrderBook with time-dependent liquidity."}),"\n",(0,r.jsx)(n.h4,{id:"is_limit_filledself--bool-4",children:"is_limit_filled(self) \u2192 bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return a value indicating whether a ",(0,r.jsx)(n.code,{children:"LIMIT"})," order filled."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_low_liquidity_periodself--bool",children:"is_low_liquidity_period(self) \u2192 bool"}),"\n",(0,r.jsx)(n.p,{children:"Check if current time is during low liquidity period."}),"\n",(0,r.jsx)(n.h4,{id:"is_slippedself--bool-4",children:"is_slipped(self) \u2192 bool"}),"\n",(0,r.jsx)(n.p,{children:"Return a value indicating whether an order fill slipped."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_stop_filledself--bool-4",children:"is_stop_filled(self) \u2192 bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return a value indicating whether a ",(0,r.jsx)(n.code,{children:"STOP-MARKET"})," order filled."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_fill_on_limit-4",children:"prob_fill_on_limit"}),"\n",(0,r.jsx)(n.p,{children:"The probability of limit orders filling on the limit price."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_fill_on_stop-4",children:"prob_fill_on_stop"}),"\n",(0,r.jsx)(n.p,{children:"The probability of stop orders filling on the stop price."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_slippage-4",children:"prob_slippage"}),"\n",(0,r.jsx)(n.p,{children:"The probability of aggressive order execution slipping."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"set_low_liquidity_periodself-is_low_liquidity-bool",children:"set_low_liquidity_period(self, is_low_liquidity: bool)"}),"\n",(0,r.jsx)(n.p,{children:"Set the liquidity period for testing purposes."}),"\n",(0,r.jsxs)(n.h3,{id:"class-onetickslippagefillmodel",children:[(0,r.jsx)(n.em,{children:"class"})," OneTickSlippageFillModel"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.FillModel",children:(0,r.jsx)(n.code,{children:"FillModel"})})]}),"\n",(0,r.jsx)(n.p,{children:"Fill model that forces exactly one tick of slippage for all orders."}),"\n",(0,r.jsx)(n.p,{children:"This model demonstrates how to create deterministic slippage by setting zero volume at best prices and unlimited volume one tick away."}),"\n",(0,r.jsxs)(n.h4,{id:"get_orderbook_for_fill_simulationself-instrument-instrument-instrument-order-order-order-price-best_bid-price-price-best_ask-price--orderbook--none-4",children:["get_orderbook_for_fill_simulation(self, Instrument instrument: Instrument, Order order: Order, Price best_bid: Price, Price best_ask: Price) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/book#nautilus_trader.model.book.OrderBook",children:"OrderBook"})," | None"]}),"\n",(0,r.jsx)(n.p,{children:"Return OrderBook with no volume at best prices, unlimited volume one tick away."}),"\n",(0,r.jsx)(n.h4,{id:"is_limit_filledself--bool-5",children:"is_limit_filled(self) \u2192 bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return a value indicating whether a ",(0,r.jsx)(n.code,{children:"LIMIT"})," order filled."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_slippedself--bool-5",children:"is_slipped(self) \u2192 bool"}),"\n",(0,r.jsx)(n.p,{children:"Return a value indicating whether an order fill slipped."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_stop_filledself--bool-5",children:"is_stop_filled(self) \u2192 bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return a value indicating whether a ",(0,r.jsx)(n.code,{children:"STOP-MARKET"})," order filled."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_fill_on_limit-5",children:"prob_fill_on_limit"}),"\n",(0,r.jsx)(n.p,{children:"The probability of limit orders filling on the limit price."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_fill_on_stop-5",children:"prob_fill_on_stop"}),"\n",(0,r.jsx)(n.p,{children:"The probability of stop orders filling on the stop price."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_slippage-5",children:"prob_slippage"}),"\n",(0,r.jsx)(n.p,{children:"The probability of aggressive order execution slipping."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"class-percontractfeemodel",children:[(0,r.jsx)(n.em,{children:"class"})," PerContractFeeModel"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.FeeModel",children:(0,r.jsx)(n.code,{children:"FeeModel"})})]}),"\n",(0,r.jsx)(n.p,{children:"PerContractFeeModel(Money commission=None, config=None) -> None"}),"\n",(0,r.jsx)(n.p,{children:"Provides a fee model which charges a commission per contract traded."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"commission"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Money",children:(0,r.jsx)(n.em,{children:"Money"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The commission amount per contract."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"config"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.backtest.config.PerContractFeeModelConfig",children:(0,r.jsx)(n.em,{children:"PerContractFeeModelConfig"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The configuration for the model."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If both ",(0,r.jsx)(n.code,{children:"commission"})," ",(0,r.jsx)(n.strong,{children:"and"})," ",(0,r.jsx)(n.code,{children:"config"})," are provided, ",(0,r.jsx)(n.strong,{children:"or"})," if both are ",(0,r.jsx)(n.code,{children:"None"})," (exactly one must be supplied)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If commission is negative (< 0)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"get_commissionself-order-order-quantity-fill_qty-price-fill_px-instrument-instrument--money-3",children:["get_commission(self, Order order, Quantity fill_qty, Price fill_px, Instrument instrument) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Money",children:"Money"})]}),"\n",(0,r.jsxs)(n.h3,{id:"class-probabilisticfillmodel",children:[(0,r.jsx)(n.em,{children:"class"})," ProbabilisticFillModel"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.FillModel",children:(0,r.jsx)(n.code,{children:"FillModel"})})]}),"\n",(0,r.jsx)(n.p,{children:"Fill model that replicates the current probabilistic behavior."}),"\n",(0,r.jsx)(n.p,{children:"This model demonstrates how to implement the existing FillModel\u2019s probabilistic behavior using the new simulation approach: 50% chance of best price fill, 50% chance of one tick slippage."}),"\n",(0,r.jsxs)(n.h4,{id:"get_orderbook_for_fill_simulationself-instrument-instrument-instrument-order-order-order-price-best_bid-price-price-best_ask-price--orderbook--none-5",children:["get_orderbook_for_fill_simulation(self, Instrument instrument: Instrument, Order order: Order, Price best_bid: Price, Price best_ask: Price) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/book#nautilus_trader.model.book.OrderBook",children:"OrderBook"})," | None"]}),"\n",(0,r.jsx)(n.p,{children:"Return OrderBook based on probabilistic logic."}),"\n",(0,r.jsx)(n.h4,{id:"is_limit_filledself--bool-6",children:"is_limit_filled(self) \u2192 bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return a value indicating whether a ",(0,r.jsx)(n.code,{children:"LIMIT"})," order filled."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_slippedself--bool-6",children:"is_slipped(self) \u2192 bool"}),"\n",(0,r.jsx)(n.p,{children:"Return a value indicating whether an order fill slipped."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_stop_filledself--bool-6",children:"is_stop_filled(self) \u2192 bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return a value indicating whether a ",(0,r.jsx)(n.code,{children:"STOP-MARKET"})," order filled."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_fill_on_limit-6",children:"prob_fill_on_limit"}),"\n",(0,r.jsx)(n.p,{children:"The probability of limit orders filling on the limit price."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_fill_on_stop-6",children:"prob_fill_on_stop"}),"\n",(0,r.jsx)(n.p,{children:"The probability of stop orders filling on the stop price."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_slippage-6",children:"prob_slippage"}),"\n",(0,r.jsx)(n.p,{children:"The probability of aggressive order execution slipping."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"class-sizeawarefillmodel",children:[(0,r.jsx)(n.em,{children:"class"})," SizeAwareFillModel"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.FillModel",children:(0,r.jsx)(n.code,{children:"FillModel"})})]}),"\n",(0,r.jsx)(n.p,{children:"Fill model that applies different execution models based on order size."}),"\n",(0,r.jsx)(n.p,{children:"Small orders (<=10) get good liquidity at best prices. Large orders experience price impact with partial fills at worse prices."}),"\n",(0,r.jsxs)(n.h4,{id:"get_orderbook_for_fill_simulationself-instrument-instrument-instrument-order-order-order-price-best_bid-price-price-best_ask-price--orderbook--none-6",children:["get_orderbook_for_fill_simulation(self, Instrument instrument: Instrument, Order order: Order, Price best_bid: Price, Price best_ask: Price) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/book#nautilus_trader.model.book.OrderBook",children:"OrderBook"})," | None"]}),"\n",(0,r.jsx)(n.p,{children:"Return OrderBook with size-dependent liquidity."}),"\n",(0,r.jsx)(n.h4,{id:"is_limit_filledself--bool-7",children:"is_limit_filled(self) \u2192 bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return a value indicating whether a ",(0,r.jsx)(n.code,{children:"LIMIT"})," order filled."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_slippedself--bool-7",children:"is_slipped(self) \u2192 bool"}),"\n",(0,r.jsx)(n.p,{children:"Return a value indicating whether an order fill slipped."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_stop_filledself--bool-7",children:"is_stop_filled(self) \u2192 bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return a value indicating whether a ",(0,r.jsx)(n.code,{children:"STOP-MARKET"})," order filled."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_fill_on_limit-7",children:"prob_fill_on_limit"}),"\n",(0,r.jsx)(n.p,{children:"The probability of limit orders filling on the limit price."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_fill_on_stop-7",children:"prob_fill_on_stop"}),"\n",(0,r.jsx)(n.p,{children:"The probability of stop orders filling on the stop price."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_slippage-7",children:"prob_slippage"}),"\n",(0,r.jsx)(n.p,{children:"The probability of aggressive order execution slipping."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"class-spreadquoteaggregator",children:[(0,r.jsx)(n.em,{children:"class"})," SpreadQuoteAggregator"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.Component",children:(0,r.jsx)(n.code,{children:"Component"})})]}),"\n",(0,r.jsx)(n.p,{children:"SpreadQuoteAggregator(InstrumentId spread_instrument_id, handler: Callable[[QuoteTick], None], MessageBus msgbus, CacheFacade cache, Clock clock, int update_interval_seconds=60)"}),"\n",(0,r.jsx)(n.p,{children:"Provides a spread quote generator for creating synthetic quotes from component instruments."}),"\n",(0,r.jsx)(n.p,{children:"The generator subscribes to quotes from component instruments of a spread and generates averaged quotes for the spread instrument."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"spread_instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The spread instrument ID to generate quotes for."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"handler"})," (",(0,r.jsx)(n.em,{children:"Callable"})," ",(0,r.jsx)(n.em,{children:"["})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(n.em,{children:"QuoteTick"})})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"None"})," \u200b*]*\u200b) \u2013 The quote handler for the generator."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"cache"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/cache#nautilus_trader.cache.base.CacheFacade",children:(0,r.jsx)(n.em,{children:"CacheFacade"})}),") \u2013 The cache facade for accessing market data."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"degradeself--void-3",children:"degrade(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Degrade the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_degrade() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"DEGRADING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-25",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"disposeself--void-3",children:"dispose(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Dispose of the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_dispose() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"DISPOSING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-26",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"faultself--void-3",children:"fault(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Fault the component."}),"\n",(0,r.jsx)(n.p,{children:"Calling this method multiple times has the same effect as calling it once (it is idempotent). Once called, it cannot be reversed, and no other methods should be called on this instance."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_fault() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"FAULTING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-27",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsxs)(n.h4,{id:"classmethod-fully_qualified_namecls--str-3",children:[(0,r.jsx)(n.em,{children:"classmethod"})," fully_qualified_name(cls) \u2192 str"]}),"\n",(0,r.jsx)(n.p,{children:"Return the fully qualified name for the components class."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"id-4",children:"id"}),"\n",(0,r.jsx)(n.p,{children:"The components ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," ComponentId"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_degraded-3",children:"is_degraded"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"DEGRADED"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_degraded"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_disposed-3",children:"is_disposed"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"DISPOSED"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_disposed"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_faulted-3",children:"is_faulted"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"FAULTED"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_faulted"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_initialized-3",children:"is_initialized"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the component has been initialized (component.state >= ",(0,r.jsx)(n.code,{children:"INITIALIZED"}),")."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_initialized"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_running-3",children:"is_running"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_running"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_stopped-3",children:"is_stopped"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"STOPPED"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_stopped"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"resetself--void-5",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Reset the component."}),"\n",(0,r.jsx)(n.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_reset() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"RESETTING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-28",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"resumeself--void-3",children:"resume(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Resume the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_resume() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"RESUMING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-29",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"shutdown_systemself-str-reasonnone--void-3",children:"shutdown_system(self, str reason=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Initiate a system-wide shutdown by generating and publishing a ShutdownSystem command."}),"\n",(0,r.jsx)(n.p,{children:"The command is handled by the system\u2019s NautilusKernel, which will invoke either stop (synchronously) or stop_async (asynchronously) depending on the execution context and the presence of an active event loop."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"reason"})," (",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The reason for issuing the shutdown command."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"startself--void-3",children:"start(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Start the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_start() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"STARTING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-30",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"state-3",children:"state"}),"\n",(0,r.jsx)(n.p,{children:"ComponentState"}),"\n",(0,r.jsx)(n.p,{children:"Return the components current state."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ComponentState"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.state"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"stopself--void-3",children:"stop(self) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"trader_id-4",children:"trader_id"}),"\n",(0,r.jsx)(n.p,{children:"The trader ID associated with the component."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," TraderId"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"type-3",children:"type"}),"\n",(0,r.jsx)(n.p,{children:"The components type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," type"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"class-standardmarginmodel",children:[(0,r.jsx)(n.em,{children:"class"})," StandardMarginModel"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.MarginModel",children:(0,r.jsx)(n.code,{children:"MarginModel"})})]}),"\n",(0,r.jsx)(n.p,{children:"Standard margin model that uses fixed percentages without leverage division."}),"\n",(0,r.jsx)(n.p,{children:"This model matches traditional broker behavior (e.g., Interactive Brokers) where margin requirements are fixed percentages of notional value regardless of account leverage. Leverage affects buying power but not margin requirements."}),"\n",(0,r.jsx)(n.p,{children:"Formula:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Initial Margin = notional_value * instrument.margin_init"}),"\n",(0,r.jsx)(n.li,{children:"Maintenance Margin = notional_value * instrument.margin_maint"}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"calculate_margin_initself-instrument-instrument-quantity-quantity-price-price-leverage-decimal-bool-use_quote_for_inversefalse--money-2",children:["calculate_margin_init(self, Instrument instrument, Quantity quantity, Price price, leverage: Decimal, bool use_quote_for_inverse=False) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Money",children:"Money"})]}),"\n",(0,r.jsx)(n.p,{children:"Calculate initial margin using fixed percentage of notional value."}),"\n",(0,r.jsxs)(n.h4,{id:"calculate_margin_maintself-instrument-instrument-positionside-side-quantity-quantity-price-price-leverage-decimal-bool-use_quote_for_inversefalse--money-2",children:["calculate_margin_maint(self, Instrument instrument, PositionSide side, Quantity quantity, Price price, leverage: Decimal, bool use_quote_for_inverse=False) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Money",children:"Money"})]}),"\n",(0,r.jsx)(n.p,{children:"Calculate maintenance margin using fixed percentage of notional value."}),"\n",(0,r.jsxs)(n.h3,{id:"class-threetierfillmodel",children:[(0,r.jsx)(n.em,{children:"class"})," ThreeTierFillModel"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.FillModel",children:(0,r.jsx)(n.code,{children:"FillModel"})})]}),"\n",(0,r.jsx)(n.p,{children:"Fill model with three-tier pricing for realistic market depth simulation."}),"\n",(0,r.jsx)(n.p,{children:"Distributes 100-contract order fills across three price levels:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"50 contracts at best price"}),"\n",(0,r.jsx)(n.li,{children:"30 contracts 1 tick worse"}),"\n",(0,r.jsx)(n.li,{children:"20 contracts 2 ticks worse"}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"get_orderbook_for_fill_simulationself-instrument-instrument-instrument-order-order-order-price-best_bid-price-price-best_ask-price--orderbook--none-7",children:["get_orderbook_for_fill_simulation(self, Instrument instrument: Instrument, Order order: Order, Price best_bid: Price, Price best_ask: Price) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/book#nautilus_trader.model.book.OrderBook",children:"OrderBook"})," | None"]}),"\n",(0,r.jsx)(n.p,{children:"Return OrderBook with three-tier liquidity structure."}),"\n",(0,r.jsx)(n.h4,{id:"is_limit_filledself--bool-8",children:"is_limit_filled(self) \u2192 bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return a value indicating whether a ",(0,r.jsx)(n.code,{children:"LIMIT"})," order filled."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_slippedself--bool-8",children:"is_slipped(self) \u2192 bool"}),"\n",(0,r.jsx)(n.p,{children:"Return a value indicating whether an order fill slipped."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_stop_filledself--bool-8",children:"is_stop_filled(self) \u2192 bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return a value indicating whether a ",(0,r.jsx)(n.code,{children:"STOP-MARKET"})," order filled."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_fill_on_limit-8",children:"prob_fill_on_limit"}),"\n",(0,r.jsx)(n.p,{children:"The probability of limit orders filling on the limit price."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_fill_on_stop-8",children:"prob_fill_on_stop"}),"\n",(0,r.jsx)(n.p,{children:"The probability of stop orders filling on the stop price."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_slippage-8",children:"prob_slippage"}),"\n",(0,r.jsx)(n.p,{children:"The probability of aggressive order execution slipping."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"class-twotierfillmodel",children:[(0,r.jsx)(n.em,{children:"class"})," TwoTierFillModel"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.FillModel",children:(0,r.jsx)(n.code,{children:"FillModel"})})]}),"\n",(0,r.jsx)(n.p,{children:"Fill model with two-tier pricing: first 10 contracts at best price, remainder one tick worse."}),"\n",(0,r.jsx)(n.p,{children:"This model simulates basic market depth behavior and provides realistic simulation of basic market impact for small to medium orders."}),"\n",(0,r.jsxs)(n.h4,{id:"get_orderbook_for_fill_simulationself-instrument-instrument-instrument-order-order-order-price-best_bid-price-price-best_ask-price--orderbook--none-8",children:["get_orderbook_for_fill_simulation(self, Instrument instrument: Instrument, Order order: Order, Price best_bid: Price, Price best_ask: Price) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/book#nautilus_trader.model.book.OrderBook",children:"OrderBook"})," | None"]}),"\n",(0,r.jsx)(n.p,{children:"Return OrderBook with two-tier liquidity structure."}),"\n",(0,r.jsx)(n.h4,{id:"is_limit_filledself--bool-9",children:"is_limit_filled(self) \u2192 bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return a value indicating whether a ",(0,r.jsx)(n.code,{children:"LIMIT"})," order filled."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_slippedself--bool-9",children:"is_slipped(self) \u2192 bool"}),"\n",(0,r.jsx)(n.p,{children:"Return a value indicating whether an order fill slipped."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_stop_filledself--bool-9",children:"is_stop_filled(self) \u2192 bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return a value indicating whether a ",(0,r.jsx)(n.code,{children:"STOP-MARKET"})," order filled."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_fill_on_limit-9",children:"prob_fill_on_limit"}),"\n",(0,r.jsx)(n.p,{children:"The probability of limit orders filling on the limit price."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_fill_on_stop-9",children:"prob_fill_on_stop"}),"\n",(0,r.jsx)(n.p,{children:"The probability of stop orders filling on the stop price."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_slippage-9",children:"prob_slippage"}),"\n",(0,r.jsx)(n.p,{children:"The probability of aggressive order execution slipping."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"class-volumesensitivefillmodel",children:[(0,r.jsx)(n.em,{children:"class"})," VolumeSensitiveFillModel"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.FillModel",children:(0,r.jsx)(n.code,{children:"FillModel"})})]}),"\n",(0,r.jsx)(n.p,{children:"Fill model that adjusts liquidity based on recent trading volume."}),"\n",(0,r.jsx)(n.p,{children:"Creates realistic market depth based on actual market activity by using recent bar volume data to determine available liquidity."}),"\n",(0,r.jsxs)(n.h4,{id:"get_orderbook_for_fill_simulationself-instrument-instrument-instrument-order-order-order-price-best_bid-price-price-best_ask-price--orderbook--none-9",children:["get_orderbook_for_fill_simulation(self, Instrument instrument: Instrument, Order order: Order, Price best_bid: Price, Price best_ask: Price) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/book#nautilus_trader.model.book.OrderBook",children:"OrderBook"})," | None"]}),"\n",(0,r.jsx)(n.p,{children:"Return OrderBook with volume-based liquidity."}),"\n",(0,r.jsx)(n.h4,{id:"is_limit_filledself--bool-10",children:"is_limit_filled(self) \u2192 bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return a value indicating whether a ",(0,r.jsx)(n.code,{children:"LIMIT"})," order filled."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_slippedself--bool-10",children:"is_slipped(self) \u2192 bool"}),"\n",(0,r.jsx)(n.p,{children:"Return a value indicating whether an order fill slipped."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_stop_filledself--bool-10",children:"is_stop_filled(self) \u2192 bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return a value indicating whether a ",(0,r.jsx)(n.code,{children:"STOP-MARKET"})," order filled."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_fill_on_limit-10",children:"prob_fill_on_limit"}),"\n",(0,r.jsx)(n.p,{children:"The probability of limit orders filling on the limit price."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_fill_on_stop-10",children:"prob_fill_on_stop"}),"\n",(0,r.jsx)(n.p,{children:"The probability of stop orders filling on the stop price."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"prob_slippage-10",children:"prob_slippage"}),"\n",(0,r.jsx)(n.p,{children:"The probability of aggressive order execution slipping."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"set_recent_volumeself-double-volume-float",children:"set_recent_volume(self, double volume: float)"}),"\n",(0,r.jsx)(n.p,{children:"Set recent volume for testing purposes."}),"\n",(0,r.jsxs)(n.h3,{id:"class-fxrolloverinterestmodule",children:[(0,r.jsx)(n.em,{children:"class"})," FXRolloverInterestModule"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.modules.SimulationModule",children:(0,r.jsx)(n.code,{children:"SimulationModule"})})]}),"\n",(0,r.jsx)(n.p,{children:"FXRolloverInterestModule(config: FXRolloverInterestConfig)"}),"\n",(0,r.jsx)(n.p,{children:"Provides an FX rollover interest simulation module."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"config"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.backtest.config.FXRolloverInterestConfig",children:(0,r.jsx)(n.em,{children:"FXRolloverInterestConfig"})}),")"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"active_task_idsself--list",children:"active_task_ids(self) \u2192 list"}),"\n",(0,r.jsx)(n.p,{children:"Return the active task identifiers."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.executor.TaskId",children:"TaskId"}),"]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"add_syntheticself-syntheticinstrument-synthetic--void",children:"add_synthetic(self, SyntheticInstrument synthetic) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Add the created synthetic instrument to the cache."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"synthetic"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.SyntheticInstrument",children:(0,r.jsx)(n.em,{children:"SyntheticInstrument"})}),") \u2013 The synthetic instrument to add to the cache."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"})," ",(0,r.jsx)(n.strong,{children:"KeyError"})," \u2013 If synthetic is already in the cache."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"cache-3",children:"cache"}),"\n",(0,r.jsx)(n.p,{children:"The read-only cache for the actor."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," CacheFacade"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"cancel_all_tasksself--void",children:"cancel_all_tasks(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Cancel all queued and active tasks."}),"\n",(0,r.jsxs)(n.h4,{id:"cancel_taskself-task_id-taskid--void",children:["cancel_task(self, task_id: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.executor.TaskId",children:"TaskId"}),") \u2192 void"]}),"\n",(0,r.jsx)(n.p,{children:"Cancel the task with the given task_id (if queued or active)."}),"\n",(0,r.jsx)(n.p,{children:"If the task is not found then a warning is logged."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"task_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.executor.TaskId",children:(0,r.jsx)(n.em,{children:"TaskId"})}),") \u2013 The task identifier."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"clock",children:"clock"}),"\n",(0,r.jsx)(n.p,{children:"The actors clock."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," Clock"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"config",children:"config"}),"\n",(0,r.jsx)(n.p,{children:"The actors configuration."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," NautilusConfig"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"degradeself--void-4",children:"degrade(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Degrade the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_degrade() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"DEGRADING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-31",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"deregister_warning_eventself-type-event--void",children:"deregister_warning_event(self, type event) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Deregister the given event type from warning log levels."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"event"})," (\u200b",(0,r.jsx)(n.em,{children:"type"}),"\u200b) \u2013 The event class to deregister."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"disposeself--void-4",children:"dispose(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Dispose of the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_dispose() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"DISPOSING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-32",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"exchange",children:"exchange"}),"\n",(0,r.jsx)(n.h4,{id:"faultself--void-4",children:"fault(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Fault the component."}),"\n",(0,r.jsx)(n.p,{children:"Calling this method multiple times has the same effect as calling it once (it is idempotent). Once called, it cannot be reversed, and no other methods should be called on this instance."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_fault() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"FAULTING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-33",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsxs)(n.h4,{id:"classmethod-fully_qualified_namecls--str-4",children:[(0,r.jsx)(n.em,{children:"classmethod"})," fully_qualified_name(cls) \u2192 str"]}),"\n",(0,r.jsx)(n.p,{children:"Return the fully qualified name for the components class."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"greeks",children:"greeks"}),"\n",(0,r.jsx)(n.p,{children:"The read-only greeks calculator for the actor."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," GreeksCalculator"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"handle_barself-bar-bar--void",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given bar data."}),"\n",(0,r.jsxs)(n.p,{children:["If state is ",(0,r.jsx)(n.code,{children:"RUNNING"})," then passes to on_bar."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"bar"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(n.em,{children:"Bar"})}),") \u2013 The bar received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-34",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_barsself-list-bars--void",children:"handle_bars(self, list bars) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given historical bar data by handling each bar individually."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"bars"})," (",(0,r.jsx)(n.em,{children:"list"})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(n.em,{children:"Bar"})})," \u200b*]*\u200b) \u2013 The bars to handle."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-35",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"})," ",(0,r.jsx)(n.strong,{children:"RuntimeError"})," \u2013 If bar data has incorrectly sorted timestamps (not monotonically increasing)."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"handle_dataself-data-data--void",children:"handle_data(self, Data data) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given data."}),"\n",(0,r.jsxs)(n.p,{children:["If state is ",(0,r.jsx)(n.code,{children:"RUNNING"})," then passes to on_data."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"data"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,r.jsx)(n.em,{children:"Data"})}),") \u2013 The data received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-36",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_eventself-event-event--void",children:"handle_event(self, Event event) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given event."}),"\n",(0,r.jsxs)(n.p,{children:["If state is ",(0,r.jsx)(n.code,{children:"RUNNING"})," then passes to on_event."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"event"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Event",children:(0,r.jsx)(n.em,{children:"Event"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-37",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_funding_rateself-fundingrateupdate-funding_rate--void",children:"handle_funding_rate(self, FundingRateUpdate funding_rate) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given funding rate update."}),"\n",(0,r.jsxs)(n.p,{children:["If state is ",(0,r.jsx)(n.code,{children:"RUNNING"})," then passes to on_funding_rate."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"funding_rate"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.FundingRateUpdate",children:(0,r.jsx)(n.em,{children:"FundingRateUpdate"})}),") \u2013 The funding rate update received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-38",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_historical_dataself-data--void",children:"handle_historical_data(self, data) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given historical data."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"data"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,r.jsx)(n.em,{children:"Data"})}),") \u2013 The historical data received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-39",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_index_priceself-indexpriceupdate-index_price--void",children:"handle_index_price(self, IndexPriceUpdate index_price) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given index price update."}),"\n",(0,r.jsxs)(n.p,{children:["If state is ",(0,r.jsx)(n.code,{children:"RUNNING"})," then passes to on_index_price."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"index_price"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.IndexPriceUpdate",children:(0,r.jsx)(n.em,{children:"IndexPriceUpdate"})}),") \u2013 The index price update received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-40",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_instrumentself-instrument-instrument--void",children:"handle_instrument(self, Instrument instrument) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given instrument."}),"\n",(0,r.jsxs)(n.p,{children:["Passes to on_instrument if state is ",(0,r.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"instrument"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.Instrument",children:(0,r.jsx)(n.em,{children:"Instrument"})}),") \u2013 The instrument received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-41",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_instrument_closeself-instrumentclose-update--void",children:"handle_instrument_close(self, InstrumentClose update) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given instrument close update."}),"\n",(0,r.jsxs)(n.p,{children:["If state is ",(0,r.jsx)(n.code,{children:"RUNNING"})," then passes to on_instrument_close."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"update"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.InstrumentClose",children:(0,r.jsx)(n.em,{children:"InstrumentClose"})}),") \u2013 The update received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-42",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_instrument_statusself-instrumentstatus-data--void",children:"handle_instrument_status(self, InstrumentStatus data) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given instrument status update."}),"\n",(0,r.jsxs)(n.p,{children:["If state is ",(0,r.jsx)(n.code,{children:"RUNNING"})," then passes to on_instrument_status."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"data"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.InstrumentStatus",children:(0,r.jsx)(n.em,{children:"InstrumentStatus"})}),") \u2013 The status update received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-43",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_instrumentsself-list-instruments--void",children:"handle_instruments(self, list instruments) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given instruments data by handling each instrument individually."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"instruments"})," (",(0,r.jsx)(n.em,{children:"list"})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.Instrument",children:(0,r.jsx)(n.em,{children:"Instrument"})})," \u200b*]*\u200b) \u2013 The instruments received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-44",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_mark_priceself-markpriceupdate-mark_price--void",children:"handle_mark_price(self, MarkPriceUpdate mark_price) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given mark price update."}),"\n",(0,r.jsxs)(n.p,{children:["If state is ",(0,r.jsx)(n.code,{children:"RUNNING"})," then passes to on_mark_price."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"mark_price"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.MarkPriceUpdate",children:(0,r.jsx)(n.em,{children:"MarkPriceUpdate"})}),") \u2013 The mark price update received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-45",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_order_bookself-orderbook-order_book--void",children:"handle_order_book(self, OrderBook order_book) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given order book."}),"\n",(0,r.jsxs)(n.p,{children:["Passes to on_order_book if state is ",(0,r.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"order_book"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/book#nautilus_trader.model.book.OrderBook",children:(0,r.jsx)(n.em,{children:"OrderBook"})}),") \u2013 The order book received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-46",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_order_book_deltasself-deltas--void",children:"handle_order_book_deltas(self, deltas) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given order book deltas."}),"\n",(0,r.jsxs)(n.p,{children:["Passes to on_order_book_deltas if state is ",(0,r.jsx)(n.code,{children:"RUNNING"}),". The deltas will be nautilus_pyo3.OrderBookDeltas if the pyo3_conversion flag was set for the subscription."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"deltas"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.OrderBookDeltas",children:(0,r.jsx)(n.em,{children:"OrderBookDeltas"})})," ",(0,r.jsx)(n.em,{children:"or"})," \u200b",(0,r.jsx)(n.em,{children:"nautilus_pyo3.OrderBookDeltas"}),"\u200b) \u2013 The order book deltas received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-47",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_order_book_depthself-orderbookdepth10-depth--void",children:"handle_order_book_depth(self, OrderBookDepth10 depth) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given order book depth"}),"\n",(0,r.jsxs)(n.p,{children:["Passes to on_order_book_depth if state is ",(0,r.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"depth"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.OrderBookDepth10",children:(0,r.jsx)(n.em,{children:"OrderBookDepth10"})}),") \u2013 The order book depth received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-48",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_quote_tickself-quotetick-tick--void",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given quote tick."}),"\n",(0,r.jsxs)(n.p,{children:["If state is ",(0,r.jsx)(n.code,{children:"RUNNING"})," then passes to on_quote_tick."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"tick"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(n.em,{children:"QuoteTick"})}),") \u2013 The tick received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-49",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_quote_ticksself-list-ticks--void",children:"handle_quote_ticks(self, list ticks) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given historical quote tick data by handling each tick individually."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"ticks"})," (",(0,r.jsx)(n.em,{children:"list"})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(n.em,{children:"QuoteTick"})})," \u200b*]*\u200b) \u2013 The ticks received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-50",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_signalself-data-signal--void",children:"handle_signal(self, Data signal) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given signal."}),"\n",(0,r.jsxs)(n.p,{children:["If state is ",(0,r.jsx)(n.code,{children:"RUNNING"})," then passes to on_signal."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"signal"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,r.jsx)(n.em,{children:"Data"})}),") \u2013 The signal received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-51",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_trade_tickself-tradetick-tick--void",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given trade tick."}),"\n",(0,r.jsxs)(n.p,{children:["If state is ",(0,r.jsx)(n.code,{children:"RUNNING"})," then passes to on_trade_tick."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"tick"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(n.em,{children:"TradeTick"})}),") \u2013 The tick received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-52",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_trade_ticksself-list-ticks--void",children:"handle_trade_ticks(self, list ticks) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given historical trade tick data by handling each tick individually."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"ticks"})," (",(0,r.jsx)(n.em,{children:"list"})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(n.em,{children:"TradeTick"})})," \u200b*]*\u200b) \u2013 The ticks received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-53",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"has_active_tasksself--bool",children:"has_active_tasks(self) \u2192 bool"}),"\n",(0,r.jsx)(n.p,{children:"Return a value indicating whether there are any active tasks."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"has_any_tasksself--bool",children:"has_any_tasks(self) \u2192 bool"}),"\n",(0,r.jsx)(n.p,{children:"Return a value indicating whether there are any queued OR active tasks."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"has_pending_requestsself--bool",children:"has_pending_requests(self) \u2192 bool"}),"\n",(0,r.jsx)(n.p,{children:"Return whether the actor is pending processing for any requests."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," True if any requests are pending, else False."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"has_queued_tasksself--bool",children:"has_queued_tasks(self) \u2192 bool"}),"\n",(0,r.jsx)(n.p,{children:"Return a value indicating whether there are any queued tasks."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"id-5",children:"id"}),"\n",(0,r.jsx)(n.p,{children:"The components ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," ComponentId"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"indicators_initializedself--bool",children:"indicators_initialized(self) \u2192 bool"}),"\n",(0,r.jsx)(n.p,{children:"Return a value indicating whether all indicators are initialized."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," True if all initialized, else False"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_degraded-4",children:"is_degraded"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"DEGRADED"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_degraded"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_disposed-4",children:"is_disposed"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"DISPOSED"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_disposed"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_faulted-4",children:"is_faulted"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"FAULTED"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_faulted"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_initialized-4",children:"is_initialized"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the component has been initialized (component.state >= ",(0,r.jsx)(n.code,{children:"INITIALIZED"}),")."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_initialized"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_pending_requestself-uuid4-request_id--bool",children:"is_pending_request(self, UUID4 request_id) \u2192 bool"}),"\n",(0,r.jsx)(n.p,{children:"Return whether the request for the given identifier is pending processing."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"request_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,r.jsx)(n.em,{children:"UUID4"})}),") \u2013 The request ID to check."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," True if request is pending, else False."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_running-4",children:"is_running"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_running"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_stopped-4",children:"is_stopped"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"STOPPED"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_stopped"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"loadself-dict-state--void",children:"load(self, dict state) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Load the actor/strategy state from the give state dictionary."}),"\n",(0,r.jsx)(n.p,{children:"Calls on_load and passes the state."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"state"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"bytes"})," \u200b*]*\u200b) \u2013 The strategy state to load."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-54",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Exceptions raised will be caught, logged, and reraised."}),"\n",(0,r.jsx)(n.h4,{id:"log",children:"log"}),"\n",(0,r.jsx)(n.p,{children:"The actors logger."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," Logger"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"log_diagnosticsself-logger-logger--void",children:"log_diagnostics(self, Logger logger) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Log diagnostics out to the BacktestEngine logger."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"logger"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.Logger",children:(0,r.jsx)(n.em,{children:"Logger"})}),") \u2013 The logger to log to."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"msgbus-2",children:"msgbus"}),"\n",(0,r.jsx)(n.p,{children:"The message bus for the actor (if registered)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," MessageBus or ",(0,r.jsx)(n.code,{children:"None"})]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"on_barself-bar-bar--void",children:"on_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives a bar."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"bar"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(n.em,{children:"Bar"})}),") \u2013 The bar received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-55",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_dataself-data--void",children:"on_data(self, data) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives data."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"data"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,r.jsx)(n.em,{children:"Data"})}),") \u2013 The data received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-56",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_degradeself--void",children:"on_degrade(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed on degrade."}),"\n",(0,r.jsx)(n.h4,{id:"warning-57",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.p,{children:"Should be overridden in the actor implementation."}),"\n",(0,r.jsx)(n.h4,{id:"on_disposeself--void",children:"on_dispose(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed on dispose."}),"\n",(0,r.jsx)(n.p,{children:"Cleanup/release any resources used here."}),"\n",(0,r.jsx)(n.h4,{id:"warning-58",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_eventself-event-event--void",children:"on_event(self, Event event) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed running and receives an event."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"event"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Event",children:(0,r.jsx)(n.em,{children:"Event"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-59",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_faultself--void",children:"on_fault(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed on fault."}),"\n",(0,r.jsx)(n.p,{children:"Cleanup any resources used by the actor here."}),"\n",(0,r.jsx)(n.h4,{id:"warning-60",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.p,{children:"Should be overridden in the actor implementation."}),"\n",(0,r.jsx)(n.h4,{id:"on_funding_rateself-fundingrateupdate-funding_rate--void",children:"on_funding_rate(self, FundingRateUpdate funding_rate) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives a funding rate update."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"funding_rate"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.FundingRateUpdate",children:(0,r.jsx)(n.em,{children:"FundingRateUpdate"})}),") \u2013 The funding rate update received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-61",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_historical_dataself-data--void",children:"on_historical_data(self, data) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives historical data."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"data"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,r.jsx)(n.em,{children:"Data"})}),") \u2013 The historical data received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-62",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_index_priceself-indexpriceupdate-index_price--void",children:"on_index_price(self, IndexPriceUpdate index_price) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives an index price update."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"index_price"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.IndexPriceUpdate",children:(0,r.jsx)(n.em,{children:"IndexPriceUpdate"})}),") \u2013 The index price update received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-63",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_instrumentself-instrument-instrument--void",children:"on_instrument(self, Instrument instrument) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives an instrument."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"instrument"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.Instrument",children:(0,r.jsx)(n.em,{children:"Instrument"})}),") \u2013 The instrument received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-64",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_instrument_closeself-instrumentclose-update--void",children:"on_instrument_close(self, InstrumentClose update) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives an instrument close update."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"update"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.InstrumentClose",children:(0,r.jsx)(n.em,{children:"InstrumentClose"})}),") \u2013 The instrument close received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-65",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_instrument_statusself-instrumentstatus-data--void",children:"on_instrument_status(self, InstrumentStatus data) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives an instrument status update."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"data"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.InstrumentStatus",children:(0,r.jsx)(n.em,{children:"InstrumentStatus"})}),") \u2013 The instrument status update received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-66",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_loadself-dict-state--void",children:"on_load(self, dict state) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when the actor state is loaded."}),"\n",(0,r.jsx)(n.p,{children:"Saved state values will be contained in the give state dictionary."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"state"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"bytes"})," \u200b*]*\u200b) \u2013 The strategy state to load."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-67",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_mark_priceself-markpriceupdate-mark_price--void",children:"on_mark_price(self, MarkPriceUpdate mark_price) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives a mark price update."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"mark_price"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.MarkPriceUpdate",children:(0,r.jsx)(n.em,{children:"MarkPriceUpdate"})}),") \u2013 The mark price update received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-68",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_order_bookself-orderbook-order_book--void",children:"on_order_book(self, OrderBook order_book) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives an order book."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"order_book"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/book#nautilus_trader.model.book.OrderBook",children:(0,r.jsx)(n.em,{children:"OrderBook"})}),") \u2013 The order book received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-69",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_order_book_deltasself-deltas--void",children:"on_order_book_deltas(self, deltas) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives order book deltas."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"deltas"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.OrderBookDeltas",children:(0,r.jsx)(n.em,{children:"OrderBookDeltas"})})," ",(0,r.jsx)(n.em,{children:"or"})," \u200b",(0,r.jsx)(n.em,{children:"nautilus_pyo3.OrderBookDeltas"}),"\u200b) \u2013 The order book deltas received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-70",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_order_book_depthself-depth--void",children:"on_order_book_depth(self, depth) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives an order book depth."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"depth"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.OrderBookDepth10",children:(0,r.jsx)(n.em,{children:"OrderBookDepth10"})}),") \u2013 The order book depth received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-71",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_quote_tickself-quotetick-tick--void",children:"on_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives a quote tick."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"tick"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(n.em,{children:"QuoteTick"})}),") \u2013 The tick received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-72",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_resetself--void",children:"on_reset(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed on reset."}),"\n",(0,r.jsx)(n.h4,{id:"warning-73",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.p,{children:"Should be overridden in a user implementation."}),"\n",(0,r.jsx)(n.h4,{id:"on_resumeself--void",children:"on_resume(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed on resume."}),"\n",(0,r.jsx)(n.h4,{id:"warning-74",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_saveself--dict",children:"on_save(self) \u2192 dict"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when the actor state is saved."}),"\n",(0,r.jsx)(n.p,{children:"Create and return a state dictionary of values to be saved."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The strategy state to save."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," dict[str, bytes]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-75",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_signalself-signal--void",children:"on_signal(self, signal) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives signal data."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"signal"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,r.jsx)(n.em,{children:"Data"})}),") \u2013 The signal received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-76",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_startself--void",children:"on_start(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed on start."}),"\n",(0,r.jsx)(n.p,{children:"The intent is that this method is called once per trading \u2018run\u2019, when initially starting."}),"\n",(0,r.jsx)(n.p,{children:"It is recommended to subscribe/request for data here."}),"\n",(0,r.jsx)(n.h4,{id:"warning-77",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.p,{children:"Should be overridden in a user implementation."}),"\n",(0,r.jsx)(n.h4,{id:"on_stopself--void",children:"on_stop(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed on stop."}),"\n",(0,r.jsx)(n.p,{children:"The intent is that this method is called to pause, or when done for day."}),"\n",(0,r.jsx)(n.h4,{id:"warning-78",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.p,{children:"Should be overridden in a user implementation."}),"\n",(0,r.jsx)(n.h4,{id:"on_trade_tickself-tradetick-tick--void",children:"on_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives a trade tick."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"tick"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(n.em,{children:"TradeTick"})}),") \u2013 The tick received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-79",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"pending_requestsself--set",children:"pending_requests(self) \u2192 set"}),"\n",(0,r.jsx)(n.p,{children:"Return the request IDs which are currently pending processing."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," set[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"}),"]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"portfolio-1",children:"portfolio"}),"\n",(0,r.jsx)(n.p,{children:"The read-only portfolio for the actor."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," PortfolioFacade"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"pre_processself-data-data--void",children:"pre_process(self, Data data) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Abstract method pre_process (implement in subclass)."}),"\n",(0,r.jsx)(n.h4,{id:"processself-uint64_t-ts_now--void-1",children:"process(self, uint64_t ts_now) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Process the given tick through the module."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"ts_now"})," (\u200b",(0,r.jsx)(n.em,{children:"uint64_t"}),"\u200b) \u2013 The current UNIX timestamp (nanoseconds) in the simulated exchange."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"publish_dataself-datatype-data_type-data-data--void",children:"publish_data(self, DataType data_type, Data data) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Publish the given data to the message bus."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"data_type"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.DataType",children:(0,r.jsx)(n.em,{children:"DataType"})}),") \u2013 The data type being published."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"data"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,r.jsx)(n.em,{children:"Data"})}),") \u2013 The data to publish."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"publish_signalself-str-name-value-uint64_t-ts_event0--void",children:"publish_signal(self, str name, value, uint64_t ts_event=0) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Publish the given value as a signal to the message bus."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"name"})," (\u200b",(0,r.jsx)(n.em,{children:"str"}),"\u200b) \u2013 The name of the signal being published. The signal name will be converted to title case, with each word capitalized (e.g., \u2018example\u2019 becomes \u2018SignalExample\u2019)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"value"})," (\u200b",(0,r.jsx)(n.em,{children:"object"}),"\u200b) \u2013 The signal data to publish."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ts_event"})," (",(0,r.jsx)(n.em,{children:"uint64_t"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 UNIX timestamp (nanoseconds) when the signal event occurred. If ",(0,r.jsx)(n.code,{children:"None"})," then will timestamp current time."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"queue_for_executorself-func-callable-any-tuple-argsnone-dict-kwargsnone",children:"queue_for_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)"}),"\n",(0,r.jsx)(n.p,{children:"Queues the callable func to be executed as fn(*args, **kwargs) sequentially."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"func"})," (\u200b",(0,r.jsx)(n.em,{children:"Callable"}),"\u200b) \u2013 The function to be executed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"args"})," (\u200b",(0,r.jsx)(n.em,{children:"positional arguments"}),"\u200b) \u2013 The positional arguments for the call to func."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"kwargs"})," (\u200b",(0,r.jsx)(n.em,{children:"arbitrary keyword arguments"}),"\u200b) \u2013 The keyword arguments for the call to func."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"})," ",(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If func is not of type Callable."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"queued_task_idsself--list",children:"queued_task_ids(self) \u2192 list"}),"\n",(0,r.jsx)(n.p,{children:"Return the queued task identifiers."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.executor.TaskId",children:"TaskId"}),"]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"register_baseself-portfoliofacade-portfolio-messagebus-msgbus-cachefacade-cache-clock-clock--void",children:"register_base(self, PortfolioFacade portfolio, MessageBus msgbus, CacheFacade cache, Clock clock) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Register with a trader."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"portfolio"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/portfolio#nautilus_trader.portfolio.PortfolioFacade",children:(0,r.jsx)(n.em,{children:"PortfolioFacade"})}),") \u2013 The read-only portfolio for the actor."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"msgbus"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.MessageBus",children:(0,r.jsx)(n.em,{children:"MessageBus"})}),") \u2013 The message bus for the actor."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"cache"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/cache#nautilus_trader.cache.base.CacheFacade",children:(0,r.jsx)(n.em,{children:"CacheFacade"})}),") \u2013 The read-only cache for the actor."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"clock"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.Clock",children:(0,r.jsx)(n.em,{children:"Clock"})}),") \u2013 The clock for the actor."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-80",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"register_executorself-loop-asyncioabstracteventloop-executor-executor--void",children:"register_executor(self, loop: asyncio.AbstractEventLoop, executor: Executor) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Register the given Executor for the actor."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"loop"})," (\u200b",(0,r.jsx)(n.em,{children:"asyncio.AbstractEventLoop"}),"\u200b) \u2013 The event loop of the application."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"executor"})," (\u200b",(0,r.jsx)(n.em,{children:"concurrent.futures.Executor"}),"\u200b) \u2013 The executor to register."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"})," ",(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If executor is not of type concurrent.futures.Executor"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"register_indicator_for_barsself-bartype-bar_type-indicator-indicator--void",children:"register_indicator_for_bars(self, BarType bar_type, Indicator indicator) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Register the given indicator with the actor/strategy to receive bar data for the given bar type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"bar_type"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.BarType",children:(0,r.jsx)(n.em,{children:"BarType"})}),") \u2013 The bar type for bar updates."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"indicator"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(n.em,{children:"Indicator"})}),") \u2013 The indicator to register."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"register_indicator_for_quote_ticksself-instrumentid-instrument_id-indicator-indicator--void",children:"register_indicator_for_quote_ticks(self, InstrumentId instrument_id, Indicator indicator) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Register the given indicator with the actor/strategy to receive quote tick data for the given instrument ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID for tick updates."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"indicator"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(n.em,{children:"Indicator"})}),") \u2013 The indicator to register."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"register_indicator_for_trade_ticksself-instrumentid-instrument_id-indicator-indicator--void",children:"register_indicator_for_trade_ticks(self, InstrumentId instrument_id, Indicator indicator) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Register the given indicator with the actor/strategy to receive trade tick data for the given instrument ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID for tick updates."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"indicator"})," (\u200b",(0,r.jsx)(n.em,{children:"indicator"}),"\u200b) \u2013 The indicator to register."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"register_venueself-simulatedexchange-exchange--void",children:"register_venue(self, SimulatedExchange exchange) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Register the given simulated exchange with the module."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"exchange"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.engine.SimulatedExchange",children:(0,r.jsx)(n.em,{children:"SimulatedExchange"})}),") \u2013 The exchange to register."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"register_warning_eventself-type-event--void",children:"register_warning_event(self, type event) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Register the given event type for warning log levels."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"event"})," (\u200b",(0,r.jsx)(n.em,{children:"type"}),"\u200b) \u2013 The event class to register."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"registered_indicators",children:"registered_indicators"}),"\n",(0,r.jsx)(n.p,{children:"Return the registered indicators for the strategy."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:"Indicator"}),"]"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"request_aggregated_barsself-list-bar_types-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-bool-include_external_datafalse-bool-update_subscriptionsfalse-update_catalog-bool--false-dict-paramsnone--uuid4",children:["request_aggregated_bars(self, list bar_types, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, bool include_external_data=False, bool update_subscriptions=False, update_catalog: bool = False, dict params=None) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsx)(n.p,{children:"Request historical aggregated Bar data for multiple bar types. The first bar is used to determine which market data type will be queried. This can either be quotes, trades or bars. If bars are queried, the first bar type needs to have a composite bar that is external (i.e. not internal/aggregated). This external bar type will be queried."}),"\n",(0,r.jsxs)(n.p,{children:["If end is ",(0,r.jsx)(n.code,{children:"None"})," then will request up to the most recent data."]}),"\n",(0,r.jsx)(n.p,{children:"Once the response is received, the bar data is forwarded from the message bus to the on_historical_data handler. Any tick data used for aggregation is also forwarded to the on_historical_data handler."}),"\n",(0,r.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"bar_types"})," (",(0,r.jsx)(n.em,{children:"list"})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.BarType",children:(0,r.jsx)(n.em,{children:"BarType"})})," \u200b*]*\u200b) \u2013 The list of bar types for the request. Composite bars can also be used and need to figure in the list after a BarType on which it depends."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"start"})," (\u200b",(0,r.jsx)(n.em,{children:"datetime"}),"\u200b) \u2013 The start datetime (UTC) of request time range. Should be left-inclusive (start <= value), but inclusiveness is not currently guaranteed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"end"})," (",(0,r.jsx)(n.em,{children:"datetime"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) of request time range. If None then will be replaced with the current UTC time. Should be right-inclusive (value <= end), but inclusiveness is not currently guaranteed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"limit"})," (",(0,r.jsx)(n.em,{children:"int"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The limit on the amount of data received (quote ticks, trade ticks or bars)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"callback"})," (",(0,r.jsx)(n.em,{children:"Callable"})," ",(0,r.jsx)(n.em,{children:"["})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,r.jsx)(n.em,{children:"UUID4"})})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"None"})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"include_external_data"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If True, includes the queried external data in the response."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"update_subscriptions"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If True, updates the aggregators of any existing or future subscription with the queried external data."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"update_catalog"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If start is None."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > current timestamp (now)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If end is > current timestamp (now)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > end."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If bar_types is empty."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If bar_types is empty or contains elements not of type BarType."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"request_barsself-bartype-bar_type-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4",children:["request_bars(self, BarType bar_type, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsx)(n.p,{children:"Request historical Bar data."}),"\n",(0,r.jsxs)(n.p,{children:["If end is ",(0,r.jsx)(n.code,{children:"None"})," then will request up to the most recent data."]}),"\n",(0,r.jsx)(n.p,{children:"Once the response is received, the bar data is forwarded from the message bus to the on_historical_data handler."}),"\n",(0,r.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"bar_type"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.BarType",children:(0,r.jsx)(n.em,{children:"BarType"})}),") \u2013 The bar type for the request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"start"})," (\u200b",(0,r.jsx)(n.em,{children:"datetime"}),"\u200b) \u2013 The start datetime (UTC) of request time range. Should be left-inclusive (start <= value), but inclusiveness is not currently guaranteed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"end"})," (",(0,r.jsx)(n.em,{children:"datetime"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) of request time range. If None then will be replaced with the current UTC time. Should be right-inclusive (value <= end), but inclusiveness is not currently guaranteed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"limit"})," (",(0,r.jsx)(n.em,{children:"int"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The limit on the amount of bars received."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"callback"})," (",(0,r.jsx)(n.em,{children:"Callable"})," ",(0,r.jsx)(n.em,{children:"["})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,r.jsx)(n.em,{children:"UUID4"})})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"None"})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"update_catalog"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If start is None."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > current timestamp (now)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If end is > current timestamp (now)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > end."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"request_dataself-datatype-data_type-clientid-client_id-instrumentid-instrument_idnone-datetime-startnone-datetime-endnone-int-limit0-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4",children:["request_data(self, DataType data_type, ClientId client_id, InstrumentId instrument_id=None, datetime start=None, datetime end=None, int limit=0, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsx)(n.p,{children:"Request custom data for the given data type from the given data client."}),"\n",(0,r.jsx)(n.p,{children:"Once the response is received, the data is forwarded from the message bus to the on_historical_data handler."}),"\n",(0,r.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"data_type"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.DataType",children:(0,r.jsx)(n.em,{children:"DataType"})}),") \u2013 The data type for the request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})}),") \u2013 The data client ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"start"})," (\u200b",(0,r.jsx)(n.em,{children:"datetime"}),"\u200b) \u2013 The start datetime (UTC) of request time range. Cannot be None. Should be left-inclusive (start <= value), but inclusiveness is not currently guaranteed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"end"})," (",(0,r.jsx)(n.em,{children:"datetime"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) of request time range. If None then will be replaced with the current UTC time. Should be right-inclusive (value <= end), but inclusiveness is not currently guaranteed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"limit"})," (",(0,r.jsx)(n.em,{children:"int"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The limit on the amount of data points received."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"callback"})," (",(0,r.jsx)(n.em,{children:"Callable"})," ",(0,r.jsx)(n.em,{children:"["})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,r.jsx)(n.em,{children:"UUID4"})})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"None"})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"update_catalog"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If start is None."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > current timestamp (now)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If end is > current timestamp (now)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > end."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"request_instrumentself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4",children:["request_instrument(self, InstrumentId instrument_id, datetime start=None, datetime end=None, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsx)(n.p,{children:"Request Instrument data for the given instrument ID."}),"\n",(0,r.jsxs)(n.p,{children:["If end is ",(0,r.jsx)(n.code,{children:"None"})," then will request up to the most recent data."]}),"\n",(0,r.jsx)(n.p,{children:"Once the response is received, the instrument data is forwarded from the message bus to the on_instrument handler."}),"\n",(0,r.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID for the request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"start"})," (",(0,r.jsx)(n.em,{children:"datetime"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The start datetime (UTC) of request time range. The inclusiveness depends on individual data client implementation."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"end"})," (",(0,r.jsx)(n.em,{children:"datetime"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) of request time range. The inclusiveness depends on individual data client implementation."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"callback"})," (",(0,r.jsx)(n.em,{children:"Callable"})," ",(0,r.jsx)(n.em,{children:"["})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,r.jsx)(n.em,{children:"UUID4"})})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"None"})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"update_catalog"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is not None and > current timestamp (now)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If end is not None and > current timestamp (now)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If start and end are not None and start is >= end."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"request_instrumentsself-venue-venue-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4",children:["request_instruments(self, Venue venue, datetime start=None, datetime end=None, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsx)(n.p,{children:"Request all Instrument data for the given venue."}),"\n",(0,r.jsxs)(n.p,{children:["If end is ",(0,r.jsx)(n.code,{children:"None"})," then will request up to the most recent data."]}),"\n",(0,r.jsx)(n.p,{children:"Once the response is received, the instrument data is forwarded from the message bus to the on_instrument handler."}),"\n",(0,r.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"venue"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.Venue",children:(0,r.jsx)(n.em,{children:"Venue"})}),") \u2013 The venue for the request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"start"})," (",(0,r.jsx)(n.em,{children:"datetime"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The start datetime (UTC) of request time range. The inclusiveness depends on individual data client implementation."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"end"})," (",(0,r.jsx)(n.em,{children:"datetime"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) of request time range. The inclusiveness depends on individual data client implementation."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"callback"})," (",(0,r.jsx)(n.em,{children:"Callable"})," ",(0,r.jsx)(n.em,{children:"["})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,r.jsx)(n.em,{children:"UUID4"})})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"None"})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"update_catalog"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"only_last (default True) retains only the latest instrument record per instrument_id, based on the most recent ts_init."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is not None and > current timestamp (now)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If end is not None and > current timestamp (now)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If start and end are not None and start is >= end."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"request_order_book_snapshotself-instrumentid-instrument_id-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-dict-paramsnone--uuid4",children:["request_order_book_snapshot(self, InstrumentId instrument_id, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, dict params=None) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsx)(n.p,{children:"Request an order book snapshot."}),"\n",(0,r.jsx)(n.p,{children:"Once the response is received, the order book data is forwarded from the message bus to the on_historical_data handler."}),"\n",(0,r.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID for the order book snapshot request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"limit"})," (",(0,r.jsx)(n.em,{children:"int"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The limit on the depth of the order book snapshot."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If None, it will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"callback"})," (",(0,r.jsx)(n.em,{children:"Callable"})," ",(0,r.jsx)(n.em,{children:"["})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,r.jsx)(n.em,{children:"UUID4"})})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"None"})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If the instrument_id is None."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"request_quote_ticksself-instrumentid-instrument_id-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4",children:["request_quote_ticks(self, InstrumentId instrument_id, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsx)(n.p,{children:"Request historical QuoteTick data."}),"\n",(0,r.jsxs)(n.p,{children:["If end is ",(0,r.jsx)(n.code,{children:"None"})," then will request up to the most recent data."]}),"\n",(0,r.jsx)(n.p,{children:"Once the response is received, the quote tick data is forwarded from the message bus to the on_historical_data handler."}),"\n",(0,r.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The tick instrument ID for the request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"start"})," (\u200b",(0,r.jsx)(n.em,{children:"datetime"}),"\u200b) \u2013 The start datetime (UTC) of request time range. Should be left-inclusive (start <= value), but inclusiveness is not currently guaranteed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"end"})," (",(0,r.jsx)(n.em,{children:"datetime"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) of request time range. If None then will be replaced with the current UTC time. Should be right-inclusive (value <= end), but inclusiveness is not currently guaranteed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"limit"})," (",(0,r.jsx)(n.em,{children:"int"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The limit on the amount of quote ticks received."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"callback"})," (",(0,r.jsx)(n.em,{children:"Callable"})," ",(0,r.jsx)(n.em,{children:"["})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,r.jsx)(n.em,{children:"UUID4"})})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"None"})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"update_catalog"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If start is None."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > current timestamp (now)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If end is > current timestamp (now)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > end."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"request_trade_ticksself-instrumentid-instrument_id-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4",children:["request_trade_ticks(self, InstrumentId instrument_id, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsx)(n.p,{children:"Request historical TradeTick data."}),"\n",(0,r.jsxs)(n.p,{children:["If end is ",(0,r.jsx)(n.code,{children:"None"})," then will request up to the most recent data."]}),"\n",(0,r.jsx)(n.p,{children:"Once the response is received, the trade tick data is forwarded from the message bus to the on_historical_data handler."}),"\n",(0,r.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The tick instrument ID for the request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"start"})," (\u200b",(0,r.jsx)(n.em,{children:"datetime"}),"\u200b) \u2013 The start datetime (UTC) of request time range. Should be left-inclusive (start <= value), but inclusiveness is not currently guaranteed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"end"})," (",(0,r.jsx)(n.em,{children:"datetime"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) of request time range. If None then will be replaced with the current UTC time. Should be right-inclusive (value <= end), but inclusiveness is not currently guaranteed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"limit"})," (",(0,r.jsx)(n.em,{children:"int"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The limit on the amount of trade ticks received."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"callback"})," (",(0,r.jsx)(n.em,{children:"Callable"})," ",(0,r.jsx)(n.em,{children:"["})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,r.jsx)(n.em,{children:"UUID4"})})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"None"})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"update_catalog"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If start is None."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > current timestamp (now)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If end is > current timestamp (now)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > end."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"resetself--void-6",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(n.h4,{id:"resumeself--void-4",children:"resume(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Resume the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_resume() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"RESUMING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-81",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"run_in_executorself-func-callable-any-tuple-argsnone-dict-kwargsnone",children:"run_in_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)"}),"\n",(0,r.jsx)(n.p,{children:"Schedules the callable func to be executed as fn(*args, **kwargs)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"func"})," (\u200b",(0,r.jsx)(n.em,{children:"Callable"}),"\u200b) \u2013 The function to be executed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"args"})," (\u200b",(0,r.jsx)(n.em,{children:"positional arguments"}),"\u200b) \u2013 The positional arguments for the call to func."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"kwargs"})," (\u200b",(0,r.jsx)(n.em,{children:"arbitrary keyword arguments"}),"\u200b) \u2013 The keyword arguments for the call to func."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The unique task identifier for the execution. This also corresponds to any future objects memory address."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.executor.TaskId",children:"TaskId"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"})," ",(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If func is not of type Callable."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"saveself--dict",children:"save(self) \u2192 dict"}),"\n",(0,r.jsx)(n.p,{children:"Return the actor/strategy state dictionary to be saved."}),"\n",(0,r.jsx)(n.p,{children:"Calls on_save."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The strategy state to save."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," dict[str, bytes]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-82",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Exceptions raised will be caught, logged, and reraised."}),"\n",(0,r.jsx)(n.h4,{id:"shutdown_systemself-str-reasonnone--void-4",children:"shutdown_system(self, str reason=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Initiate a system-wide shutdown by generating and publishing a ShutdownSystem command."}),"\n",(0,r.jsx)(n.p,{children:"The command is handled by the system\u2019s NautilusKernel, which will invoke either stop (synchronously) or stop_async (asynchronously) depending on the execution context and the presence of an active event loop."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"reason"})," (",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The reason for issuing the shutdown command."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"startself--void-4",children:"start(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Start the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_start() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"STARTING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-83",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"state-4",children:"state"}),"\n",(0,r.jsx)(n.p,{children:"ComponentState"}),"\n",(0,r.jsx)(n.p,{children:"Return the components current state."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ComponentState"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.state"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"stopself--void-4",children:"stop(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Stop the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_stop() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"STOPPING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-84",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_barsself-bartype-bar_type-clientid-client_idnone-bool-await_partialfalse-bool-update_catalogfalse-dict-paramsnone--void",children:"subscribe_bars(self, BarType bar_type, ClientId client_id=None, bool await_partial=False, bool update_catalog=False, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to streaming Bar data for the given bar type."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching bar data published on the message bus is forwarded to the on_bar handler."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"bar_type"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.BarType",children:(0,r.jsx)(n.em,{children:"BarType"})}),") \u2013 The bar type to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"await_partial"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If the bar aggregator should await the arrival of a historical partial bar prior to actively aggregating new bars."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"update_catalog"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data. Only useful when downloading data during a backtest."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_dataself-datatype-data_type-clientid-client_idnone-instrumentid-instrument_idnone-bool-update_catalogfalse-dict-paramsnone--void",children:"subscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, bool update_catalog=False, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to data of the given data type."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching data published on the message bus is forwarded to the on_data handler."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"data_type"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.DataType",children:(0,r.jsx)(n.em,{children:"DataType"})}),") \u2013 The data type to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The data client ID. If supplied then a Subscribe command will be sent to the corresponding data client."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"update_catalog"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data. Only useful when downloading data during a backtest."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_funding_ratesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"subscribe_funding_rates(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to streaming FundingRateUpdate data for the given instrument ID."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching funding rate updates published on the message bus are forwarded to the on_funding_rate handler."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_index_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"subscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to streaming IndexPriceUpdate data for the given instrument ID."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching index price updates published on the message bus are forwarded to the on_index_price handler."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_instrumentself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"subscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to update Instrument data for the given instrument ID."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching instrument data published on the message bus is forwarded to the on_instrument handler."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID for the subscription."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_instrument_closeself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"subscribe_instrument_close(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to close updates for the given instrument ID."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching instrument close data published on the message bus is forwarded to the on_instrument_close handler."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to subscribe to status updates for."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_instrument_statusself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"subscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to status updates for the given instrument ID."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching instrument status data published on the message bus is forwarded to the on_instrument_status handler."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to subscribe to status updates for."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_instrumentsself-venue-venue-clientid-client_idnone-dict-paramsnone--void",children:"subscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to update Instrument data for the given venue."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching instrument data published on the message bus is forwarded the on_instrument handler."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"venue"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.Venue",children:(0,r.jsx)(n.em,{children:"Venue"})}),") \u2013 The venue for the subscription."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_mark_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"subscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to streaming MarkPriceUpdate data for the given instrument ID."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching mark price updates published on the message bus are forwarded to the on_mark_price handler."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_order_book_at_intervalself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-int-interval_ms1000-clientid-client_idnone-dict-paramsnone--void",children:"subscribe_order_book_at_interval(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, int interval_ms=1000, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to an OrderBook at a specified interval for the given instrument ID."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching order book updates published on the message bus are forwarded to the on_order_book handler."}),"\n",(0,r.jsx)(n.p,{children:"The DataEngine will only maintain one order book for each instrument. Because of this - the level, depth and params for the stream will be set as per the last subscription request (this will also affect all subscribers)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The order book instrument ID to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"book_type"})," (BookType ","L3_MBO",") \u2013 The order book type."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"depth"})," (",(0,r.jsx)(n.em,{children:"int"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The maximum depth for the order book. A depth of 0 is maximum depth."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"interval_ms"})," (",(0,r.jsx)(n.em,{children:"int"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default 1000"}),"\u200b) \u2013 The order book snapshot interval (milliseconds)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If depth is negative (< 0)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If interval_ms is not positive (> 0)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-85",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Consider subscribing to order book deltas if you need intervals less than 100 milliseconds."}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_order_book_deltasself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-clientid-client_idnone-bool-managedtrue-bool-pyo3_conversionfalse-dict-paramsnone--void",children:"subscribe_order_book_deltas(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to the order book data stream, being a snapshot then deltas for the given instrument ID."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching order book data published on the message bus is forwarded to the on_order_book_deltas handler."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The order book instrument ID to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"book_type"})," (BookType ","L3_MBO",") \u2013 The order book type."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"depth"})," (",(0,r.jsx)(n.em,{children:"int"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The maximum depth for the order book. A depth of 0 is maximum depth."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"managed"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If an order book should be managed by the data engine based on the subscribed feed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"pyo3_conversion"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If received deltas should be converted to nautilus_pyo3.OrderBookDeltas prior to being passed to the on_order_book_deltas handler."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_order_book_depthself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-clientid-client_idnone-bool-managedtrue-bool-pyo3_conversionfalse-dict-paramsnone--void",children:"subscribe_order_book_depth(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to the order book depth stream for the given instrument ID."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching order book data published on the message bus is forwarded to the on_order_book_depth handler."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The order book instrument ID to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"book_type"})," (BookType ","L3_MBO",") \u2013 The order book type."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"managed"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If an order book should be managed by the data engine based on the subscribed feed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"pyo3_conversion"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If received deltas should be converted to nautilus_pyo3.OrderBookDepth prior to being passed to the on_order_book_depth handler."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_quote_ticksself-instrumentid-instrument_id-clientid-client_idnone-bool-update_catalogfalse-dict-paramsnone--void",children:"subscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to streaming QuoteTick data for the given instrument ID."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching quote tick data published on the message bus is forwarded to the on_quote_tick handler."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The tick instrument to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"update_catalog"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data. Only useful when downloading data during a backtest."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_signalself-str-name--void",children:"subscribe_signal(self, str name='') \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to a specific signal by name, or to all signals if no name is provided."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching signal data published on the message bus is forwarded to the on_signal handler."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"name"})," (",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The name of the signal to subscribe to. If not provided or an empty string is passed, the subscription will include all signals. The signal name is case-insensitive and will be capitalized (e.g., \u2018example\u2019 becomes \u2018SignalExample*\u2019)."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_trade_ticksself-instrumentid-instrument_id-clientid-client_idnone-bool-update_catalogfalse-dict-paramsnone--void",children:"subscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to streaming TradeTick data for the given instrument ID."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching trade tick data published on the message bus is forwarded to the on_trade_tick handler."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The tick instrument to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"update_catalog"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data. Only useful when downloading data during a backtest."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"to_importable_configself--importableactorconfig",children:["to_importable_config(self) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.common.config.ImportableActorConfig",children:"ImportableActorConfig"})]}),"\n",(0,r.jsx)(n.p,{children:"Returns an importable configuration for this actor."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.common.config.ImportableActorConfig",children:"ImportableActorConfig"})]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"trader_id-5",children:"trader_id"}),"\n",(0,r.jsx)(n.p,{children:"The trader ID associated with the component."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," TraderId"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"type-4",children:"type"}),"\n",(0,r.jsx)(n.p,{children:"The components type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," type"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_barsself-bartype-bar_type-clientid-client_idnone-dict-paramsnone--void",children:"unsubscribe_bars(self, BarType bar_type, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Unsubscribe from streaming Bar data for the given bar type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"bar_type"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.BarType",children:(0,r.jsx)(n.em,{children:"BarType"})}),") \u2013 The bar type to unsubscribe from."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_dataself-datatype-data_type-clientid-client_idnone-instrumentid-instrument_idnone-dict-paramsnone--void",children:"unsubscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Unsubscribe from data of the given data type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"data_type"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.DataType",children:(0,r.jsx)(n.em,{children:"DataType"})}),") \u2013 The data type to unsubscribe from."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The data client ID. If supplied then an Unsubscribe command will be sent to the data client."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_funding_ratesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"unsubscribe_funding_rates(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Unsubscribe from streaming FundingRateUpdate data for the given instrument ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to unsubscribe from."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_index_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"unsubscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Unsubscribe from streaming IndexPriceUpdate data for the given instrument ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_instrumentself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"unsubscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Unsubscribe from update Instrument data for the given instrument ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to unsubscribe from."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_instrument_statusself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"unsubscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Unsubscribe to status updates of the given venue."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to unsubscribe to status updates for."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_instrumentsself-venue-venue-clientid-client_idnone-dict-paramsnone--void",children:"unsubscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Unsubscribe from update Instrument data for the given venue."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"venue"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.Venue",children:(0,r.jsx)(n.em,{children:"Venue"})}),") \u2013 The venue for the subscription."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_mark_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"unsubscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Unsubscribe from streaming MarkPriceUpdate data for the given instrument ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_order_book_at_intervalself-instrumentid-instrument_id-int-interval_ms1000-clientid-client_idnone-dict-paramsnone--void",children:"unsubscribe_order_book_at_interval(self, InstrumentId instrument_id, int interval_ms=1000, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Unsubscribe from an OrderBook at a specified interval for the given instrument ID."}),"\n",(0,r.jsx)(n.p,{children:"The interval must match the previously subscribed interval."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The order book instrument to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"interval_ms"})," (",(0,r.jsx)(n.em,{children:"int"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default 1000"}),"\u200b) \u2013 The order book snapshot interval (milliseconds)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_order_book_deltasself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"unsubscribe_order_book_deltas(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Unsubscribe the order book deltas stream for the given instrument ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The order book instrument to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_order_book_depthself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"unsubscribe_order_book_depth(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Unsubscribe the order book depth stream for the given instrument ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The order book instrument to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_quote_ticksself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"unsubscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Unsubscribe from streaming QuoteTick data for the given instrument ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The tick instrument to unsubscribe from."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_trade_ticksself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"unsubscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Unsubscribe from streaming TradeTick data for the given instrument ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The tick instrument ID to unsubscribe from."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"update_syntheticself-syntheticinstrument-synthetic--void",children:"update_synthetic(self, SyntheticInstrument synthetic) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Update the synthetic instrument in the cache."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"synthetic"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.SyntheticInstrument",children:(0,r.jsx)(n.em,{children:"SyntheticInstrument"})}),") \u2013 The synthetic instrument to update in the cache."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"})," ",(0,r.jsx)(n.strong,{children:"KeyError"})," \u2013 If synthetic does not already exist in the cache."]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"class-simulationmodule",children:[(0,r.jsx)(n.em,{children:"class"})," SimulationModule"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:(0,r.jsx)(n.code,{children:"Actor"})})]}),"\n",(0,r.jsx)(n.p,{children:"SimulationModule(config: SimulationModuleConfig)"}),"\n",(0,r.jsx)(n.p,{children:"The base class for all simulation modules."}),"\n",(0,r.jsx)(n.h4,{id:"warning-86",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"This class should not be used directly, but through a concrete subclass."}),"\n",(0,r.jsx)(n.h4,{id:"active_task_idsself--list-1",children:"active_task_ids(self) \u2192 list"}),"\n",(0,r.jsx)(n.p,{children:"Return the active task identifiers."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.executor.TaskId",children:"TaskId"}),"]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"add_syntheticself-syntheticinstrument-synthetic--void-1",children:"add_synthetic(self, SyntheticInstrument synthetic) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Add the created synthetic instrument to the cache."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"synthetic"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.SyntheticInstrument",children:(0,r.jsx)(n.em,{children:"SyntheticInstrument"})}),") \u2013 The synthetic instrument to add to the cache."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"})," ",(0,r.jsx)(n.strong,{children:"KeyError"})," \u2013 If synthetic is already in the cache."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"cache-4",children:"cache"}),"\n",(0,r.jsx)(n.p,{children:"The read-only cache for the actor."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," CacheFacade"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"cancel_all_tasksself--void-1",children:"cancel_all_tasks(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Cancel all queued and active tasks."}),"\n",(0,r.jsxs)(n.h4,{id:"cancel_taskself-task_id-taskid--void-1",children:["cancel_task(self, task_id: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.executor.TaskId",children:"TaskId"}),") \u2192 void"]}),"\n",(0,r.jsx)(n.p,{children:"Cancel the task with the given task_id (if queued or active)."}),"\n",(0,r.jsx)(n.p,{children:"If the task is not found then a warning is logged."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"task_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.executor.TaskId",children:(0,r.jsx)(n.em,{children:"TaskId"})}),") \u2013 The task identifier."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"clock-1",children:"clock"}),"\n",(0,r.jsx)(n.p,{children:"The actors clock."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," Clock"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"config-1",children:"config"}),"\n",(0,r.jsx)(n.p,{children:"The actors configuration."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," NautilusConfig"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"degradeself--void-5",children:"degrade(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Degrade the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_degrade() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"DEGRADING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-87",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"deregister_warning_eventself-type-event--void-1",children:"deregister_warning_event(self, type event) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Deregister the given event type from warning log levels."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"event"})," (\u200b",(0,r.jsx)(n.em,{children:"type"}),"\u200b) \u2013 The event class to deregister."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"disposeself--void-5",children:"dispose(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Dispose of the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_dispose() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"DISPOSING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-88",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"exchange-1",children:"exchange"}),"\n",(0,r.jsx)(n.h4,{id:"faultself--void-5",children:"fault(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Fault the component."}),"\n",(0,r.jsx)(n.p,{children:"Calling this method multiple times has the same effect as calling it once (it is idempotent). Once called, it cannot be reversed, and no other methods should be called on this instance."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_fault() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"FAULTING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-89",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsxs)(n.h4,{id:"classmethod-fully_qualified_namecls--str-5",children:[(0,r.jsx)(n.em,{children:"classmethod"})," fully_qualified_name(cls) \u2192 str"]}),"\n",(0,r.jsx)(n.p,{children:"Return the fully qualified name for the components class."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"greeks-1",children:"greeks"}),"\n",(0,r.jsx)(n.p,{children:"The read-only greeks calculator for the actor."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," GreeksCalculator"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"handle_barself-bar-bar--void-1",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given bar data."}),"\n",(0,r.jsxs)(n.p,{children:["If state is ",(0,r.jsx)(n.code,{children:"RUNNING"})," then passes to on_bar."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"bar"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(n.em,{children:"Bar"})}),") \u2013 The bar received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-90",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_barsself-list-bars--void-1",children:"handle_bars(self, list bars) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given historical bar data by handling each bar individually."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"bars"})," (",(0,r.jsx)(n.em,{children:"list"})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(n.em,{children:"Bar"})})," \u200b*]*\u200b) \u2013 The bars to handle."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-91",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"})," ",(0,r.jsx)(n.strong,{children:"RuntimeError"})," \u2013 If bar data has incorrectly sorted timestamps (not monotonically increasing)."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"handle_dataself-data-data--void-1",children:"handle_data(self, Data data) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given data."}),"\n",(0,r.jsxs)(n.p,{children:["If state is ",(0,r.jsx)(n.code,{children:"RUNNING"})," then passes to on_data."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"data"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,r.jsx)(n.em,{children:"Data"})}),") \u2013 The data received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-92",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_eventself-event-event--void-1",children:"handle_event(self, Event event) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given event."}),"\n",(0,r.jsxs)(n.p,{children:["If state is ",(0,r.jsx)(n.code,{children:"RUNNING"})," then passes to on_event."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"event"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Event",children:(0,r.jsx)(n.em,{children:"Event"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-93",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_funding_rateself-fundingrateupdate-funding_rate--void-1",children:"handle_funding_rate(self, FundingRateUpdate funding_rate) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given funding rate update."}),"\n",(0,r.jsxs)(n.p,{children:["If state is ",(0,r.jsx)(n.code,{children:"RUNNING"})," then passes to on_funding_rate."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"funding_rate"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.FundingRateUpdate",children:(0,r.jsx)(n.em,{children:"FundingRateUpdate"})}),") \u2013 The funding rate update received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-94",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_historical_dataself-data--void-1",children:"handle_historical_data(self, data) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given historical data."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"data"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,r.jsx)(n.em,{children:"Data"})}),") \u2013 The historical data received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-95",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_index_priceself-indexpriceupdate-index_price--void-1",children:"handle_index_price(self, IndexPriceUpdate index_price) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given index price update."}),"\n",(0,r.jsxs)(n.p,{children:["If state is ",(0,r.jsx)(n.code,{children:"RUNNING"})," then passes to on_index_price."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"index_price"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.IndexPriceUpdate",children:(0,r.jsx)(n.em,{children:"IndexPriceUpdate"})}),") \u2013 The index price update received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-96",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_instrumentself-instrument-instrument--void-1",children:"handle_instrument(self, Instrument instrument) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given instrument."}),"\n",(0,r.jsxs)(n.p,{children:["Passes to on_instrument if state is ",(0,r.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"instrument"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.Instrument",children:(0,r.jsx)(n.em,{children:"Instrument"})}),") \u2013 The instrument received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-97",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_instrument_closeself-instrumentclose-update--void-1",children:"handle_instrument_close(self, InstrumentClose update) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given instrument close update."}),"\n",(0,r.jsxs)(n.p,{children:["If state is ",(0,r.jsx)(n.code,{children:"RUNNING"})," then passes to on_instrument_close."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"update"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.InstrumentClose",children:(0,r.jsx)(n.em,{children:"InstrumentClose"})}),") \u2013 The update received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-98",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_instrument_statusself-instrumentstatus-data--void-1",children:"handle_instrument_status(self, InstrumentStatus data) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given instrument status update."}),"\n",(0,r.jsxs)(n.p,{children:["If state is ",(0,r.jsx)(n.code,{children:"RUNNING"})," then passes to on_instrument_status."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"data"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.InstrumentStatus",children:(0,r.jsx)(n.em,{children:"InstrumentStatus"})}),") \u2013 The status update received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-99",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_instrumentsself-list-instruments--void-1",children:"handle_instruments(self, list instruments) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given instruments data by handling each instrument individually."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"instruments"})," (",(0,r.jsx)(n.em,{children:"list"})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.Instrument",children:(0,r.jsx)(n.em,{children:"Instrument"})})," \u200b*]*\u200b) \u2013 The instruments received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-100",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_mark_priceself-markpriceupdate-mark_price--void-1",children:"handle_mark_price(self, MarkPriceUpdate mark_price) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given mark price update."}),"\n",(0,r.jsxs)(n.p,{children:["If state is ",(0,r.jsx)(n.code,{children:"RUNNING"})," then passes to on_mark_price."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"mark_price"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.MarkPriceUpdate",children:(0,r.jsx)(n.em,{children:"MarkPriceUpdate"})}),") \u2013 The mark price update received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-101",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_order_bookself-orderbook-order_book--void-1",children:"handle_order_book(self, OrderBook order_book) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given order book."}),"\n",(0,r.jsxs)(n.p,{children:["Passes to on_order_book if state is ",(0,r.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"order_book"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/book#nautilus_trader.model.book.OrderBook",children:(0,r.jsx)(n.em,{children:"OrderBook"})}),") \u2013 The order book received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-102",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_order_book_deltasself-deltas--void-1",children:"handle_order_book_deltas(self, deltas) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given order book deltas."}),"\n",(0,r.jsxs)(n.p,{children:["Passes to on_order_book_deltas if state is ",(0,r.jsx)(n.code,{children:"RUNNING"}),". The deltas will be nautilus_pyo3.OrderBookDeltas if the pyo3_conversion flag was set for the subscription."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"deltas"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.OrderBookDeltas",children:(0,r.jsx)(n.em,{children:"OrderBookDeltas"})})," ",(0,r.jsx)(n.em,{children:"or"})," \u200b",(0,r.jsx)(n.em,{children:"nautilus_pyo3.OrderBookDeltas"}),"\u200b) \u2013 The order book deltas received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-103",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_order_book_depthself-orderbookdepth10-depth--void-1",children:"handle_order_book_depth(self, OrderBookDepth10 depth) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given order book depth"}),"\n",(0,r.jsxs)(n.p,{children:["Passes to on_order_book_depth if state is ",(0,r.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"depth"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.OrderBookDepth10",children:(0,r.jsx)(n.em,{children:"OrderBookDepth10"})}),") \u2013 The order book depth received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-104",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_quote_tickself-quotetick-tick--void-1",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given quote tick."}),"\n",(0,r.jsxs)(n.p,{children:["If state is ",(0,r.jsx)(n.code,{children:"RUNNING"})," then passes to on_quote_tick."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"tick"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(n.em,{children:"QuoteTick"})}),") \u2013 The tick received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-105",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_quote_ticksself-list-ticks--void-1",children:"handle_quote_ticks(self, list ticks) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given historical quote tick data by handling each tick individually."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"ticks"})," (",(0,r.jsx)(n.em,{children:"list"})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(n.em,{children:"QuoteTick"})})," \u200b*]*\u200b) \u2013 The ticks received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-106",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_signalself-data-signal--void-1",children:"handle_signal(self, Data signal) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given signal."}),"\n",(0,r.jsxs)(n.p,{children:["If state is ",(0,r.jsx)(n.code,{children:"RUNNING"})," then passes to on_signal."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"signal"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,r.jsx)(n.em,{children:"Data"})}),") \u2013 The signal received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-107",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_trade_tickself-tradetick-tick--void-1",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given trade tick."}),"\n",(0,r.jsxs)(n.p,{children:["If state is ",(0,r.jsx)(n.code,{children:"RUNNING"})," then passes to on_trade_tick."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"tick"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(n.em,{children:"TradeTick"})}),") \u2013 The tick received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-108",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"handle_trade_ticksself-list-ticks--void-1",children:"handle_trade_ticks(self, list ticks) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Handle the given historical trade tick data by handling each tick individually."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"ticks"})," (",(0,r.jsx)(n.em,{children:"list"})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(n.em,{children:"TradeTick"})})," \u200b*]*\u200b) \u2013 The ticks received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-109",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"has_active_tasksself--bool-1",children:"has_active_tasks(self) \u2192 bool"}),"\n",(0,r.jsx)(n.p,{children:"Return a value indicating whether there are any active tasks."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"has_any_tasksself--bool-1",children:"has_any_tasks(self) \u2192 bool"}),"\n",(0,r.jsx)(n.p,{children:"Return a value indicating whether there are any queued OR active tasks."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"has_pending_requestsself--bool-1",children:"has_pending_requests(self) \u2192 bool"}),"\n",(0,r.jsx)(n.p,{children:"Return whether the actor is pending processing for any requests."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," True if any requests are pending, else False."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"has_queued_tasksself--bool-1",children:"has_queued_tasks(self) \u2192 bool"}),"\n",(0,r.jsx)(n.p,{children:"Return a value indicating whether there are any queued tasks."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"id-6",children:"id"}),"\n",(0,r.jsx)(n.p,{children:"The components ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," ComponentId"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"indicators_initializedself--bool-1",children:"indicators_initialized(self) \u2192 bool"}),"\n",(0,r.jsx)(n.p,{children:"Return a value indicating whether all indicators are initialized."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," True if all initialized, else False"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_degraded-5",children:"is_degraded"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"DEGRADED"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_degraded"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_disposed-5",children:"is_disposed"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"DISPOSED"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_disposed"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_faulted-5",children:"is_faulted"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"FAULTED"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_faulted"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_initialized-5",children:"is_initialized"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the component has been initialized (component.state >= ",(0,r.jsx)(n.code,{children:"INITIALIZED"}),")."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_initialized"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_pending_requestself-uuid4-request_id--bool-1",children:"is_pending_request(self, UUID4 request_id) \u2192 bool"}),"\n",(0,r.jsx)(n.p,{children:"Return whether the request for the given identifier is pending processing."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"request_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,r.jsx)(n.em,{children:"UUID4"})}),") \u2013 The request ID to check."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," True if request is pending, else False."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_running-5",children:"is_running"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_running"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"is_stopped-5",children:"is_stopped"}),"\n",(0,r.jsx)(n.p,{children:"bool"}),"\n",(0,r.jsxs)(n.p,{children:["Return whether the current component state is ",(0,r.jsx)(n.code,{children:"STOPPED"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.is_stopped"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"loadself-dict-state--void-1",children:"load(self, dict state) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Load the actor/strategy state from the give state dictionary."}),"\n",(0,r.jsx)(n.p,{children:"Calls on_load and passes the state."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"state"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"bytes"})," \u200b*]*\u200b) \u2013 The strategy state to load."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-110",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Exceptions raised will be caught, logged, and reraised."}),"\n",(0,r.jsx)(n.h4,{id:"log-1",children:"log"}),"\n",(0,r.jsx)(n.p,{children:"The actors logger."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," Logger"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"log_diagnosticsself-logger-logger--void-1",children:"log_diagnostics(self, Logger logger) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(n.h4,{id:"msgbus-3",children:"msgbus"}),"\n",(0,r.jsx)(n.p,{children:"The message bus for the actor (if registered)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," MessageBus or ",(0,r.jsx)(n.code,{children:"None"})]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"on_barself-bar-bar--void-1",children:"on_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives a bar."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"bar"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(n.em,{children:"Bar"})}),") \u2013 The bar received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-111",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_dataself-data--void-1",children:"on_data(self, data) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives data."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"data"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,r.jsx)(n.em,{children:"Data"})}),") \u2013 The data received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-112",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_degradeself--void-1",children:"on_degrade(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed on degrade."}),"\n",(0,r.jsx)(n.h4,{id:"warning-113",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.p,{children:"Should be overridden in the actor implementation."}),"\n",(0,r.jsx)(n.h4,{id:"on_disposeself--void-1",children:"on_dispose(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed on dispose."}),"\n",(0,r.jsx)(n.p,{children:"Cleanup/release any resources used here."}),"\n",(0,r.jsx)(n.h4,{id:"warning-114",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_eventself-event-event--void-1",children:"on_event(self, Event event) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed running and receives an event."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"event"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Event",children:(0,r.jsx)(n.em,{children:"Event"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-115",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_faultself--void-1",children:"on_fault(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed on fault."}),"\n",(0,r.jsx)(n.p,{children:"Cleanup any resources used by the actor here."}),"\n",(0,r.jsx)(n.h4,{id:"warning-116",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.p,{children:"Should be overridden in the actor implementation."}),"\n",(0,r.jsx)(n.h4,{id:"on_funding_rateself-fundingrateupdate-funding_rate--void-1",children:"on_funding_rate(self, FundingRateUpdate funding_rate) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives a funding rate update."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"funding_rate"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.FundingRateUpdate",children:(0,r.jsx)(n.em,{children:"FundingRateUpdate"})}),") \u2013 The funding rate update received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-117",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_historical_dataself-data--void-1",children:"on_historical_data(self, data) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives historical data."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"data"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,r.jsx)(n.em,{children:"Data"})}),") \u2013 The historical data received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-118",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_index_priceself-indexpriceupdate-index_price--void-1",children:"on_index_price(self, IndexPriceUpdate index_price) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives an index price update."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"index_price"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.IndexPriceUpdate",children:(0,r.jsx)(n.em,{children:"IndexPriceUpdate"})}),") \u2013 The index price update received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-119",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_instrumentself-instrument-instrument--void-1",children:"on_instrument(self, Instrument instrument) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives an instrument."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"instrument"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.Instrument",children:(0,r.jsx)(n.em,{children:"Instrument"})}),") \u2013 The instrument received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-120",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_instrument_closeself-instrumentclose-update--void-1",children:"on_instrument_close(self, InstrumentClose update) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives an instrument close update."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"update"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.InstrumentClose",children:(0,r.jsx)(n.em,{children:"InstrumentClose"})}),") \u2013 The instrument close received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-121",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_instrument_statusself-instrumentstatus-data--void-1",children:"on_instrument_status(self, InstrumentStatus data) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives an instrument status update."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"data"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.InstrumentStatus",children:(0,r.jsx)(n.em,{children:"InstrumentStatus"})}),") \u2013 The instrument status update received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-122",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_loadself-dict-state--void-1",children:"on_load(self, dict state) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when the actor state is loaded."}),"\n",(0,r.jsx)(n.p,{children:"Saved state values will be contained in the give state dictionary."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"state"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"bytes"})," \u200b*]*\u200b) \u2013 The strategy state to load."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-123",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_mark_priceself-markpriceupdate-mark_price--void-1",children:"on_mark_price(self, MarkPriceUpdate mark_price) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives a mark price update."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"mark_price"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.MarkPriceUpdate",children:(0,r.jsx)(n.em,{children:"MarkPriceUpdate"})}),") \u2013 The mark price update received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-124",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_order_bookself-orderbook-order_book--void-1",children:"on_order_book(self, OrderBook order_book) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives an order book."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"order_book"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/book#nautilus_trader.model.book.OrderBook",children:(0,r.jsx)(n.em,{children:"OrderBook"})}),") \u2013 The order book received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-125",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_order_book_deltasself-deltas--void-1",children:"on_order_book_deltas(self, deltas) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives order book deltas."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"deltas"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.OrderBookDeltas",children:(0,r.jsx)(n.em,{children:"OrderBookDeltas"})})," ",(0,r.jsx)(n.em,{children:"or"})," \u200b",(0,r.jsx)(n.em,{children:"nautilus_pyo3.OrderBookDeltas"}),"\u200b) \u2013 The order book deltas received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-126",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_order_book_depthself-depth--void-1",children:"on_order_book_depth(self, depth) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives an order book depth."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"depth"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.OrderBookDepth10",children:(0,r.jsx)(n.em,{children:"OrderBookDepth10"})}),") \u2013 The order book depth received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-127",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_quote_tickself-quotetick-tick--void-1",children:"on_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives a quote tick."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"tick"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(n.em,{children:"QuoteTick"})}),") \u2013 The tick received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-128",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_resetself--void-1",children:"on_reset(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed on reset."}),"\n",(0,r.jsx)(n.h4,{id:"warning-129",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.p,{children:"Should be overridden in a user implementation."}),"\n",(0,r.jsx)(n.h4,{id:"on_resumeself--void-1",children:"on_resume(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed on resume."}),"\n",(0,r.jsx)(n.h4,{id:"warning-130",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_saveself--dict-1",children:"on_save(self) \u2192 dict"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when the actor state is saved."}),"\n",(0,r.jsx)(n.p,{children:"Create and return a state dictionary of values to be saved."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The strategy state to save."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," dict[str, bytes]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-131",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_signalself-signal--void-1",children:"on_signal(self, signal) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives signal data."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"signal"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,r.jsx)(n.em,{children:"Data"})}),") \u2013 The signal received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-132",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"on_startself--void-1",children:"on_start(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed on start."}),"\n",(0,r.jsx)(n.p,{children:"The intent is that this method is called once per trading \u2018run\u2019, when initially starting."}),"\n",(0,r.jsx)(n.p,{children:"It is recommended to subscribe/request for data here."}),"\n",(0,r.jsx)(n.h4,{id:"warning-133",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.p,{children:"Should be overridden in a user implementation."}),"\n",(0,r.jsx)(n.h4,{id:"on_stopself--void-1",children:"on_stop(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed on stop."}),"\n",(0,r.jsx)(n.p,{children:"The intent is that this method is called to pause, or when done for day."}),"\n",(0,r.jsx)(n.h4,{id:"warning-134",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.p,{children:"Should be overridden in a user implementation."}),"\n",(0,r.jsx)(n.h4,{id:"on_trade_tickself-tradetick-tick--void-1",children:"on_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Actions to be performed when running and receives a trade tick."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"tick"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(n.em,{children:"TradeTick"})}),") \u2013 The tick received."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-135",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"pending_requestsself--set-1",children:"pending_requests(self) \u2192 set"}),"\n",(0,r.jsx)(n.p,{children:"Return the request IDs which are currently pending processing."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," set[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"}),"]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"portfolio-2",children:"portfolio"}),"\n",(0,r.jsx)(n.p,{children:"The read-only portfolio for the actor."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," PortfolioFacade"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"pre_processself-data-data--void-1",children:"pre_process(self, Data data) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Abstract method pre_process (implement in subclass)."}),"\n",(0,r.jsx)(n.h4,{id:"processself-uint64_t-ts_now--void-2",children:"process(self, uint64_t ts_now) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(n.h4,{id:"publish_dataself-datatype-data_type-data-data--void-1",children:"publish_data(self, DataType data_type, Data data) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Publish the given data to the message bus."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"data_type"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.DataType",children:(0,r.jsx)(n.em,{children:"DataType"})}),") \u2013 The data type being published."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"data"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,r.jsx)(n.em,{children:"Data"})}),") \u2013 The data to publish."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"publish_signalself-str-name-value-uint64_t-ts_event0--void-1",children:"publish_signal(self, str name, value, uint64_t ts_event=0) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Publish the given value as a signal to the message bus."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"name"})," (\u200b",(0,r.jsx)(n.em,{children:"str"}),"\u200b) \u2013 The name of the signal being published. The signal name will be converted to title case, with each word capitalized (e.g., \u2018example\u2019 becomes \u2018SignalExample\u2019)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"value"})," (\u200b",(0,r.jsx)(n.em,{children:"object"}),"\u200b) \u2013 The signal data to publish."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ts_event"})," (",(0,r.jsx)(n.em,{children:"uint64_t"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 UNIX timestamp (nanoseconds) when the signal event occurred. If ",(0,r.jsx)(n.code,{children:"None"})," then will timestamp current time."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"queue_for_executorself-func-callable-any-tuple-argsnone-dict-kwargsnone-1",children:"queue_for_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)"}),"\n",(0,r.jsx)(n.p,{children:"Queues the callable func to be executed as fn(*args, **kwargs) sequentially."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"func"})," (\u200b",(0,r.jsx)(n.em,{children:"Callable"}),"\u200b) \u2013 The function to be executed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"args"})," (\u200b",(0,r.jsx)(n.em,{children:"positional arguments"}),"\u200b) \u2013 The positional arguments for the call to func."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"kwargs"})," (\u200b",(0,r.jsx)(n.em,{children:"arbitrary keyword arguments"}),"\u200b) \u2013 The keyword arguments for the call to func."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"})," ",(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If func is not of type Callable."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"queued_task_idsself--list-1",children:"queued_task_ids(self) \u2192 list"}),"\n",(0,r.jsx)(n.p,{children:"Return the queued task identifiers."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.executor.TaskId",children:"TaskId"}),"]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"register_baseself-portfoliofacade-portfolio-messagebus-msgbus-cachefacade-cache-clock-clock--void-1",children:"register_base(self, PortfolioFacade portfolio, MessageBus msgbus, CacheFacade cache, Clock clock) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Register with a trader."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"portfolio"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/portfolio#nautilus_trader.portfolio.PortfolioFacade",children:(0,r.jsx)(n.em,{children:"PortfolioFacade"})}),") \u2013 The read-only portfolio for the actor."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"msgbus"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.MessageBus",children:(0,r.jsx)(n.em,{children:"MessageBus"})}),") \u2013 The message bus for the actor."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"cache"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/cache#nautilus_trader.cache.base.CacheFacade",children:(0,r.jsx)(n.em,{children:"CacheFacade"})}),") \u2013 The read-only cache for the actor."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"clock"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.Clock",children:(0,r.jsx)(n.em,{children:"Clock"})}),") \u2013 The clock for the actor."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-136",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,r.jsx)(n.h4,{id:"register_executorself-loop-asyncioabstracteventloop-executor-executor--void-1",children:"register_executor(self, loop: asyncio.AbstractEventLoop, executor: Executor) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Register the given Executor for the actor."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"loop"})," (\u200b",(0,r.jsx)(n.em,{children:"asyncio.AbstractEventLoop"}),"\u200b) \u2013 The event loop of the application."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"executor"})," (\u200b",(0,r.jsx)(n.em,{children:"concurrent.futures.Executor"}),"\u200b) \u2013 The executor to register."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"})," ",(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If executor is not of type concurrent.futures.Executor"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"register_indicator_for_barsself-bartype-bar_type-indicator-indicator--void-1",children:"register_indicator_for_bars(self, BarType bar_type, Indicator indicator) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Register the given indicator with the actor/strategy to receive bar data for the given bar type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"bar_type"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.BarType",children:(0,r.jsx)(n.em,{children:"BarType"})}),") \u2013 The bar type for bar updates."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"indicator"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(n.em,{children:"Indicator"})}),") \u2013 The indicator to register."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"register_indicator_for_quote_ticksself-instrumentid-instrument_id-indicator-indicator--void-1",children:"register_indicator_for_quote_ticks(self, InstrumentId instrument_id, Indicator indicator) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Register the given indicator with the actor/strategy to receive quote tick data for the given instrument ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID for tick updates."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"indicator"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(n.em,{children:"Indicator"})}),") \u2013 The indicator to register."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"register_indicator_for_trade_ticksself-instrumentid-instrument_id-indicator-indicator--void-1",children:"register_indicator_for_trade_ticks(self, InstrumentId instrument_id, Indicator indicator) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Register the given indicator with the actor/strategy to receive trade tick data for the given instrument ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID for tick updates."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"indicator"})," (\u200b",(0,r.jsx)(n.em,{children:"indicator"}),"\u200b) \u2013 The indicator to register."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"register_venueself-simulatedexchange-exchange--void-1",children:"register_venue(self, SimulatedExchange exchange) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Register the given simulated exchange with the module."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"exchange"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.engine.SimulatedExchange",children:(0,r.jsx)(n.em,{children:"SimulatedExchange"})}),") \u2013 The exchange to register."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"register_warning_eventself-type-event--void-1",children:"register_warning_event(self, type event) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Register the given event type for warning log levels."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"event"})," (\u200b",(0,r.jsx)(n.em,{children:"type"}),"\u200b) \u2013 The event class to register."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"registered_indicators-1",children:"registered_indicators"}),"\n",(0,r.jsx)(n.p,{children:"Return the registered indicators for the strategy."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:"Indicator"}),"]"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"request_aggregated_barsself-list-bar_types-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-bool-include_external_datafalse-bool-update_subscriptionsfalse-update_catalog-bool--false-dict-paramsnone--uuid4-1",children:["request_aggregated_bars(self, list bar_types, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, bool include_external_data=False, bool update_subscriptions=False, update_catalog: bool = False, dict params=None) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsx)(n.p,{children:"Request historical aggregated Bar data for multiple bar types. The first bar is used to determine which market data type will be queried. This can either be quotes, trades or bars. If bars are queried, the first bar type needs to have a composite bar that is external (i.e. not internal/aggregated). This external bar type will be queried."}),"\n",(0,r.jsxs)(n.p,{children:["If end is ",(0,r.jsx)(n.code,{children:"None"})," then will request up to the most recent data."]}),"\n",(0,r.jsx)(n.p,{children:"Once the response is received, the bar data is forwarded from the message bus to the on_historical_data handler. Any tick data used for aggregation is also forwarded to the on_historical_data handler."}),"\n",(0,r.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"bar_types"})," (",(0,r.jsx)(n.em,{children:"list"})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.BarType",children:(0,r.jsx)(n.em,{children:"BarType"})})," \u200b*]*\u200b) \u2013 The list of bar types for the request. Composite bars can also be used and need to figure in the list after a BarType on which it depends."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"start"})," (\u200b",(0,r.jsx)(n.em,{children:"datetime"}),"\u200b) \u2013 The start datetime (UTC) of request time range. Should be left-inclusive (start <= value), but inclusiveness is not currently guaranteed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"end"})," (",(0,r.jsx)(n.em,{children:"datetime"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) of request time range. If None then will be replaced with the current UTC time. Should be right-inclusive (value <= end), but inclusiveness is not currently guaranteed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"limit"})," (",(0,r.jsx)(n.em,{children:"int"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The limit on the amount of data received (quote ticks, trade ticks or bars)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"callback"})," (",(0,r.jsx)(n.em,{children:"Callable"})," ",(0,r.jsx)(n.em,{children:"["})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,r.jsx)(n.em,{children:"UUID4"})})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"None"})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"include_external_data"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If True, includes the queried external data in the response."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"update_subscriptions"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If True, updates the aggregators of any existing or future subscription with the queried external data."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"update_catalog"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If start is None."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > current timestamp (now)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If end is > current timestamp (now)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > end."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If bar_types is empty."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If bar_types is empty or contains elements not of type BarType."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"request_barsself-bartype-bar_type-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1",children:["request_bars(self, BarType bar_type, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsx)(n.p,{children:"Request historical Bar data."}),"\n",(0,r.jsxs)(n.p,{children:["If end is ",(0,r.jsx)(n.code,{children:"None"})," then will request up to the most recent data."]}),"\n",(0,r.jsx)(n.p,{children:"Once the response is received, the bar data is forwarded from the message bus to the on_historical_data handler."}),"\n",(0,r.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"bar_type"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.BarType",children:(0,r.jsx)(n.em,{children:"BarType"})}),") \u2013 The bar type for the request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"start"})," (\u200b",(0,r.jsx)(n.em,{children:"datetime"}),"\u200b) \u2013 The start datetime (UTC) of request time range. Should be left-inclusive (start <= value), but inclusiveness is not currently guaranteed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"end"})," (",(0,r.jsx)(n.em,{children:"datetime"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) of request time range. If None then will be replaced with the current UTC time. Should be right-inclusive (value <= end), but inclusiveness is not currently guaranteed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"limit"})," (",(0,r.jsx)(n.em,{children:"int"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The limit on the amount of bars received."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"callback"})," (",(0,r.jsx)(n.em,{children:"Callable"})," ",(0,r.jsx)(n.em,{children:"["})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,r.jsx)(n.em,{children:"UUID4"})})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"None"})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"update_catalog"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If start is None."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > current timestamp (now)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If end is > current timestamp (now)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > end."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"request_dataself-datatype-data_type-clientid-client_id-instrumentid-instrument_idnone-datetime-startnone-datetime-endnone-int-limit0-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1",children:["request_data(self, DataType data_type, ClientId client_id, InstrumentId instrument_id=None, datetime start=None, datetime end=None, int limit=0, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsx)(n.p,{children:"Request custom data for the given data type from the given data client."}),"\n",(0,r.jsx)(n.p,{children:"Once the response is received, the data is forwarded from the message bus to the on_historical_data handler."}),"\n",(0,r.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"data_type"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.DataType",children:(0,r.jsx)(n.em,{children:"DataType"})}),") \u2013 The data type for the request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})}),") \u2013 The data client ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"start"})," (\u200b",(0,r.jsx)(n.em,{children:"datetime"}),"\u200b) \u2013 The start datetime (UTC) of request time range. Cannot be None. Should be left-inclusive (start <= value), but inclusiveness is not currently guaranteed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"end"})," (",(0,r.jsx)(n.em,{children:"datetime"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) of request time range. If None then will be replaced with the current UTC time. Should be right-inclusive (value <= end), but inclusiveness is not currently guaranteed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"limit"})," (",(0,r.jsx)(n.em,{children:"int"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The limit on the amount of data points received."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"callback"})," (",(0,r.jsx)(n.em,{children:"Callable"})," ",(0,r.jsx)(n.em,{children:"["})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,r.jsx)(n.em,{children:"UUID4"})})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"None"})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"update_catalog"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If start is None."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > current timestamp (now)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If end is > current timestamp (now)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > end."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"request_instrumentself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1",children:["request_instrument(self, InstrumentId instrument_id, datetime start=None, datetime end=None, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsx)(n.p,{children:"Request Instrument data for the given instrument ID."}),"\n",(0,r.jsxs)(n.p,{children:["If end is ",(0,r.jsx)(n.code,{children:"None"})," then will request up to the most recent data."]}),"\n",(0,r.jsx)(n.p,{children:"Once the response is received, the instrument data is forwarded from the message bus to the on_instrument handler."}),"\n",(0,r.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID for the request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"start"})," (",(0,r.jsx)(n.em,{children:"datetime"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The start datetime (UTC) of request time range. The inclusiveness depends on individual data client implementation."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"end"})," (",(0,r.jsx)(n.em,{children:"datetime"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) of request time range. The inclusiveness depends on individual data client implementation."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"callback"})," (",(0,r.jsx)(n.em,{children:"Callable"})," ",(0,r.jsx)(n.em,{children:"["})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,r.jsx)(n.em,{children:"UUID4"})})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"None"})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"update_catalog"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is not None and > current timestamp (now)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If end is not None and > current timestamp (now)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If start and end are not None and start is >= end."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"request_instrumentsself-venue-venue-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1",children:["request_instruments(self, Venue venue, datetime start=None, datetime end=None, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsx)(n.p,{children:"Request all Instrument data for the given venue."}),"\n",(0,r.jsxs)(n.p,{children:["If end is ",(0,r.jsx)(n.code,{children:"None"})," then will request up to the most recent data."]}),"\n",(0,r.jsx)(n.p,{children:"Once the response is received, the instrument data is forwarded from the message bus to the on_instrument handler."}),"\n",(0,r.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"venue"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.Venue",children:(0,r.jsx)(n.em,{children:"Venue"})}),") \u2013 The venue for the request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"start"})," (",(0,r.jsx)(n.em,{children:"datetime"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The start datetime (UTC) of request time range. The inclusiveness depends on individual data client implementation."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"end"})," (",(0,r.jsx)(n.em,{children:"datetime"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) of request time range. The inclusiveness depends on individual data client implementation."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"callback"})," (",(0,r.jsx)(n.em,{children:"Callable"})," ",(0,r.jsx)(n.em,{children:"["})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,r.jsx)(n.em,{children:"UUID4"})})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"None"})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"update_catalog"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"only_last (default True) retains only the latest instrument record per instrument_id, based on the most recent ts_init."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is not None and > current timestamp (now)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If end is not None and > current timestamp (now)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If start and end are not None and start is >= end."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"request_order_book_snapshotself-instrumentid-instrument_id-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-dict-paramsnone--uuid4-1",children:["request_order_book_snapshot(self, InstrumentId instrument_id, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, dict params=None) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsx)(n.p,{children:"Request an order book snapshot."}),"\n",(0,r.jsx)(n.p,{children:"Once the response is received, the order book data is forwarded from the message bus to the on_historical_data handler."}),"\n",(0,r.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID for the order book snapshot request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"limit"})," (",(0,r.jsx)(n.em,{children:"int"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The limit on the depth of the order book snapshot."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If None, it will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"callback"})," (",(0,r.jsx)(n.em,{children:"Callable"})," ",(0,r.jsx)(n.em,{children:"["})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,r.jsx)(n.em,{children:"UUID4"})})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"None"})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If the instrument_id is None."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"request_quote_ticksself-instrumentid-instrument_id-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1",children:["request_quote_ticks(self, InstrumentId instrument_id, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsx)(n.p,{children:"Request historical QuoteTick data."}),"\n",(0,r.jsxs)(n.p,{children:["If end is ",(0,r.jsx)(n.code,{children:"None"})," then will request up to the most recent data."]}),"\n",(0,r.jsx)(n.p,{children:"Once the response is received, the quote tick data is forwarded from the message bus to the on_historical_data handler."}),"\n",(0,r.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The tick instrument ID for the request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"start"})," (\u200b",(0,r.jsx)(n.em,{children:"datetime"}),"\u200b) \u2013 The start datetime (UTC) of request time range. Should be left-inclusive (start <= value), but inclusiveness is not currently guaranteed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"end"})," (",(0,r.jsx)(n.em,{children:"datetime"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) of request time range. If None then will be replaced with the current UTC time. Should be right-inclusive (value <= end), but inclusiveness is not currently guaranteed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"limit"})," (",(0,r.jsx)(n.em,{children:"int"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The limit on the amount of quote ticks received."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"callback"})," (",(0,r.jsx)(n.em,{children:"Callable"})," ",(0,r.jsx)(n.em,{children:"["})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,r.jsx)(n.em,{children:"UUID4"})})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"None"})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"update_catalog"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If start is None."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > current timestamp (now)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If end is > current timestamp (now)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > end."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"request_trade_ticksself-instrumentid-instrument_id-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1",children:["request_trade_ticks(self, InstrumentId instrument_id, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsx)(n.p,{children:"Request historical TradeTick data."}),"\n",(0,r.jsxs)(n.p,{children:["If end is ",(0,r.jsx)(n.code,{children:"None"})," then will request up to the most recent data."]}),"\n",(0,r.jsx)(n.p,{children:"Once the response is received, the trade tick data is forwarded from the message bus to the on_historical_data handler."}),"\n",(0,r.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The tick instrument ID for the request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"start"})," (\u200b",(0,r.jsx)(n.em,{children:"datetime"}),"\u200b) \u2013 The start datetime (UTC) of request time range. Should be left-inclusive (start <= value), but inclusiveness is not currently guaranteed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"end"})," (",(0,r.jsx)(n.em,{children:"datetime"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) of request time range. If None then will be replaced with the current UTC time. Should be right-inclusive (value <= end), but inclusiveness is not currently guaranteed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"limit"})," (",(0,r.jsx)(n.em,{children:"int"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The limit on the amount of trade ticks received."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"callback"})," (",(0,r.jsx)(n.em,{children:"Callable"})," ",(0,r.jsx)(n.em,{children:"["})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,r.jsx)(n.em,{children:"UUID4"})})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"None"})," ",(0,r.jsx)(n.em,{children:"]"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"update_catalog"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If start is None."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > current timestamp (now)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If end is > current timestamp (now)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > end."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"resetself--void-7",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(n.h4,{id:"resumeself--void-5",children:"resume(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Resume the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_resume() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"RESUMING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-137",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"run_in_executorself-func-callable-any-tuple-argsnone-dict-kwargsnone-1",children:"run_in_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)"}),"\n",(0,r.jsx)(n.p,{children:"Schedules the callable func to be executed as fn(*args, **kwargs)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"func"})," (\u200b",(0,r.jsx)(n.em,{children:"Callable"}),"\u200b) \u2013 The function to be executed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"args"})," (\u200b",(0,r.jsx)(n.em,{children:"positional arguments"}),"\u200b) \u2013 The positional arguments for the call to func."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"kwargs"})," (\u200b",(0,r.jsx)(n.em,{children:"arbitrary keyword arguments"}),"\u200b) \u2013 The keyword arguments for the call to func."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The unique task identifier for the execution. This also corresponds to any future objects memory address."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.executor.TaskId",children:"TaskId"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"})," ",(0,r.jsx)(n.strong,{children:"TypeError"})," \u2013 If func is not of type Callable."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"saveself--dict-1",children:"save(self) \u2192 dict"}),"\n",(0,r.jsx)(n.p,{children:"Return the actor/strategy state dictionary to be saved."}),"\n",(0,r.jsx)(n.p,{children:"Calls on_save."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The strategy state to save."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," dict[str, bytes]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-138",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Exceptions raised will be caught, logged, and reraised."}),"\n",(0,r.jsx)(n.h4,{id:"shutdown_systemself-str-reasonnone--void-5",children:"shutdown_system(self, str reason=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Initiate a system-wide shutdown by generating and publishing a ShutdownSystem command."}),"\n",(0,r.jsx)(n.p,{children:"The command is handled by the system\u2019s NautilusKernel, which will invoke either stop (synchronously) or stop_async (asynchronously) depending on the execution context and the presence of an active event loop."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"reason"})," (",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The reason for issuing the shutdown command."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"startself--void-5",children:"start(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Start the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_start() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"STARTING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-139",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"state-5",children:"state"}),"\n",(0,r.jsx)(n.p,{children:"ComponentState"}),"\n",(0,r.jsx)(n.p,{children:"Return the components current state."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ComponentState"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Component.state"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"stopself--void-5",children:"stop(self) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Stop the component."}),"\n",(0,r.jsxs)(n.p,{children:["While executing on_stop() any exception will be logged and reraised, then the component will remain in a ",(0,r.jsx)(n.code,{children:"STOPPING"})," state."]}),"\n",(0,r.jsx)(n.h4,{id:"warning-140",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Do not override."}),"\n",(0,r.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_barsself-bartype-bar_type-clientid-client_idnone-bool-await_partialfalse-bool-update_catalogfalse-dict-paramsnone--void-1",children:"subscribe_bars(self, BarType bar_type, ClientId client_id=None, bool await_partial=False, bool update_catalog=False, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to streaming Bar data for the given bar type."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching bar data published on the message bus is forwarded to the on_bar handler."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"bar_type"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.BarType",children:(0,r.jsx)(n.em,{children:"BarType"})}),") \u2013 The bar type to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"await_partial"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If the bar aggregator should await the arrival of a historical partial bar prior to actively aggregating new bars."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"update_catalog"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data. Only useful when downloading data during a backtest."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_dataself-datatype-data_type-clientid-client_idnone-instrumentid-instrument_idnone-bool-update_catalogfalse-dict-paramsnone--void-1",children:"subscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, bool update_catalog=False, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to data of the given data type."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching data published on the message bus is forwarded to the on_data handler."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"data_type"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.DataType",children:(0,r.jsx)(n.em,{children:"DataType"})}),") \u2013 The data type to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The data client ID. If supplied then a Subscribe command will be sent to the corresponding data client."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"update_catalog"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data. Only useful when downloading data during a backtest."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_funding_ratesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"subscribe_funding_rates(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to streaming FundingRateUpdate data for the given instrument ID."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching funding rate updates published on the message bus are forwarded to the on_funding_rate handler."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_index_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"subscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to streaming IndexPriceUpdate data for the given instrument ID."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching index price updates published on the message bus are forwarded to the on_index_price handler."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_instrumentself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"subscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to update Instrument data for the given instrument ID."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching instrument data published on the message bus is forwarded to the on_instrument handler."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID for the subscription."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_instrument_closeself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"subscribe_instrument_close(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to close updates for the given instrument ID."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching instrument close data published on the message bus is forwarded to the on_instrument_close handler."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to subscribe to status updates for."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_instrument_statusself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"subscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to status updates for the given instrument ID."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching instrument status data published on the message bus is forwarded to the on_instrument_status handler."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to subscribe to status updates for."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_instrumentsself-venue-venue-clientid-client_idnone-dict-paramsnone--void-1",children:"subscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to update Instrument data for the given venue."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching instrument data published on the message bus is forwarded the on_instrument handler."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"venue"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.Venue",children:(0,r.jsx)(n.em,{children:"Venue"})}),") \u2013 The venue for the subscription."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_mark_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"subscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to streaming MarkPriceUpdate data for the given instrument ID."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching mark price updates published on the message bus are forwarded to the on_mark_price handler."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_order_book_at_intervalself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-int-interval_ms1000-clientid-client_idnone-dict-paramsnone--void-1",children:"subscribe_order_book_at_interval(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, int interval_ms=1000, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to an OrderBook at a specified interval for the given instrument ID."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching order book updates published on the message bus are forwarded to the on_order_book handler."}),"\n",(0,r.jsx)(n.p,{children:"The DataEngine will only maintain one order book for each instrument. Because of this - the level, depth and params for the stream will be set as per the last subscription request (this will also affect all subscribers)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The order book instrument ID to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"book_type"})," (BookType ","L3_MBO",") \u2013 The order book type."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"depth"})," (",(0,r.jsx)(n.em,{children:"int"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The maximum depth for the order book. A depth of 0 is maximum depth."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"interval_ms"})," (",(0,r.jsx)(n.em,{children:"int"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default 1000"}),"\u200b) \u2013 The order book snapshot interval (milliseconds)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If depth is negative (< 0)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If interval_ms is not positive (> 0)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"warning-141",children:"WARNING"}),"\n",(0,r.jsx)(n.p,{children:"Consider subscribing to order book deltas if you need intervals less than 100 milliseconds."}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_order_book_deltasself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-clientid-client_idnone-bool-managedtrue-bool-pyo3_conversionfalse-dict-paramsnone--void-1",children:"subscribe_order_book_deltas(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to the order book data stream, being a snapshot then deltas for the given instrument ID."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching order book data published on the message bus is forwarded to the on_order_book_deltas handler."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The order book instrument ID to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"book_type"})," (BookType ","L3_MBO",") \u2013 The order book type."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"depth"})," (",(0,r.jsx)(n.em,{children:"int"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The maximum depth for the order book. A depth of 0 is maximum depth."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"managed"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If an order book should be managed by the data engine based on the subscribed feed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"pyo3_conversion"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If received deltas should be converted to nautilus_pyo3.OrderBookDeltas prior to being passed to the on_order_book_deltas handler."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_order_book_depthself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-clientid-client_idnone-bool-managedtrue-bool-pyo3_conversionfalse-dict-paramsnone--void-1",children:"subscribe_order_book_depth(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to the order book depth stream for the given instrument ID."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching order book data published on the message bus is forwarded to the on_order_book_depth handler."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The order book instrument ID to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"book_type"})," (BookType ","L3_MBO",") \u2013 The order book type."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"managed"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If an order book should be managed by the data engine based on the subscribed feed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"pyo3_conversion"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If received deltas should be converted to nautilus_pyo3.OrderBookDepth prior to being passed to the on_order_book_depth handler."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_quote_ticksself-instrumentid-instrument_id-clientid-client_idnone-bool-update_catalogfalse-dict-paramsnone--void-1",children:"subscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to streaming QuoteTick data for the given instrument ID."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching quote tick data published on the message bus is forwarded to the on_quote_tick handler."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The tick instrument to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"update_catalog"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data. Only useful when downloading data during a backtest."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_signalself-str-name--void-1",children:"subscribe_signal(self, str name='') \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to a specific signal by name, or to all signals if no name is provided."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching signal data published on the message bus is forwarded to the on_signal handler."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"name"})," (",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The name of the signal to subscribe to. If not provided or an empty string is passed, the subscription will include all signals. The signal name is case-insensitive and will be capitalized (e.g., \u2018example\u2019 becomes \u2018SignalExample*\u2019)."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscribe_trade_ticksself-instrumentid-instrument_id-clientid-client_idnone-bool-update_catalogfalse-dict-paramsnone--void-1",children:"subscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Subscribe to streaming TradeTick data for the given instrument ID."}),"\n",(0,r.jsx)(n.p,{children:"Once subscribed, any matching trade tick data published on the message bus is forwarded to the on_trade_tick handler."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The tick instrument to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"update_catalog"})," (",(0,r.jsx)(n.em,{children:"bool"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data. Only useful when downloading data during a backtest."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"to_importable_configself--importableactorconfig-1",children:["to_importable_config(self) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.common.config.ImportableActorConfig",children:"ImportableActorConfig"})]}),"\n",(0,r.jsx)(n.p,{children:"Returns an importable configuration for this actor."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.common.config.ImportableActorConfig",children:"ImportableActorConfig"})]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"trader_id-6",children:"trader_id"}),"\n",(0,r.jsx)(n.p,{children:"The trader ID associated with the component."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," TraderId"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"type-5",children:"type"}),"\n",(0,r.jsx)(n.p,{children:"The components type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," type"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_barsself-bartype-bar_type-clientid-client_idnone-dict-paramsnone--void-1",children:"unsubscribe_bars(self, BarType bar_type, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Unsubscribe from streaming Bar data for the given bar type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"bar_type"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.BarType",children:(0,r.jsx)(n.em,{children:"BarType"})}),") \u2013 The bar type to unsubscribe from."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_dataself-datatype-data_type-clientid-client_idnone-instrumentid-instrument_idnone-dict-paramsnone--void-1",children:"unsubscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Unsubscribe from data of the given data type."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"data_type"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.DataType",children:(0,r.jsx)(n.em,{children:"DataType"})}),") \u2013 The data type to unsubscribe from."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The data client ID. If supplied then an Unsubscribe command will be sent to the data client."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_funding_ratesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"unsubscribe_funding_rates(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Unsubscribe from streaming FundingRateUpdate data for the given instrument ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to unsubscribe from."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_index_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"unsubscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Unsubscribe from streaming IndexPriceUpdate data for the given instrument ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_instrumentself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"unsubscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Unsubscribe from update Instrument data for the given instrument ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to unsubscribe from."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_instrument_statusself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"unsubscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Unsubscribe to status updates of the given venue."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to unsubscribe to status updates for."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_instrumentsself-venue-venue-clientid-client_idnone-dict-paramsnone--void-1",children:"unsubscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Unsubscribe from update Instrument data for the given venue."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"venue"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.Venue",children:(0,r.jsx)(n.em,{children:"Venue"})}),") \u2013 The venue for the subscription."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_mark_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"unsubscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Unsubscribe from streaming MarkPriceUpdate data for the given instrument ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_order_book_at_intervalself-instrumentid-instrument_id-int-interval_ms1000-clientid-client_idnone-dict-paramsnone--void-1",children:"unsubscribe_order_book_at_interval(self, InstrumentId instrument_id, int interval_ms=1000, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Unsubscribe from an OrderBook at a specified interval for the given instrument ID."}),"\n",(0,r.jsx)(n.p,{children:"The interval must match the previously subscribed interval."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The order book instrument to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"interval_ms"})," (",(0,r.jsx)(n.em,{children:"int"})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"default 1000"}),"\u200b) \u2013 The order book snapshot interval (milliseconds)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_order_book_deltasself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"unsubscribe_order_book_deltas(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Unsubscribe the order book deltas stream for the given instrument ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The order book instrument to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_order_book_depthself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"unsubscribe_order_book_depth(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Unsubscribe the order book depth stream for the given instrument ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The order book instrument to subscribe to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_quote_ticksself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"unsubscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Unsubscribe from streaming QuoteTick data for the given instrument ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The tick instrument to unsubscribe from."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"unsubscribe_trade_ticksself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"unsubscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Unsubscribe from streaming TradeTick data for the given instrument ID."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"instrument_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The tick instrument ID to unsubscribe from."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"client_id"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,r.jsx)(n.em,{children:"ClientId"})})," ",(0,r.jsx)(n.em,{children:","})," \u200b",(0,r.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,r.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"params"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.em,{children:"Any"})," ",(0,r.jsxs)(n.em,{children:["]* ",(0,r.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"update_syntheticself-syntheticinstrument-synthetic--void-1",children:"update_synthetic(self, SyntheticInstrument synthetic) \u2192 void"}),"\n",(0,r.jsx)(n.p,{children:"Update the synthetic instrument in the cache."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"synthetic"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.SyntheticInstrument",children:(0,r.jsx)(n.em,{children:"SyntheticInstrument"})}),") \u2013 The synthetic instrument to update in the cache."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"})," ",(0,r.jsx)(n.strong,{children:"KeyError"})," \u2013 If synthetic does not already exist in the cache."]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"class-backtestnode",children:[(0,r.jsx)(n.em,{children:"class"})," BacktestNode"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.code,{children:"object"})]}),"\n",(0,r.jsx)(n.p,{children:"Provides a node for orchestrating groups of backtest runs."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"configs"})," (",(0,r.jsx)(n.em,{children:"list"})," ",(0,r.jsx)(n.em,{children:"\u200b[\u200b"}),(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.backtest.config.BacktestRunConfig",children:(0,r.jsx)(n.em,{children:"BacktestRunConfig"})})," \u200b*]*\u200b) \u2013 The backtest run configurations."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If configs is ",(0,r.jsx)(n.code,{children:"None"})," or empty."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If configs contains a type other than BacktestRunConfig."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"property-configs--listbacktestrunconfig",children:[(0,r.jsx)(n.em,{children:"property"})," configs ",(0,r.jsxs)(n.em,{children:[": list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.backtest.config.BacktestRunConfig",children:"BacktestRunConfig"}),"]"]})]}),"\n",(0,r.jsx)(n.p,{children:"Return the loaded backtest run configs for the node."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.backtest.config.BacktestRunConfig",children:"BacktestRunConfig"}),"]"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"get_log_guard--logguard--logguard--none",children:["get_log_guard() \u2192 LogGuard | ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.LogGuard",children:"LogGuard"})," | None"]}),"\n",(0,r.jsx)(n.p,{children:"Return the global logging subsystems log guard."}),"\n",(0,r.jsxs)(n.p,{children:["May return ",(0,r.jsx)(n.code,{children:"None"})," if no internal engines are initialized yet."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," nautilus_pyo3.LogGuard | ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.LogGuard",children:"LogGuard"})," | None"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"get_enginerun_config_id-str--backtestengine--none",children:["get_engine(run_config_id: str) \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.engine.BacktestEngine",children:"BacktestEngine"})," | None"]}),"\n",(0,r.jsx)(n.p,{children:"Return the backtest engine associated with the given run config ID (if found)."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"})," ",(0,r.jsx)(n.strong,{children:"run_config_id"})," (\u200b",(0,r.jsx)(n.em,{children:"str"}),"\u200b) \u2013 The run configuration ID for the created engine."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," BacktestEngine or ",(0,r.jsx)(n.code,{children:"None"})]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"get_engines--listbacktestengine",children:["get_engines() \u2192 list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.engine.BacktestEngine",children:"BacktestEngine"}),"]"]}),"\n",(0,r.jsx)(n.p,{children:"Return all backtest engines created by the node."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.engine.BacktestEngine",children:"BacktestEngine"}),"]"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"dispose",children:"dispose()"}),"\n",(0,r.jsx)(n.h4,{id:"add_data_client_factoryname-str-factory-typelivedataclientfactory--none",children:"add_data_client_factory(name: str, factory: type[LiveDataClientFactory]) \u2192 None"}),"\n",(0,r.jsx)(n.p,{children:"Add the given data client factory to the node."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"name"})," (\u200b",(0,r.jsx)(n.em,{children:"str"}),"\u200b) \u2013 The name of the client factory."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"factory"})," (",(0,r.jsx)(n.em,{children:"type"})," *[*",(0,r.jsx)(n.em,{children:"LiveDataClientFactory"})," \u200b*]*\u200b) \u2013 The factory class to add."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ValueError"})," \u2013 If name is not a valid string."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"KeyError"})," \u2013 If name has already been added."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"build--none",children:"build() \u2192 None"}),"\n",(0,r.jsx)(n.p,{children:"Can be optionally run before a backtest to build backtest engines for all configured backtest runs."}),"\n",(0,r.jsx)(n.p,{children:"This can be useful to subscribe to a topic before running a backtest to collect any type of information."}),"\n",(0,r.jsxs)(n.h4,{id:"setup_download_enginecatalog_config-datacatalogconfig-data_clients-dictstr-typelivedataclientconfig--none",children:["setup_download_engine(catalog_config: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.persistence.config.DataCatalogConfig",children:"DataCatalogConfig"}),", data_clients: dict[str, type[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.live.config.LiveDataClientConfig",children:"LiveDataClientConfig"}),"]]) \u2192 None"]}),"\n",(0,r.jsx)(n.p,{children:"Set up a backtest engine for downloading data."}),"\n",(0,r.jsx)(n.p,{children:"Creates a dedicated backtest engine with an actor for data downloading purposes."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"catalog_config"})," (",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.persistence.config.DataCatalogConfig",children:(0,r.jsx)(n.em,{children:"DataCatalogConfig"})}),") \u2013 The configuration for the data catalog."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"data_clients"})," (",(0,r.jsx)(n.em,{children:"dict"})," *[*",(0,r.jsx)(n.em,{children:"str"})," ",(0,r.jsx)(n.em,{children:","})," ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.live.config.LiveDataClientConfig",children:(0,r.jsx)(n.em,{children:"LiveDataClientConfig"})})," \u200b*]*\u200b) \u2013 The data client configurations."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"download_datarequest_function-str-kwargs--none",children:"download_data(request_function: str, **kwargs) \u2192 None"}),"\n",(0,r.jsx)(n.p,{children:"Download data using the specified request function."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"request_function"})," (\u200b",(0,r.jsx)(n.em,{children:"str"}),"\u200b) \u2013 The name of the request function to use. Must be one of: \u201crequest_instrument\u201d, \u201crequest_data\u201d, \u201crequest_bars\u201d, \u201crequest_quote_ticks\u201d, or \u201crequest_trade_ticks\u201d."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"**kwargs"})," \u2013 Additional keyword arguments to pass to the request function."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"run--listbacktestresult",children:["run() \u2192 list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.results.BacktestResult",children:"BacktestResult"}),"]"]}),"\n",(0,r.jsx)(n.p,{children:"Run the backtest node which will synchronously execute the list of loaded backtest run configs."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The results of the backtest runs."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return type:"})," list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.results.BacktestResult",children:"BacktestResult"}),"]"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"classmethod-load_data_configconfig-backtestdataconfig-start-str--int--none--none-end-str--int--none--none--catalogdataresult",children:[(0,r.jsx)(n.em,{children:"classmethod"})," load_data_config(config: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.backtest.config.BacktestDataConfig",children:"BacktestDataConfig"}),", start: str | int | None = None, end: str | int | None = None) \u2192 CatalogDataResult"]}),"\n",(0,r.jsxs)(n.h4,{id:"classmethod-load_catalogconfig-backtestdataconfig--parquetdatacatalog",children:[(0,r.jsx)(n.em,{children:"classmethod"})," load_catalog(config: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.backtest.config.BacktestDataConfig",children:"BacktestDataConfig"}),") \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/persistence#nautilus_trader.persistence.catalog.parquet.ParquetDataCatalog",children:"ParquetDataCatalog"})]}),"\n",(0,r.jsxs)(n.h4,{id:"log_backtest_exceptione-exception-config-backtestrunconfig--none",children:["log_backtest_exception(e: Exception, config: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.backtest.config.BacktestRunConfig",children:"BacktestRunConfig"}),") \u2192 None"]}),"\n",(0,r.jsxs)(n.h3,{id:"get_instrument_idsconfig-backtestdataconfig--listinstrumentid",children:["get_instrument_ids(config: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.backtest.config.BacktestDataConfig",children:"BacktestDataConfig"}),") \u2192 list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:"InstrumentId"}),"]"]}),"\n",(0,r.jsxs)(n.h3,{id:"get_oms_typeconfig-backtestvenueconfig--omstype",children:["get_oms_type(config: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.backtest.config.BacktestVenueConfig",children:"BacktestVenueConfig"}),") \u2192 OmsType"]}),"\n",(0,r.jsxs)(n.h3,{id:"get_account_typeconfig-backtestvenueconfig--accounttype",children:["get_account_type(config: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.backtest.config.BacktestVenueConfig",children:"BacktestVenueConfig"}),") \u2192 AccountType"]}),"\n",(0,r.jsxs)(n.h3,{id:"get_book_typeconfig-backtestvenueconfig--booktype--none",children:["get_book_type(config: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.backtest.config.BacktestVenueConfig",children:"BacktestVenueConfig"}),") \u2192 BookType | None"]}),"\n",(0,r.jsxs)(n.h3,{id:"get_starting_balancesconfig-backtestvenueconfig--listmoney",children:["get_starting_balances(config: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.backtest.config.BacktestVenueConfig",children:"BacktestVenueConfig"}),") \u2192 list[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/objects#nautilus_trader.model.objects.Money",children:"Money"}),"]"]}),"\n",(0,r.jsxs)(n.h3,{id:"get_base_currencyconfig-backtestvenueconfig--currency--none",children:["get_base_currency(config: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.backtest.config.BacktestVenueConfig",children:"BacktestVenueConfig"}),") \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/objects#nautilus_trader.model.objects.Currency",children:"Currency"})," | None"]}),"\n",(0,r.jsxs)(n.h3,{id:"get_leveragesconfig-backtestvenueconfig--dictinstrumentid-decimal",children:["get_leverages(config: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.backtest.config.BacktestVenueConfig",children:"BacktestVenueConfig"}),") \u2192 dict[",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:"InstrumentId"}),", Decimal]"]}),"\n",(0,r.jsxs)(n.h3,{id:"get_fill_modelconfig-backtestvenueconfig--fillmodel--none",children:["get_fill_model(config: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.backtest.config.BacktestVenueConfig",children:"BacktestVenueConfig"}),") \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.FillModel",children:"FillModel"})," | None"]}),"\n",(0,r.jsx)(n.p,{children:"Create a FillModel from an ImportableFillModelConfig."}),"\n",(0,r.jsxs)(n.h3,{id:"get_latency_modelconfig-backtestvenueconfig--latencymodel--none",children:["get_latency_model(config: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.backtest.config.BacktestVenueConfig",children:"BacktestVenueConfig"}),") \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.LatencyModel",children:"LatencyModel"})," | None"]}),"\n",(0,r.jsx)(n.p,{children:"Create a LatencyModel from an ImportableLatencyModelConfig."}),"\n",(0,r.jsxs)(n.h3,{id:"get_fee_modelconfig-backtestvenueconfig--feemodel--none",children:["get_fee_model(config: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.backtest.config.BacktestVenueConfig",children:"BacktestVenueConfig"}),") \u2192 ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/backtest#nautilus_trader.backtest.models.FeeModel",children:"FeeModel"})," | None"]}),"\n",(0,r.jsx)(n.p,{children:"Create a FeeModel from an ImportableFeeModelConfig."}),"\n",(0,r.jsxs)(n.h3,{id:"get_margin_modelconfig-backtestvenueconfig",children:["get_margin_model(config: ",(0,r.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.backtest.config.BacktestVenueConfig",children:"BacktestVenueConfig"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"Create a MarginModel from the venue configuration."}),"\n",(0,r.jsxs)(n.h3,{id:"class-backtestresult",children:[(0,r.jsx)(n.em,{children:"class"})," BacktestResult"]}),"\n",(0,r.jsxs)(n.p,{children:["Bases: ",(0,r.jsx)(n.code,{children:"object"})]}),"\n",(0,r.jsx)(n.p,{children:"Represents the results of a single complete backtest run."}),"\n",(0,r.jsxs)(n.h4,{id:"traderid-str_",children:["trader",(0,r.jsx)(n.em,{children:"id"}),": str_"]}),"\n",(0,r.jsxs)(n.h4,{id:"machineid-str_",children:["machine",(0,r.jsx)(n.em,{children:"id"}),": str_"]}),"\n",(0,r.jsxs)(n.h4,{id:"runconfig_id-str--none_",children:["run",(0,r.jsx)(n.em,{children:"config_id"}),": str | None_"]}),"\n",(0,r.jsxs)(n.h4,{id:"instanceid-str_",children:["instance",(0,r.jsx)(n.em,{children:"id"}),": str_"]}),"\n",(0,r.jsxs)(n.h4,{id:"runid-str_",children:["run",(0,r.jsx)(n.em,{children:"id"}),": str_"]}),"\n",(0,r.jsxs)(n.h4,{id:"runstarted-int--none_",children:["run",(0,r.jsx)(n.em,{children:"started"}),": int | None_"]}),"\n",(0,r.jsxs)(n.h4,{id:"runfinished-int--none_",children:["run",(0,r.jsx)(n.em,{children:"finished"}),": int | None_"]}),"\n",(0,r.jsxs)(n.h4,{id:"backteststart-int--none_",children:["backtest",(0,r.jsx)(n.em,{children:"start"}),": int | None_"]}),"\n",(0,r.jsxs)(n.h4,{id:"backtestend-int--none_",children:["backtest",(0,r.jsx)(n.em,{children:"end"}),": int | None_"]}),"\n",(0,r.jsxs)(n.h4,{id:"elapsedtime-float_",children:["elapsed",(0,r.jsx)(n.em,{children:"time"}),": float_"]}),"\n",(0,r.jsxs)(n.h4,{id:"iterations--int",children:["iterations ",(0,r.jsx)(n.em,{children:": int"})]}),"\n",(0,r.jsxs)(n.h4,{id:"totalevents-int_",children:["total",(0,r.jsx)(n.em,{children:"events"}),": int_"]}),"\n",(0,r.jsxs)(n.h4,{id:"totalorders-int_",children:["total",(0,r.jsx)(n.em,{children:"orders"}),": int_"]}),"\n",(0,r.jsxs)(n.h4,{id:"totalpositions-int_",children:["total",(0,r.jsx)(n.em,{children:"positions"}),": int_"]}),"\n",(0,r.jsxs)(n.h4,{id:"statspnls-dictstr-dictstr-float_",children:["stats",(0,r.jsx)(n.em,{children:"pnls"}),": dict[str, dict[str, float]]_"]}),"\n",(0,r.jsxs)(n.h4,{id:"statsreturns-dictstr-float_",children:["stats",(0,r.jsx)(n.em,{children:"returns"}),": dict[str, float]_"]}),"\n",(0,r.jsx)(n.h3,{id:"ensure_plottingfunc",children:"ensure_plotting(func)"}),"\n",(0,r.jsx)(n.p,{children:"Decorate a function that require a plotting library."}),"\n",(0,r.jsx)(n.p,{children:"Ensures library is installed and providers a better error about how to install if not found."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},9087:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>d});var s=i(6363);const r={},t=s.createContext(r);function l(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);