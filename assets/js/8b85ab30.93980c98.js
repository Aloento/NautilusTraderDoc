"use strict";(globalThis.webpackChunknautilus_trader=globalThis.webpackChunknautilus_trader||[]).push([[8400],{1145:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>t,contentTitle:()=>a,default:()=>o,frontMatter:()=>d,metadata:()=>l,toc:()=>c});const l=JSON.parse('{"id":"api_reference/indicators","title":"Indicators","description":"The indicator subpackage provides a set of efficient indicators and analyzers.","source":"@site/docs/api_reference/indicators.md","sourceDirName":"api_reference","slug":"/api_reference/indicators","permalink":"/api_reference/indicators","draft":false,"unlisted":false,"editUrl":"https://github.com/Aloento/NautilusTraderDoc/tree/main/docs/api_reference/indicators.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Execution","permalink":"/api_reference/execution"},"next":{"title":"Live","permalink":"/api_reference/live"}}');var r=n(7259),s=n(9087);const d={},a="Indicators",t={},c=[{value:"<em>class</em> AdaptiveMovingAverage",id:"class-adaptivemovingaverage",level:3},{value:"alpha_diff",id:"alpha_diff",level:4},{value:"alpha_fast",id:"alpha_fast",level:4},{value:"alpha_slow",id:"alpha_slow",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void",level:4},{value:"period_alpha_fast",id:"period_alpha_fast",level:4},{value:"period_alpha_slow",id:"period_alpha_slow",level:4},{value:"period_er",id:"period_er",level:4},{value:"update_raw(self, double value) \u2192 void",id:"update_rawself-double-value--void",level:4},{value:"<em>class</em> ArcherMovingAveragesTrends",id:"class-archermovingaveragestrends",level:3},{value:"fast_period",id:"fast_period",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-1",level:4},{value:"long_run",id:"long_run",level:4},{value:"short_run",id:"short_run",level:4},{value:"signal_period",id:"signal_period",level:4},{value:"slow_period",id:"slow_period",level:4},{value:"update_raw(self, double close) \u2192 void",id:"update_rawself-double-close--void",level:4},{value:"<em>class</em> AroonOscillator",id:"class-aroonoscillator",level:3},{value:"aroon_down",id:"aroon_down",level:4},{value:"aroon_up",id:"aroon_up",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-2",level:4},{value:"period",id:"period",level:4},{value:"update_raw(self, double high, double low) \u2192 void",id:"update_rawself-double-high-double-low--void",level:4},{value:"value",id:"value",level:4},{value:"<em>class</em> AverageTrueRange",id:"class-averagetruerange",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-3",level:4},{value:"period",id:"period-1",level:4},{value:"update_raw(self, double high, double low, double close) \u2192 void",id:"update_rawself-double-high-double-low-double-close--void",level:4},{value:"value",id:"value-1",level:4},{value:"<em>class</em> Bias",id:"class-bias",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-4",level:4},{value:"period",id:"period-2",level:4},{value:"update_raw(self, double close) \u2192 void",id:"update_rawself-double-close--void-1",level:4},{value:"value",id:"value-2",level:4},{value:"<em>class</em> BollingerBands",id:"class-bollingerbands",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-5",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-1",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-1",level:4},{value:"k",id:"k",level:4},{value:"lower",id:"lower",level:4},{value:"middle",id:"middle",level:4},{value:"period",id:"period-3",level:4},{value:"update_raw(self, double high, double low, double close) \u2192 void",id:"update_rawself-double-high-double-low-double-close--void-1",level:4},{value:"upper",id:"upper",level:4},{value:"<em>class</em> CandleBodySize",id:"class-candlebodysize",level:3},{value:"BODY<em>NONE</em>= 0_",id:"bodynone-0_",level:4},{value:"BODY<em>SMALL</em>= 1_",id:"bodysmall-1_",level:4},{value:"BODY<em>MEDIUM</em>= 2_",id:"bodymedium-2_",level:4},{value:"BODY<em>LARGE</em>= 3_",id:"bodylarge-3_",level:4},{value:"BODY<em>TREND</em>= 4_",id:"bodytrend-4_",level:4},{value:"<em>class</em> CandleDirection",id:"class-candledirection",level:3},{value:"DIRECTION<em>BEAR</em>= -1_",id:"directionbear--1_",level:4},{value:"DIRECTION<em>NONE</em>= 0_",id:"directionnone-0_",level:4},{value:"DIRECTION<em>BULL</em>= 1_",id:"directionbull-1_",level:4},{value:"<em>class</em> CandleSize",id:"class-candlesize",level:3},{value:"SIZE<em>NONE</em>= 0_",id:"sizenone-0_",level:4},{value:"SIZE<em>VERY_SMALL</em>= 1_",id:"sizevery_small-1_",level:4},{value:"SIZE<em>SMALL</em>= 2_",id:"sizesmall-2_",level:4},{value:"SIZE<em>MEDIUM</em>= 3_",id:"sizemedium-3_",level:4},{value:"SIZE<em>LARGE</em>= 4_",id:"sizelarge-4_",level:4},{value:"SIZE<em>VERY_LARGE</em>= 5_",id:"sizevery_large-5_",level:4},{value:"SIZE<em>EXTREMELY_LARGE</em>= 6_",id:"sizeextremely_large-6_",level:4},{value:"<em>class</em> CandleWickSize",id:"class-candlewicksize",level:3},{value:"WICK<em>NONE</em>= 0_",id:"wicknone-0_",level:4},{value:"WICK<em>SMALL</em>= 1_",id:"wicksmall-1_",level:4},{value:"WICK<em>MEDIUM</em>= 2_",id:"wickmedium-2_",level:4},{value:"WICK<em>LARGE</em>= 3_",id:"wicklarge-3_",level:4},{value:"<em>class</em> ChandeMomentumOscillator",id:"class-chandemomentumoscillator",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-6",level:4},{value:"period",id:"period-4",level:4},{value:"update_raw(self, double close) \u2192 void",id:"update_rawself-double-close--void-2",level:4},{value:"value",id:"value-3",level:4},{value:"<em>class</em> CommodityChannelIndex",id:"class-commoditychannelindex",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-7",level:4},{value:"period",id:"period-5",level:4},{value:"scalar",id:"scalar",level:4},{value:"update_raw(self, double high, double low, double close) \u2192 void",id:"update_rawself-double-high-double-low-double-close--void-2",level:4},{value:"value",id:"value-4",level:4},{value:"<em>class</em> DirectionalMovement",id:"class-directionalmovement",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-8",level:4},{value:"neg",id:"neg",level:4},{value:"period",id:"period-6",level:4},{value:"pos",id:"pos",level:4},{value:"update_raw(self, double high, double low) \u2192 void",id:"update_rawself-double-high-double-low--void-1",level:4},{value:"value",id:"value-5",level:4},{value:"<em>class</em> DonchianChannel",id:"class-donchianchannel",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-9",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-2",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-2",level:4},{value:"lower",id:"lower-1",level:4},{value:"middle",id:"middle-1",level:4},{value:"period",id:"period-7",level:4},{value:"update_raw(self, double high, double low) \u2192 void",id:"update_rawself-double-high-double-low--void-2",level:4},{value:"upper",id:"upper-1",level:4},{value:"<em>class</em> DoubleExponentialMovingAverage",id:"class-doubleexponentialmovingaverage",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-10",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-3",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-3",level:4},{value:"update_raw(self, double value) \u2192 void",id:"update_rawself-double-value--void-1",level:4},{value:"<em>class</em> EfficiencyRatio",id:"class-efficiencyratio",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-11",level:4},{value:"period",id:"period-8",level:4},{value:"update_raw(self, double price) \u2192 void",id:"update_rawself-double-price--void",level:4},{value:"value",id:"value-6",level:4},{value:"<em>class</em> ExponentialMovingAverage",id:"class-exponentialmovingaverage",level:3},{value:"alpha",id:"alpha",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-12",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-4",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-4",level:4},{value:"update_raw(self, double value) \u2192 void",id:"update_rawself-double-value--void-2",level:4},{value:"<em>class</em> FuzzyCandle",id:"class-fuzzycandle",level:3},{value:"body_size",id:"body_size",level:4},{value:"direction",id:"direction",level:4},{value:"lower_wick_size",id:"lower_wick_size",level:4},{value:"size",id:"size",level:4},{value:"upper_wick_size",id:"upper_wick_size",level:4},{value:"<em>class</em> FuzzyCandlesticks",id:"class-fuzzycandlesticks",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-13",level:4},{value:"period",id:"period-9",level:4},{value:"update_raw(self, double open, double high, double low, double close) \u2192 void",id:"update_rawself-double-open-double-high-double-low-double-close--void",level:4},{value:"value",id:"value-7",level:4},{value:"vector",id:"vector",level:4},{value:"<em>class</em> HullMovingAverage",id:"class-hullmovingaverage",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-14",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-5",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-5",level:4},{value:"update_raw(self, double value) \u2192 void",id:"update_rawself-double-value--void-3",level:4},{value:"<em>class</em> Indicator",id:"class-indicator",level:3},{value:"WARNING",id:"warning",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-15",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-6",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-6",level:4},{value:"has_inputs",id:"has_inputs",level:4},{value:"initialized",id:"initialized",level:4},{value:"name",id:"name",level:4},{value:"reset(self) \u2192 void",id:"resetself--void",level:4},{value:"<em>class</em> KeltnerChannel",id:"class-keltnerchannel",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-16",level:4},{value:"k_multiplier",id:"k_multiplier",level:4},{value:"lower",id:"lower-2",level:4},{value:"middle",id:"middle-2",level:4},{value:"period",id:"period-10",level:4},{value:"update_raw(self, double high, double low, double close) \u2192 void",id:"update_rawself-double-high-double-low-double-close--void-3",level:4},{value:"upper",id:"upper-2",level:4},{value:"<em>class</em> KeltnerPosition",id:"class-keltnerposition",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-17",level:4},{value:"k_multiplier",id:"k_multiplier-1",level:4},{value:"period",id:"period-11",level:4},{value:"update_raw(self, double high, double low, double close) \u2192 void",id:"update_rawself-double-high-double-low-double-close--void-4",level:4},{value:"value",id:"value-8",level:4},{value:"<em>class</em> KlingerVolumeOscillator",id:"class-klingervolumeoscillator",level:3},{value:"fast_period",id:"fast_period-1",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-18",level:4},{value:"signal_period",id:"signal_period-1",level:4},{value:"slow_period",id:"slow_period-1",level:4},{value:"update_raw(self, double high, double low, double close, double volume) \u2192 void",id:"update_rawself-double-high-double-low-double-close-double-volume--void",level:4},{value:"value",id:"value-9",level:4},{value:"<em>class</em> LinearRegression",id:"class-linearregression",level:3},{value:"R2",id:"r2",level:4},{value:"cfo",id:"cfo",level:4},{value:"degree",id:"degree",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-19",level:4},{value:"intercept",id:"intercept",level:4},{value:"period",id:"period-12",level:4},{value:"slope",id:"slope",level:4},{value:"update_raw(self, double close) \u2192 void",id:"update_rawself-double-close--void-3",level:4},{value:"value",id:"value-10",level:4},{value:"<em>class</em> MovingAverage",id:"class-movingaverage",level:3},{value:"WARNING",id:"warning-1",level:4},{value:"count",id:"count",level:4},{value:"period",id:"period-13",level:4},{value:"price_type",id:"price_type",level:4},{value:"update_raw(self, double value) \u2192 void",id:"update_rawself-double-value--void-4",level:4},{value:"value",id:"value-11",level:4},{value:"<em>class</em> MovingAverageConvergenceDivergence",id:"class-movingaverageconvergencedivergence",level:3},{value:"fast_period",id:"fast_period-2",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-20",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-7",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-7",level:4},{value:"slow_period",id:"slow_period-2",level:4},{value:"update_raw(self, double close) \u2192 void",id:"update_rawself-double-close--void-4",level:4},{value:"value",id:"value-12",level:4},{value:"<em>class</em> MovingAverageFactory",id:"class-movingaveragefactory",level:3},{value:"<em>static</em> create(int period, MovingAverageType ma_type: MovingAverageType, **kwargs) \u2192 MovingAverage",id:"static-createint-period-movingaveragetype-ma_type-movingaveragetype-kwargs--movingaverage",level:4},{value:"<em>class</em> MovingAverageType",id:"class-movingaveragetype",level:3},{value:"SIMPLE <em>= 0</em>",id:"simple--0",level:4},{value:"EXPONENTIAL <em>= 1</em>",id:"exponential--1",level:4},{value:"DOUBLE<em>EXPONENTIAL</em>= 2_",id:"doubleexponential-2_",level:4},{value:"WILDER <em>= 3</em>",id:"wilder--3",level:4},{value:"HULL <em>= 4</em>",id:"hull--4",level:4},{value:"ADAPTIVE <em>= 5</em>",id:"adaptive--5",level:4},{value:"WEIGHTED <em>= 6</em>",id:"weighted--6",level:4},{value:"VARIABLE<em>INDEX_DYNAMIC</em>= 7_",id:"variableindex_dynamic-7_",level:4},{value:"<em>class</em> OnBalanceVolume",id:"class-onbalancevolume",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-21",level:4},{value:"period",id:"period-14",level:4},{value:"update_raw(self, double open, double close, double volume) \u2192 void",id:"update_rawself-double-open-double-close-double-volume--void",level:4},{value:"value",id:"value-13",level:4},{value:"<em>class</em> Pressure",id:"class-pressure",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-22",level:4},{value:"period",id:"period-15",level:4},{value:"update_raw(self, double high, double low, double close, double volume) \u2192 void",id:"update_rawself-double-high-double-low-double-close-double-volume--void-1",level:4},{value:"value",id:"value-14",level:4},{value:"value_cumulative",id:"value_cumulative",level:4},{value:"<em>class</em> PsychologicalLine",id:"class-psychologicalline",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-23",level:4},{value:"period",id:"period-16",level:4},{value:"update_raw(self, double close) \u2192 void",id:"update_rawself-double-close--void-5",level:4},{value:"value",id:"value-15",level:4},{value:"<em>class</em> RateOfChange",id:"class-rateofchange",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-24",level:4},{value:"period",id:"period-17",level:4},{value:"update_raw(self, double price) \u2192 void",id:"update_rawself-double-price--void-1",level:4},{value:"value",id:"value-16",level:4},{value:"<em>class</em> RelativeStrengthIndex",id:"class-relativestrengthindex",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-25",level:4},{value:"period",id:"period-18",level:4},{value:"update_raw(self, double value) \u2192 void",id:"update_rawself-double-value--void-5",level:4},{value:"value",id:"value-17",level:4},{value:"<em>class</em> RelativeVolatilityIndex",id:"class-relativevolatilityindex",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-26",level:4},{value:"period",id:"period-19",level:4},{value:"scalar",id:"scalar-1",level:4},{value:"update_raw(self, double close) \u2192 void",id:"update_rawself-double-close--void-6",level:4},{value:"value",id:"value-18",level:4},{value:"<em>class</em> SimpleMovingAverage",id:"class-simplemovingaverage",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-27",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-8",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-8",level:4},{value:"update_raw(self, double value) \u2192 void",id:"update_rawself-double-value--void-6",level:4},{value:"<em>class</em> SpreadAnalyzer",id:"class-spreadanalyzer",level:3},{value:"average",id:"average",level:4},{value:"capacity",id:"capacity",level:4},{value:"current",id:"current",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-9",level:4},{value:"instrument_id",id:"instrument_id",level:4},{value:"<em>class</em> Stochastics",id:"class-stochastics",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-28",level:4},{value:"period_d",id:"period_d",level:4},{value:"period_k",id:"period_k",level:4},{value:"update_raw(self, double high, double low, double close) \u2192 void",id:"update_rawself-double-high-double-low-double-close--void-5",level:4},{value:"value_d",id:"value_d",level:4},{value:"value_k",id:"value_k",level:4},{value:"<em>class</em> Swings",id:"class-swings",level:3},{value:"changed",id:"changed",level:4},{value:"direction",id:"direction-1",level:4},{value:"duration",id:"duration",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-29",level:4},{value:"high_datetime",id:"high_datetime",level:4},{value:"high_price",id:"high_price",level:4},{value:"length",id:"length",level:4},{value:"low_datetime",id:"low_datetime",level:4},{value:"low_price",id:"low_price",level:4},{value:"period",id:"period-20",level:4},{value:"since_high",id:"since_high",level:4},{value:"since_low",id:"since_low",level:4},{value:"update_raw(self, double high, double low, datetime timestamp) \u2192 void",id:"update_rawself-double-high-double-low-datetime-timestamp--void",level:4},{value:"<em>class</em> VariableIndexDynamicAverage",id:"class-variableindexdynamicaverage",level:3},{value:"alpha",id:"alpha-1",level:4},{value:"cmo_pct",id:"cmo_pct",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-30",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-10",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-9",level:4},{value:"update_raw(self, double value) \u2192 void",id:"update_rawself-double-value--void-7",level:4},{value:"<em>class</em> VerticalHorizontalFilter",id:"class-verticalhorizontalfilter",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-31",level:4},{value:"period",id:"period-21",level:4},{value:"update_raw(self, double close) \u2192 void",id:"update_rawself-double-close--void-7",level:4},{value:"value",id:"value-19",level:4},{value:"<em>class</em> VolatilityRatio",id:"class-volatilityratio",level:3},{value:"fast_period",id:"fast_period-3",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-32",level:4},{value:"slow_period",id:"slow_period-3",level:4},{value:"update_raw(self, double high, double low, double close) \u2192 void",id:"update_rawself-double-high-double-low-double-close--void-6",level:4},{value:"value",id:"value-20",level:4},{value:"<em>class</em> VolumeWeightedAveragePrice",id:"class-volumeweightedaverageprice",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-33",level:4},{value:"update_raw(self, double price, double volume, datetime timestamp) \u2192 void",id:"update_rawself-double-price-double-volume-datetime-timestamp--void",level:4},{value:"value",id:"value-21",level:4},{value:"<em>class</em> WeightedMovingAverage",id:"class-weightedmovingaverage",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-34",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-11",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-10",level:4},{value:"update_raw(self, double value) \u2192 void",id:"update_rawself-double-value--void-8",level:4},{value:"weights",id:"weights",level:4},{value:"<em>class</em> WilderMovingAverage",id:"class-wildermovingaverage",level:3},{value:"alpha",id:"alpha-2",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-35",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-12",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-11",level:4},{value:"update_raw(self, double value) \u2192 void",id:"update_rawself-double-value--void-9",level:4},{value:"<em>class</em> AdaptiveMovingAverage",id:"class-adaptivemovingaverage-1",level:3},{value:"alpha_diff",id:"alpha_diff-1",level:4},{value:"alpha_fast",id:"alpha_fast-1",level:4},{value:"alpha_slow",id:"alpha_slow-1",level:4},{value:"count",id:"count-1",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-36",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-13",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-12",level:4},{value:"has_inputs",id:"has_inputs-1",level:4},{value:"initialized",id:"initialized-1",level:4},{value:"name",id:"name-1",level:4},{value:"period",id:"period-22",level:4},{value:"period_alpha_fast",id:"period_alpha_fast-1",level:4},{value:"period_alpha_slow",id:"period_alpha_slow-1",level:4},{value:"period_er",id:"period_er-1",level:4},{value:"price_type",id:"price_type-1",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-1",level:4},{value:"update_raw(self, double value) \u2192 void",id:"update_rawself-double-value--void-10",level:4},{value:"value",id:"value-22",level:4},{value:"<em>class</em> DoubleExponentialMovingAverage",id:"class-doubleexponentialmovingaverage-1",level:3},{value:"count",id:"count-2",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-37",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-14",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-13",level:4},{value:"has_inputs",id:"has_inputs-2",level:4},{value:"initialized",id:"initialized-2",level:4},{value:"name",id:"name-2",level:4},{value:"period",id:"period-23",level:4},{value:"price_type",id:"price_type-2",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-2",level:4},{value:"update_raw(self, double value) \u2192 void",id:"update_rawself-double-value--void-11",level:4},{value:"value",id:"value-23",level:4},{value:"<em>class</em> ExponentialMovingAverage",id:"class-exponentialmovingaverage-1",level:3},{value:"alpha",id:"alpha-3",level:4},{value:"count",id:"count-3",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-38",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-15",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-14",level:4},{value:"has_inputs",id:"has_inputs-3",level:4},{value:"initialized",id:"initialized-3",level:4},{value:"name",id:"name-3",level:4},{value:"period",id:"period-24",level:4},{value:"price_type",id:"price_type-3",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-3",level:4},{value:"update_raw(self, double value) \u2192 void",id:"update_rawself-double-value--void-12",level:4},{value:"value",id:"value-24",level:4},{value:"<em>class</em> HullMovingAverage",id:"class-hullmovingaverage-1",level:3},{value:"count",id:"count-4",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-39",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-16",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-15",level:4},{value:"has_inputs",id:"has_inputs-4",level:4},{value:"initialized",id:"initialized-4",level:4},{value:"name",id:"name-4",level:4},{value:"period",id:"period-25",level:4},{value:"price_type",id:"price_type-4",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-4",level:4},{value:"update_raw(self, double value) \u2192 void",id:"update_rawself-double-value--void-13",level:4},{value:"value",id:"value-25",level:4},{value:"<em>class</em> MovingAverage",id:"class-movingaverage-1",level:3},{value:"WARNING",id:"warning-2",level:4},{value:"count",id:"count-5",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-40",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-17",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-16",level:4},{value:"has_inputs",id:"has_inputs-5",level:4},{value:"initialized",id:"initialized-5",level:4},{value:"name",id:"name-5",level:4},{value:"period",id:"period-26",level:4},{value:"price_type",id:"price_type-5",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-5",level:4},{value:"update_raw(self, double value) \u2192 void",id:"update_rawself-double-value--void-14",level:4},{value:"value",id:"value-26",level:4},{value:"<em>class</em> MovingAverageFactory",id:"class-movingaveragefactory-1",level:3},{value:"<em>static</em> create(int period, MovingAverageType ma_type: MovingAverageType, **kwargs) \u2192 MovingAverage",id:"static-createint-period-movingaveragetype-ma_type-movingaveragetype-kwargs--movingaverage-1",level:4},{value:"<em>class</em> MovingAverageType",id:"class-movingaveragetype-1",level:3},{value:"conjugate()",id:"conjugate",level:4},{value:"bit_length()",id:"bit_length",level:4},{value:"bit_count()",id:"bit_count",level:4},{value:"to_bytes(length=1, byteorder=&#39;big&#39;, , signed=False)",id:"to_byteslength1-byteorderbig--signedfalse",level:4},{value:"<em>classmethod</em> from_bytes(bytes, byteorder=&#39;big&#39;, , signed=False)",id:"classmethod-from_bytesbytes-byteorderbig--signedfalse",level:4},{value:"as_integer_ratio()",id:"as_integer_ratio",level:4},{value:"is_integer()",id:"is_integer",level:4},{value:"real",id:"real",level:4},{value:"imag",id:"imag",level:4},{value:"numerator",id:"numerator",level:4},{value:"denominator",id:"denominator",level:4},{value:"SIMPLE <em>= 0</em>",id:"simple--0-1",level:4},{value:"EXPONENTIAL <em>= 1</em>",id:"exponential--1-1",level:4},{value:"DOUBLE<em>EXPONENTIAL</em>= 2_",id:"doubleexponential-2_-1",level:4},{value:"WILDER <em>= 3</em>",id:"wilder--3-1",level:4},{value:"HULL <em>= 4</em>",id:"hull--4-1",level:4},{value:"ADAPTIVE <em>= 5</em>",id:"adaptive--5-1",level:4},{value:"WEIGHTED <em>= 6</em>",id:"weighted--6-1",level:4},{value:"VARIABLE<em>INDEX_DYNAMIC</em>= 7_",id:"variableindex_dynamic-7_-1",level:4},{value:"<em>class</em> SimpleMovingAverage",id:"class-simplemovingaverage-1",level:3},{value:"count",id:"count-6",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-41",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-18",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-17",level:4},{value:"has_inputs",id:"has_inputs-6",level:4},{value:"initialized",id:"initialized-6",level:4},{value:"name",id:"name-6",level:4},{value:"period",id:"period-27",level:4},{value:"price_type",id:"price_type-6",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-6",level:4},{value:"update_raw(self, double value) \u2192 void",id:"update_rawself-double-value--void-15",level:4},{value:"value",id:"value-27",level:4},{value:"<em>class</em> VariableIndexDynamicAverage",id:"class-variableindexdynamicaverage-1",level:3},{value:"alpha",id:"alpha-4",level:4},{value:"cmo_pct",id:"cmo_pct-1",level:4},{value:"count",id:"count-7",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-42",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-19",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-18",level:4},{value:"has_inputs",id:"has_inputs-7",level:4},{value:"initialized",id:"initialized-7",level:4},{value:"name",id:"name-7",level:4},{value:"period",id:"period-28",level:4},{value:"price_type",id:"price_type-7",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-7",level:4},{value:"update_raw(self, double value) \u2192 void",id:"update_rawself-double-value--void-16",level:4},{value:"value",id:"value-28",level:4},{value:"<em>class</em> WeightedMovingAverage",id:"class-weightedmovingaverage-1",level:3},{value:"count",id:"count-8",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-43",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-20",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-19",level:4},{value:"has_inputs",id:"has_inputs-8",level:4},{value:"initialized",id:"initialized-8",level:4},{value:"name",id:"name-8",level:4},{value:"period",id:"period-29",level:4},{value:"price_type",id:"price_type-8",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-8",level:4},{value:"update_raw(self, double value) \u2192 void",id:"update_rawself-double-value--void-17",level:4},{value:"value",id:"value-29",level:4},{value:"weights",id:"weights-1",level:4},{value:"<em>class</em> WilderMovingAverage",id:"class-wildermovingaverage-1",level:3},{value:"alpha",id:"alpha-5",level:4},{value:"count",id:"count-9",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-44",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-21",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-20",level:4},{value:"has_inputs",id:"has_inputs-9",level:4},{value:"initialized",id:"initialized-9",level:4},{value:"name",id:"name-9",level:4},{value:"period",id:"period-30",level:4},{value:"price_type",id:"price_type-9",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-9",level:4},{value:"update_raw(self, double value) \u2192 void",id:"update_rawself-double-value--void-18",level:4},{value:"value",id:"value-30",level:4},{value:"<em>class</em> FuzzyCandle",id:"class-fuzzycandle-1",level:3},{value:"body_size",id:"body_size-1",level:4},{value:"direction",id:"direction-2",level:4},{value:"lower_wick_size",id:"lower_wick_size-1",level:4},{value:"size",id:"size-1",level:4},{value:"upper_wick_size",id:"upper_wick_size-1",level:4},{value:"<em>class</em> FuzzyCandlesticks",id:"class-fuzzycandlesticks-1",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-45",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-22",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-21",level:4},{value:"has_inputs",id:"has_inputs-10",level:4},{value:"initialized",id:"initialized-10",level:4},{value:"name",id:"name-10",level:4},{value:"period",id:"period-31",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-10",level:4},{value:"update_raw(self, double open, double high, double low, double close) \u2192 void",id:"update_rawself-double-open-double-high-double-low-double-close--void-1",level:4},{value:"value",id:"value-31",level:4},{value:"vector",id:"vector-1",level:4},{value:"<em>class</em> ChandeMomentumOscillator",id:"class-chandemomentumoscillator-1",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-46",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-23",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-22",level:4},{value:"has_inputs",id:"has_inputs-11",level:4},{value:"initialized",id:"initialized-11",level:4},{value:"name",id:"name-11",level:4},{value:"period",id:"period-32",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-11",level:4},{value:"update_raw(self, double close) \u2192 void",id:"update_rawself-double-close--void-8",level:4},{value:"value",id:"value-32",level:4},{value:"<em>class</em> CommodityChannelIndex",id:"class-commoditychannelindex-1",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-47",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-24",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-23",level:4},{value:"has_inputs",id:"has_inputs-12",level:4},{value:"initialized",id:"initialized-12",level:4},{value:"name",id:"name-12",level:4},{value:"period",id:"period-33",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-12",level:4},{value:"scalar",id:"scalar-2",level:4},{value:"update_raw(self, double high, double low, double close) \u2192 void",id:"update_rawself-double-high-double-low-double-close--void-7",level:4},{value:"value",id:"value-33",level:4},{value:"<em>class</em> EfficiencyRatio",id:"class-efficiencyratio-1",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-48",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-25",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-24",level:4},{value:"has_inputs",id:"has_inputs-13",level:4},{value:"initialized",id:"initialized-13",level:4},{value:"name",id:"name-13",level:4},{value:"period",id:"period-34",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-13",level:4},{value:"update_raw(self, double price) \u2192 void",id:"update_rawself-double-price--void-2",level:4},{value:"value",id:"value-34",level:4},{value:"<em>class</em> PsychologicalLine",id:"class-psychologicalline-1",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-49",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-26",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-25",level:4},{value:"has_inputs",id:"has_inputs-14",level:4},{value:"initialized",id:"initialized-14",level:4},{value:"name",id:"name-14",level:4},{value:"period",id:"period-35",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-14",level:4},{value:"update_raw(self, double close) \u2192 void",id:"update_rawself-double-close--void-9",level:4},{value:"value",id:"value-35",level:4},{value:"<em>class</em> RateOfChange",id:"class-rateofchange-1",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-50",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-27",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-26",level:4},{value:"has_inputs",id:"has_inputs-15",level:4},{value:"initialized",id:"initialized-15",level:4},{value:"name",id:"name-15",level:4},{value:"period",id:"period-36",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-15",level:4},{value:"update_raw(self, double price) \u2192 void",id:"update_rawself-double-price--void-3",level:4},{value:"value",id:"value-36",level:4},{value:"<em>class</em> RelativeStrengthIndex",id:"class-relativestrengthindex-1",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-51",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-28",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-27",level:4},{value:"has_inputs",id:"has_inputs-16",level:4},{value:"initialized",id:"initialized-16",level:4},{value:"name",id:"name-16",level:4},{value:"period",id:"period-37",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-16",level:4},{value:"update_raw(self, double value) \u2192 void",id:"update_rawself-double-value--void-19",level:4},{value:"value",id:"value-37",level:4},{value:"<em>class</em> RelativeVolatilityIndex",id:"class-relativevolatilityindex-1",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-52",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-29",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-28",level:4},{value:"has_inputs",id:"has_inputs-17",level:4},{value:"initialized",id:"initialized-17",level:4},{value:"name",id:"name-17",level:4},{value:"period",id:"period-38",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-17",level:4},{value:"scalar",id:"scalar-3",level:4},{value:"update_raw(self, double close) \u2192 void",id:"update_rawself-double-close--void-10",level:4},{value:"value",id:"value-38",level:4},{value:"<em>class</em> Stochastics",id:"class-stochastics-1",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-53",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-30",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-29",level:4},{value:"has_inputs",id:"has_inputs-18",level:4},{value:"initialized",id:"initialized-18",level:4},{value:"name",id:"name-18",level:4},{value:"period_d",id:"period_d-1",level:4},{value:"period_k",id:"period_k-1",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-18",level:4},{value:"update_raw(self, double high, double low, double close) \u2192 void",id:"update_rawself-double-high-double-low-double-close--void-8",level:4},{value:"value_d",id:"value_d-1",level:4},{value:"value_k",id:"value_k-1",level:4},{value:"<em>class</em> SpreadAnalyzer",id:"class-spreadanalyzer-1",level:3},{value:"average",id:"average-1",level:4},{value:"capacity",id:"capacity-1",level:4},{value:"current",id:"current-1",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-54",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-31",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-30",level:4},{value:"has_inputs",id:"has_inputs-19",level:4},{value:"initialized",id:"initialized-19",level:4},{value:"instrument_id",id:"instrument_id-1",level:4},{value:"name",id:"name-19",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-19",level:4},{value:"<em>class</em> ArcherMovingAveragesTrends",id:"class-archermovingaveragestrends-1",level:3},{value:"fast_period",id:"fast_period-4",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-55",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-32",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-31",level:4},{value:"has_inputs",id:"has_inputs-20",level:4},{value:"initialized",id:"initialized-20",level:4},{value:"long_run",id:"long_run-1",level:4},{value:"name",id:"name-20",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-20",level:4},{value:"short_run",id:"short_run-1",level:4},{value:"signal_period",id:"signal_period-2",level:4},{value:"slow_period",id:"slow_period-4",level:4},{value:"update_raw(self, double close) \u2192 void",id:"update_rawself-double-close--void-11",level:4},{value:"<em>class</em> AroonOscillator",id:"class-aroonoscillator-1",level:3},{value:"aroon_down",id:"aroon_down-1",level:4},{value:"aroon_up",id:"aroon_up-1",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-56",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-33",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-32",level:4},{value:"has_inputs",id:"has_inputs-21",level:4},{value:"initialized",id:"initialized-21",level:4},{value:"name",id:"name-21",level:4},{value:"period",id:"period-39",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-21",level:4},{value:"update_raw(self, double high, double low) \u2192 void",id:"update_rawself-double-high-double-low--void-3",level:4},{value:"value",id:"value-39",level:4},{value:"<em>class</em> Bias",id:"class-bias-1",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-57",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-34",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-33",level:4},{value:"has_inputs",id:"has_inputs-22",level:4},{value:"initialized",id:"initialized-22",level:4},{value:"name",id:"name-22",level:4},{value:"period",id:"period-40",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-22",level:4},{value:"update_raw(self, double close) \u2192 void",id:"update_rawself-double-close--void-12",level:4},{value:"value",id:"value-40",level:4},{value:"<em>class</em> DirectionalMovement",id:"class-directionalmovement-1",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-58",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-35",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-34",level:4},{value:"has_inputs",id:"has_inputs-23",level:4},{value:"initialized",id:"initialized-23",level:4},{value:"name",id:"name-23",level:4},{value:"neg",id:"neg-1",level:4},{value:"period",id:"period-41",level:4},{value:"pos",id:"pos-1",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-23",level:4},{value:"update_raw(self, double high, double low) \u2192 void",id:"update_rawself-double-high-double-low--void-4",level:4},{value:"value",id:"value-41",level:4},{value:"<em>class</em> LinearRegression",id:"class-linearregression-1",level:3},{value:"R2",id:"r2-1",level:4},{value:"cfo",id:"cfo-1",level:4},{value:"degree",id:"degree-1",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-59",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-36",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-35",level:4},{value:"has_inputs",id:"has_inputs-24",level:4},{value:"initialized",id:"initialized-24",level:4},{value:"intercept",id:"intercept-1",level:4},{value:"name",id:"name-24",level:4},{value:"period",id:"period-42",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-24",level:4},{value:"slope",id:"slope-1",level:4},{value:"update_raw(self, double close) \u2192 void",id:"update_rawself-double-close--void-13",level:4},{value:"value",id:"value-42",level:4},{value:"<em>class</em> MovingAverageConvergenceDivergence",id:"class-movingaverageconvergencedivergence-1",level:3},{value:"fast_period",id:"fast_period-5",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-60",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-37",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-36",level:4},{value:"has_inputs",id:"has_inputs-25",level:4},{value:"initialized",id:"initialized-25",level:4},{value:"name",id:"name-25",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-25",level:4},{value:"slow_period",id:"slow_period-5",level:4},{value:"update_raw(self, double close) \u2192 void",id:"update_rawself-double-close--void-14",level:4},{value:"value",id:"value-43",level:4},{value:"<em>class</em> Swings",id:"class-swings-1",level:3},{value:"changed",id:"changed-1",level:4},{value:"direction",id:"direction-3",level:4},{value:"duration",id:"duration-1",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-61",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-38",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-37",level:4},{value:"has_inputs",id:"has_inputs-26",level:4},{value:"high_datetime",id:"high_datetime-1",level:4},{value:"high_price",id:"high_price-1",level:4},{value:"initialized",id:"initialized-26",level:4},{value:"length",id:"length-1",level:4},{value:"low_datetime",id:"low_datetime-1",level:4},{value:"low_price",id:"low_price-1",level:4},{value:"name",id:"name-26",level:4},{value:"period",id:"period-43",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-26",level:4},{value:"since_high",id:"since_high-1",level:4},{value:"since_low",id:"since_low-1",level:4},{value:"update_raw(self, double high, double low, datetime timestamp) \u2192 void",id:"update_rawself-double-high-double-low-datetime-timestamp--void-1",level:4},{value:"<em>class</em> AverageTrueRange",id:"class-averagetruerange-1",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-62",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-39",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-38",level:4},{value:"has_inputs",id:"has_inputs-27",level:4},{value:"initialized",id:"initialized-27",level:4},{value:"name",id:"name-27",level:4},{value:"period",id:"period-44",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-27",level:4},{value:"update_raw(self, double high, double low, double close) \u2192 void",id:"update_rawself-double-high-double-low-double-close--void-9",level:4},{value:"value",id:"value-44",level:4},{value:"<em>class</em> BollingerBands",id:"class-bollingerbands-1",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-63",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-40",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-39",level:4},{value:"has_inputs",id:"has_inputs-28",level:4},{value:"initialized",id:"initialized-28",level:4},{value:"k",id:"k-1",level:4},{value:"lower",id:"lower-3",level:4},{value:"middle",id:"middle-3",level:4},{value:"name",id:"name-28",level:4},{value:"period",id:"period-45",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-28",level:4},{value:"update_raw(self, double high, double low, double close) \u2192 void",id:"update_rawself-double-high-double-low-double-close--void-10",level:4},{value:"upper",id:"upper-3",level:4},{value:"<em>class</em> DonchianChannel",id:"class-donchianchannel-1",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-64",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-41",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-40",level:4},{value:"has_inputs",id:"has_inputs-29",level:4},{value:"initialized",id:"initialized-29",level:4},{value:"lower",id:"lower-4",level:4},{value:"middle",id:"middle-4",level:4},{value:"name",id:"name-29",level:4},{value:"period",id:"period-46",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-29",level:4},{value:"update_raw(self, double high, double low) \u2192 void",id:"update_rawself-double-high-double-low--void-5",level:4},{value:"upper",id:"upper-4",level:4},{value:"<em>class</em> KeltnerChannel",id:"class-keltnerchannel-1",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-65",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-42",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-41",level:4},{value:"has_inputs",id:"has_inputs-30",level:4},{value:"initialized",id:"initialized-30",level:4},{value:"k_multiplier",id:"k_multiplier-2",level:4},{value:"lower",id:"lower-5",level:4},{value:"middle",id:"middle-5",level:4},{value:"name",id:"name-30",level:4},{value:"period",id:"period-47",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-30",level:4},{value:"update_raw(self, double high, double low, double close) \u2192 void",id:"update_rawself-double-high-double-low-double-close--void-11",level:4},{value:"upper",id:"upper-5",level:4},{value:"<em>class</em> KeltnerPosition",id:"class-keltnerposition-1",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-66",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-43",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-42",level:4},{value:"has_inputs",id:"has_inputs-31",level:4},{value:"initialized",id:"initialized-31",level:4},{value:"k_multiplier",id:"k_multiplier-3",level:4},{value:"name",id:"name-31",level:4},{value:"period",id:"period-48",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-31",level:4},{value:"update_raw(self, double high, double low, double close) \u2192 void",id:"update_rawself-double-high-double-low-double-close--void-12",level:4},{value:"value",id:"value-45",level:4},{value:"<em>class</em> VerticalHorizontalFilter",id:"class-verticalhorizontalfilter-1",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-67",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-44",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-43",level:4},{value:"has_inputs",id:"has_inputs-32",level:4},{value:"initialized",id:"initialized-32",level:4},{value:"name",id:"name-32",level:4},{value:"period",id:"period-49",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-32",level:4},{value:"update_raw(self, double close) \u2192 void",id:"update_rawself-double-close--void-15",level:4},{value:"value",id:"value-46",level:4},{value:"<em>class</em> VolatilityRatio",id:"class-volatilityratio-1",level:3},{value:"fast_period",id:"fast_period-6",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-68",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-45",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-44",level:4},{value:"has_inputs",id:"has_inputs-33",level:4},{value:"initialized",id:"initialized-33",level:4},{value:"name",id:"name-33",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-33",level:4},{value:"slow_period",id:"slow_period-6",level:4},{value:"update_raw(self, double high, double low, double close) \u2192 void",id:"update_rawself-double-high-double-low-double-close--void-13",level:4},{value:"value",id:"value-47",level:4},{value:"<em>class</em> KlingerVolumeOscillator",id:"class-klingervolumeoscillator-1",level:3},{value:"fast_period",id:"fast_period-7",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-69",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-46",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-45",level:4},{value:"has_inputs",id:"has_inputs-34",level:4},{value:"initialized",id:"initialized-34",level:4},{value:"name",id:"name-34",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-34",level:4},{value:"signal_period",id:"signal_period-3",level:4},{value:"slow_period",id:"slow_period-7",level:4},{value:"update_raw(self, double high, double low, double close, double volume) \u2192 void",id:"update_rawself-double-high-double-low-double-close-double-volume--void-2",level:4},{value:"value",id:"value-48",level:4},{value:"<em>class</em> OnBalanceVolume",id:"class-onbalancevolume-1",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-70",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-47",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-46",level:4},{value:"has_inputs",id:"has_inputs-35",level:4},{value:"initialized",id:"initialized-35",level:4},{value:"name",id:"name-35",level:4},{value:"period",id:"period-50",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-35",level:4},{value:"update_raw(self, double open, double close, double volume) \u2192 void",id:"update_rawself-double-open-double-close-double-volume--void-1",level:4},{value:"value",id:"value-49",level:4},{value:"<em>class</em> Pressure",id:"class-pressure-1",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-71",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-48",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-47",level:4},{value:"has_inputs",id:"has_inputs-36",level:4},{value:"initialized",id:"initialized-36",level:4},{value:"name",id:"name-36",level:4},{value:"period",id:"period-51",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-36",level:4},{value:"update_raw(self, double high, double low, double close, double volume) \u2192 void",id:"update_rawself-double-high-double-low-double-close-double-volume--void-3",level:4},{value:"value",id:"value-50",level:4},{value:"value_cumulative",id:"value_cumulative-1",level:4},{value:"<em>class</em> VolumeWeightedAveragePrice",id:"class-volumeweightedaverageprice-1",level:3},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-72",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-49",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-48",level:4},{value:"has_inputs",id:"has_inputs-37",level:4},{value:"initialized",id:"initialized-37",level:4},{value:"name",id:"name-37",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-37",level:4},{value:"update_raw(self, double price, double volume, datetime timestamp) \u2192 void",id:"update_rawself-double-price-double-volume-datetime-timestamp--void-1",level:4},{value:"value",id:"value-51",level:4}];function h(e){const i={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"indicators",children:"Indicators"})}),"\n",(0,r.jsx)(i.p,{children:"The indicator subpackage provides a set of efficient indicators and analyzers."}),"\n",(0,r.jsx)(i.p,{children:"These are classes which can be used for signal discovery and filtering. The idea is to use the provided indicators as is, or as inspiration for a trader to implement their own proprietary indicator algorithms with the platform."}),"\n",(0,r.jsxs)(i.h3,{id:"class-adaptivemovingaverage",children:[(0,r.jsx)(i.em,{children:"class"})," AdaptiveMovingAverage"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.averages.MovingAverage",children:(0,r.jsx)(i.code,{children:"MovingAverage"})})]}),"\n",(0,r.jsx)(i.p,{children:"AdaptiveMovingAverage(int period_er, int period_alpha_fast, int period_alpha_slow, PriceType price_type=PriceType.LAST)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates an adaptive moving average (AMA) across a rolling window. Developed by Perry Kaufman, the AMA is a moving average designed to account for market noise and volatility. The AMA will closely follow prices when the price swings are relatively small and the noise is low. The AMA will increase lag when the price swings increase."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period_er"})," (\u200b_int_\u200b) \u2013 The period for the internal EfficiencyRatio indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period_alpha_fast"})," (\u200b_int_\u200b) \u2013 The period for the fast smoothing constant (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period_alpha_slow"})," (\u200b_int_\u200b) \u2013 The period for the slow smoothing constant (> 0 < alpha_fast)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"price_type"})," (\u200b_PriceType_\u200b) \u2013 The specified price type for extracting values from quotes."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"alpha_diff",children:"alpha_diff"}),"\n",(0,r.jsx)(i.p,{children:"The alpha difference value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"alpha_fast",children:"alpha_fast"}),"\n",(0,r.jsx)(i.p,{children:"The alpha fast value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"alpha_slow",children:"alpha_slow"}),"\n",(0,r.jsx)(i.p,{children:"The alpha slow value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given quote tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(i.em,{children:"QuoteTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given trade tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(i.em,{children:"TradeTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period_alpha_fast",children:"period_alpha_fast"}),"\n",(0,r.jsx)(i.p,{children:"The period of the fast smoothing constant."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period_alpha_slow",children:"period_alpha_slow"}),"\n",(0,r.jsx)(i.p,{children:"The period of the slow smoothing constant."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period_er",children:"period_er"}),"\n",(0,r.jsx)(i.p,{children:"The period of the internal EfficiencyRatio indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-value--void",children:"update_raw(self, double value) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"value"})," (\u200b_double_\u200b) \u2013 The update value."]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-archermovingaveragestrends",children:[(0,r.jsx)(i.em,{children:"class"})," ArcherMovingAveragesTrends"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"ArcherMovingAveragesTrends(int fast_period, int slow_period, int signal_period, MovingAverageType ma_type=MovingAverageType.EXPONENTIAL)"}),"\n",(0,r.jsx)(i.p,{children:"Archer Moving Averages Trends indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"fast_period"})," (\u200b_int_\u200b) \u2013 The period for the fast moving average (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"slow_period"})," (\u200b_int_\u200b) \u2013 The period for the slow moving average (> 0 & > fast_sma)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"signal_period"})," (\u200b_int_\u200b) \u2013 The period for lookback price array (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the calculations."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"fast_period",children:"fast_period"}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-1",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"long_run",children:"long_run"}),"\n",(0,r.jsx)(i.h4,{id:"short_run",children:"short_run"}),"\n",(0,r.jsx)(i.h4,{id:"signal_period",children:"signal_period"}),"\n",(0,r.jsx)(i.h4,{id:"slow_period",children:"slow_period"}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-close--void",children:"update_raw(self, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given close price value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-aroonoscillator",children:[(0,r.jsx)(i.em,{children:"class"})," AroonOscillator"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"AroonOscillator(int period)"}),"\n",(0,r.jsx)(i.p,{children:"The Aroon (AR) indicator developed by Tushar Chande attempts to determine whether an instrument is trending, and how strong the trend is. AroonUp and AroonDown lines make up the indicator with their formulas below."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"aroon_down",children:"aroon_down"}),"\n",(0,r.jsx)(i.p,{children:"The current aroon down value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"aroon_up",children:"aroon_up"}),"\n",(0,r.jsx)(i.p,{children:"The current aroon up value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-2",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period",children:"period"}),"\n",(0,r.jsx)(i.p,{children:"The window period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-high-double-low--void",children:"update_raw(self, double high, double low) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"high"})," (\u200b_double_\u200b) \u2013 The high price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"low"})," (\u200b_double_\u200b) \u2013 The low price."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value",children:"value"}),"\n",(0,r.jsx)(i.p,{children:"The current value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-averagetruerange",children:[(0,r.jsx)(i.em,{children:"class"})," AverageTrueRange"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"AverageTrueRange(int period, MovingAverageType ma_type=MovingAverageType.SIMPLE, bool use_previous=True, double value_floor=0)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates the average true range across a rolling window. Different moving average types can be selected for the inner calculation."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the indicator (cannot be None)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"use_previous"})," (\u200b_bool_\u200b) \u2013 The boolean flag indicating whether previous price values should be used. (note: only applicable for update(). update_mid() will need to use previous price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"value_floor"})," (\u200b_double_\u200b) \u2013 The floor (minimum) output value for the indicator (>= 0)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-3",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-1",children:"period"}),"\n",(0,r.jsx)(i.p,{children:"The window period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-high-double-low-double-close--void",children:"update_raw(self, double high, double low, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"high"})," (\u200b_double_\u200b) \u2013 The high price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"low"})," (\u200b_double_\u200b) \u2013 The low price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-1",children:"value"}),"\n",(0,r.jsx)(i.p,{children:"The current value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-bias",children:[(0,r.jsx)(i.em,{children:"class"})," Bias"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"Bias(int period, MovingAverageType ma_type=MovingAverageType.SIMPLE)"}),"\n",(0,r.jsx)(i.p,{children:"Rate of change between the source and a moving average."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the indicator (cannot be None)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-4",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-2",children:"period"}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-close--void-1",children:"update_raw(self, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-2",children:"value"}),"\n",(0,r.jsxs)(i.h3,{id:"class-bollingerbands",children:[(0,r.jsx)(i.em,{children:"class"})," BollingerBands"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"BollingerBands(int period, double k, MovingAverageType ma_type=MovingAverageType.SIMPLE)"}),"\n",(0,r.jsx)(i.p,{children:"A Bollinger Band\xae is a technical analysis tool defined by a set of trend lines plotted two standard deviations (positively and negatively) away from a simple moving average (SMA) of an instruments price, which can be adjusted to user preferences."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"k"})," (\u200b_double_\u200b) \u2013 The standard deviation multiple for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the indicator."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not positive (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If k is not positive (> 0)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-5",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-1",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(i.em,{children:"TradeTick"})}),") \u2013 The tick for the update."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-1",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(i.em,{children:"TradeTick"})}),") \u2013 The tick for the update."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"k",children:"k"}),"\n",(0,r.jsx)(i.p,{children:"The standard deviation multiple."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"lower",children:"lower"}),"\n",(0,r.jsx)(i.p,{children:"The current value of the lower band."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"middle",children:"middle"}),"\n",(0,r.jsx)(i.p,{children:"The current value of the middle band."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-3",children:"period"}),"\n",(0,r.jsx)(i.p,{children:"The period for the moving average."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-high-double-low-double-close--void-1",children:"update_raw(self, double high, double low, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given prices."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"high"})," (\u200b_double_\u200b) \u2013 The high price for calculations."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"low"})," (\u200b_double_\u200b) \u2013 The low price for calculations."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The closing price for calculations"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"upper",children:"upper"}),"\n",(0,r.jsx)(i.p,{children:"The current value of the upper band."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-candlebodysize",children:[(0,r.jsx)(i.em,{children:"class"})," CandleBodySize"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.code,{children:"IntFlag"})]}),"\n",(0,r.jsxs)(i.h4,{id:"bodynone-0_",children:["BODY",(0,r.jsx)(i.em,{children:"NONE"}),"= 0_"]}),"\n",(0,r.jsxs)(i.h4,{id:"bodysmall-1_",children:["BODY",(0,r.jsx)(i.em,{children:"SMALL"}),"= 1_"]}),"\n",(0,r.jsxs)(i.h4,{id:"bodymedium-2_",children:["BODY",(0,r.jsx)(i.em,{children:"MEDIUM"}),"= 2_"]}),"\n",(0,r.jsxs)(i.h4,{id:"bodylarge-3_",children:["BODY",(0,r.jsx)(i.em,{children:"LARGE"}),"= 3_"]}),"\n",(0,r.jsxs)(i.h4,{id:"bodytrend-4_",children:["BODY",(0,r.jsx)(i.em,{children:"TREND"}),"= 4_"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-candledirection",children:[(0,r.jsx)(i.em,{children:"class"})," CandleDirection"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.code,{children:"IntFlag"})]}),"\n",(0,r.jsxs)(i.h4,{id:"directionbear--1_",children:["DIRECTION",(0,r.jsx)(i.em,{children:"BEAR"}),"= -1_"]}),"\n",(0,r.jsxs)(i.h4,{id:"directionnone-0_",children:["DIRECTION",(0,r.jsx)(i.em,{children:"NONE"}),"= 0_"]}),"\n",(0,r.jsxs)(i.h4,{id:"directionbull-1_",children:["DIRECTION",(0,r.jsx)(i.em,{children:"BULL"}),"= 1_"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-candlesize",children:[(0,r.jsx)(i.em,{children:"class"})," CandleSize"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.code,{children:"IntFlag"})]}),"\n",(0,r.jsxs)(i.h4,{id:"sizenone-0_",children:["SIZE",(0,r.jsx)(i.em,{children:"NONE"}),"= 0_"]}),"\n",(0,r.jsxs)(i.h4,{id:"sizevery_small-1_",children:["SIZE",(0,r.jsx)(i.em,{children:"VERY_SMALL"}),"= 1_"]}),"\n",(0,r.jsxs)(i.h4,{id:"sizesmall-2_",children:["SIZE",(0,r.jsx)(i.em,{children:"SMALL"}),"= 2_"]}),"\n",(0,r.jsxs)(i.h4,{id:"sizemedium-3_",children:["SIZE",(0,r.jsx)(i.em,{children:"MEDIUM"}),"= 3_"]}),"\n",(0,r.jsxs)(i.h4,{id:"sizelarge-4_",children:["SIZE",(0,r.jsx)(i.em,{children:"LARGE"}),"= 4_"]}),"\n",(0,r.jsxs)(i.h4,{id:"sizevery_large-5_",children:["SIZE",(0,r.jsx)(i.em,{children:"VERY_LARGE"}),"= 5_"]}),"\n",(0,r.jsxs)(i.h4,{id:"sizeextremely_large-6_",children:["SIZE",(0,r.jsx)(i.em,{children:"EXTREMELY_LARGE"}),"= 6_"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-candlewicksize",children:[(0,r.jsx)(i.em,{children:"class"})," CandleWickSize"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.code,{children:"IntFlag"})]}),"\n",(0,r.jsxs)(i.h4,{id:"wicknone-0_",children:["WICK",(0,r.jsx)(i.em,{children:"NONE"}),"= 0_"]}),"\n",(0,r.jsxs)(i.h4,{id:"wicksmall-1_",children:["WICK",(0,r.jsx)(i.em,{children:"SMALL"}),"= 1_"]}),"\n",(0,r.jsxs)(i.h4,{id:"wickmedium-2_",children:["WICK",(0,r.jsx)(i.em,{children:"MEDIUM"}),"= 2_"]}),"\n",(0,r.jsxs)(i.h4,{id:"wicklarge-3_",children:["WICK",(0,r.jsx)(i.em,{children:"LARGE"}),"= 3_"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-chandemomentumoscillator",children:[(0,r.jsx)(i.em,{children:"class"})," ChandeMomentumOscillator"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"ChandeMomentumOscillator(int period, ma_type=None)"}),"\n",(0,r.jsx)(i.p,{children:"Attempts to capture the momentum of an asset with overbought at 50 and oversold at -50."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (\u200b_int_\u200b) \u2013 The moving average type for average gain/loss."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The rolling window period for the indicator."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-6",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-4",children:"period"}),"\n",(0,r.jsx)(i.p,{children:"The window period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-close--void-2",children:"update_raw(self, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"value"})," (\u200b_double_\u200b) \u2013 The update value."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-3",children:"value"}),"\n",(0,r.jsx)(i.p,{children:"The current value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-commoditychannelindex",children:[(0,r.jsx)(i.em,{children:"class"})," CommodityChannelIndex"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"CommodityChannelIndex(int period, double scalar=0.015, ma_type=None)"}),"\n",(0,r.jsx)(i.p,{children:"Commodity Channel Index is a momentum oscillator used to primarily identify overbought and oversold levels relative to a mean."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"scalar"})," (\u200b_double_\u200b) \u2013 A positive float to scale the bands"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for prices."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-7",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-5",children:"period"}),"\n",(0,r.jsx)(i.h4,{id:"scalar",children:"scalar"}),"\n",(0,r.jsx)(i.p,{children:"The positive float to scale the bands."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-high-double-low-double-close--void-2",children:"update_raw(self, double high, double low, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"high"})," (\u200b_double_\u200b) \u2013 The high price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"low"})," (\u200b_double_\u200b) \u2013 The low price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-4",children:"value"}),"\n",(0,r.jsx)(i.p,{children:"The current value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-directionalmovement",children:[(0,r.jsx)(i.em,{children:"class"})," DirectionalMovement"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"DirectionalMovement(int period, MovingAverageType ma_type=MovingAverageType.EXPONENTIAL)"}),"\n",(0,r.jsx)(i.p,{children:"Two oscillators that capture positive and negative trend movement."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the indicator (cannot be None)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-8",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"neg",children:"neg"}),"\n",(0,r.jsx)(i.h4,{id:"period-6",children:"period"}),"\n",(0,r.jsx)(i.h4,{id:"pos",children:"pos"}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-high-double-low--void-1",children:"update_raw(self, double high, double low) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"high"})," (\u200b_double_\u200b) \u2013 The high price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"low"})," (\u200b_double_\u200b) \u2013 The low price."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-5",children:"value"}),"\n",(0,r.jsxs)(i.h3,{id:"class-donchianchannel",children:[(0,r.jsx)(i.em,{children:"class"})," DonchianChannel"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"DonchianChannel(int period)"}),"\n",(0,r.jsx)(i.p,{children:"Donchian Channels are three lines generated by moving average calculations that comprise an indicator formed by upper and lower bands around a mid-range or median band. The upper band marks the highest price of a instrument_id over N periods while the lower band marks the lowest price of a instrument_id over N periods. The area between the upper and lower bands represents the Donchian Channel."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not positive (> 0)."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-9",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-2",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given ticks high and low prices."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(i.em,{children:"TradeTick"})}),") \u2013 The tick for the update."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-2",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given ticks price."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(i.em,{children:"TradeTick"})}),") \u2013 The tick for the update."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"lower-1",children:"lower"}),"\n",(0,r.jsx)(i.h4,{id:"middle-1",children:"middle"}),"\n",(0,r.jsx)(i.h4,{id:"period-7",children:"period"}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-high-double-low--void-2",children:"update_raw(self, double high, double low) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given prices."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"high"})," (\u200b_double_\u200b) \u2013 The price for the upper channel."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"low"})," (\u200b_double_\u200b) \u2013 The price for the lower channel."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"upper-1",children:"upper"}),"\n",(0,r.jsxs)(i.h3,{id:"class-doubleexponentialmovingaverage",children:[(0,r.jsx)(i.em,{children:"class"})," DoubleExponentialMovingAverage"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.averages.MovingAverage",children:(0,r.jsx)(i.code,{children:"MovingAverage"})})]}),"\n",(0,r.jsx)(i.p,{children:"DoubleExponentialMovingAverage(int period, PriceType price_type=PriceType.LAST)"}),"\n",(0,r.jsx)(i.p,{children:"The Double Exponential Moving Average attempts to a smoother average with less lag than the normal Exponential Moving Average (EMA)."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"price_type"})," (\u200b_PriceType_\u200b) \u2013 The specified price type for extracting values from quotes."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not positive (> 0)."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-10",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-3",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given quote tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(i.em,{children:"QuoteTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-3",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given trade tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(i.em,{children:"TradeTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-value--void-1",children:"update_raw(self, double value) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"value"})," (\u200b_double_\u200b) \u2013 The update value."]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-efficiencyratio",children:[(0,r.jsx)(i.em,{children:"class"})," EfficiencyRatio"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"EfficiencyRatio(int period)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates the efficiency ratio across a rolling window. The Kaufman Efficiency measures the ratio of the relative market speed in relation to the volatility, this could be thought of as a proxy for noise."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (>= 2)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not >= 2."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-11",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-8",children:"period"}),"\n",(0,r.jsx)(i.p,{children:"The window period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-price--void",children:"update_raw(self, double price) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given price."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"price"})," (\u200b_double_\u200b) \u2013 The update price."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-6",children:"value"}),"\n",(0,r.jsx)(i.p,{children:"The current value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-exponentialmovingaverage",children:[(0,r.jsx)(i.em,{children:"class"})," ExponentialMovingAverage"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.averages.MovingAverage",children:(0,r.jsx)(i.code,{children:"MovingAverage"})})]}),"\n",(0,r.jsx)(i.p,{children:"ExponentialMovingAverage(int period, PriceType price_type=PriceType.LAST)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates an exponential moving average across a rolling window."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"price_type"})," (\u200b_PriceType_\u200b) \u2013 The specified price type for extracting values from quotes."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not positive (> 0)."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"alpha",children:"alpha"}),"\n",(0,r.jsx)(i.p,{children:"The moving average alpha value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-12",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-4",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given quote tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(i.em,{children:"QuoteTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-4",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given trade tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(i.em,{children:"TradeTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-value--void-2",children:"update_raw(self, double value) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"value"})," (\u200b_double_\u200b) \u2013 The update value."]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-fuzzycandle",children:[(0,r.jsx)(i.em,{children:"class"})," FuzzyCandle"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.code,{children:"object"})]}),"\n",(0,r.jsx)(i.p,{children:"FuzzyCandle(CandleDirection direction, CandleSize size, CandleBodySize body_size, CandleWickSize upper_wick_size, CandleWickSize lower_wick_size)"}),"\n",(0,r.jsx)(i.p,{children:"Represents a fuzzy candle."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"direction"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.CandleDirection",children:(0,r.jsx)(i.em,{children:"CandleDirection"})}),") \u2013 The candle direction."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"size"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.CandleSize",children:(0,r.jsx)(i.em,{children:"CandleSize"})}),") \u2013 The candle fuzzy size."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"body_size"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.CandleBodySize",children:(0,r.jsx)(i.em,{children:"CandleBodySize"})}),") \u2013 The candle fuzzy body size."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"upper_wick_size"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.CandleWickSize",children:(0,r.jsx)(i.em,{children:"CandleWickSize"})}),") \u2013 The candle fuzzy upper wick size."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"lower_wick_size"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.CandleWickSize",children:(0,r.jsx)(i.em,{children:"CandleWickSize"})}),") \u2013 The candle fuzzy lower wick size."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"body_size",children:"body_size"}),"\n",(0,r.jsx)(i.p,{children:"The candles fuzzy body size."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," CandleBodySize"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"direction",children:"direction"}),"\n",(0,r.jsx)(i.p,{children:"The candles close direction."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," CandleDirection"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"lower_wick_size",children:"lower_wick_size"}),"\n",(0,r.jsx)(i.p,{children:"The candles fuzzy lower wick size."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," CandleWickSize"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"size",children:"size"}),"\n",(0,r.jsx)(i.p,{children:"The candles fuzzy overall size."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," CandleSize"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"upper_wick_size",children:"upper_wick_size"}),"\n",(0,r.jsx)(i.p,{children:"The candles fuzzy upper wick size."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," CandleWickSize"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-fuzzycandlesticks",children:[(0,r.jsx)(i.em,{children:"class"})," FuzzyCandlesticks"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"FuzzyCandlesticks(int period, double threshold1=0.5, double threshold2=1.0, double threshold3=2.0, double threshold4=3.0)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which fuzzifies bar data to produce fuzzy candlesticks. Bar data is dimensionally reduced via fuzzy feature extraction."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"threshold1"})," (\u200b_float_\u200b) \u2013 The membership function x threshold1 (>= 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"threshold2"})," (\u200b_float_\u200b) \u2013 The membership function x threshold2 (> threshold1)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"threshold3"})," (\u200b_float_\u200b) \u2013 The membership function x threshold3 (> threshold2)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"threshold4"})," (\u200b_float_\u200b) \u2013 The membership function x threshold4 (> threshold3)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-13",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar."})," (\u200b_The update_\u200b)"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-9",children:"period"}),"\n",(0,r.jsx)(i.p,{children:"The window period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-open-double-high-double-low-double-close--void",children:"update_raw(self, double open, double high, double low, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"open"})," (\u200b_double_\u200b) \u2013 The open price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"high"})," (\u200b_double_\u200b) \u2013 The high price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"low"})," (\u200b_double_\u200b) \u2013 The low price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-7",children:"value"}),"\n",(0,r.jsx)(i.p,{children:"The last fuzzy candle."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," FuzzyCandle"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"vector",children:"vector"}),"\n",(0,r.jsx)(i.p,{children:"The fuzzy candle represented as a vector of ints."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," list[int]"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-hullmovingaverage",children:[(0,r.jsx)(i.em,{children:"class"})," HullMovingAverage"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.averages.MovingAverage",children:(0,r.jsx)(i.code,{children:"MovingAverage"})})]}),"\n",(0,r.jsx)(i.p,{children:"HullMovingAverage(int period, PriceType price_type=PriceType.LAST)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates a Hull Moving Average (HMA) across a rolling window. The HMA, developed by Alan Hull, is an extremely fast and smooth moving average."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"price_type"})," (\u200b_PriceType_\u200b) \u2013 The specified price type for extracting values from quotes."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not positive (> 0)."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-14",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-5",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given quote tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(i.em,{children:"QuoteTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-5",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given trade tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(i.em,{children:"TradeTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-value--void-3",children:"update_raw(self, double value) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"value"})," (\u200b_double_\u200b) \u2013 The update value."]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-indicator",children:[(0,r.jsx)(i.em,{children:"class"})," Indicator"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.code,{children:"object"})]}),"\n",(0,r.jsx)(i.p,{children:"Indicator(list params)"}),"\n",(0,r.jsx)(i.p,{children:"The base class for all indicators."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"params"})," (\u200b_list_\u200b) \u2013 The initialization parameters for the indicator."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"warning",children:"WARNING"}),"\n",(0,r.jsx)(i.p,{children:"This class should not be used directly, but through a concrete subclass."}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-15",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-6",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-6",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsxs)(i.h3,{id:"class-keltnerchannel",children:[(0,r.jsx)(i.em,{children:"class"})," KeltnerChannel"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"KeltnerChannel(int period, double k_multiplier, MovingAverageType ma_type=MovingAverageType.EXPONENTIAL, MovingAverageType ma_type_atr=MovingAverageType.SIMPLE, bool use_previous=True, double atr_floor=0)"}),"\n",(0,r.jsx)(i.p,{children:"The Keltner channel is a volatility based envelope set above and below a central moving average. Traditionally the middle band is an EMA based on the typical price (high + low + close) / 3, the upper band is the middle band plus the ATR. The lower band is the middle band minus the ATR."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"k_multiplier"})," (\u200b_double_\u200b) \u2013 The multiplier for the ATR (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the middle band (cannot be None)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type_atr"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the internal ATR (cannot be None)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"use_previous"})," (\u200b_bool_\u200b) \u2013 The boolean flag indicating whether previous price values should be used."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"atr_floor"})," (\u200b_double_\u200b) \u2013 The ATR floor (minimum) output value for the indicator (>= 0)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-16",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"k_multiplier",children:"k_multiplier"}),"\n",(0,r.jsx)(i.h4,{id:"lower-2",children:"lower"}),"\n",(0,r.jsx)(i.h4,{id:"middle-2",children:"middle"}),"\n",(0,r.jsx)(i.h4,{id:"period-10",children:"period"}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-high-double-low-double-close--void-3",children:"update_raw(self, double high, double low, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"high"})," (\u200b_double_\u200b) \u2013 The high price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"low"})," (\u200b_double_\u200b) \u2013 The low price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"upper-2",children:"upper"}),"\n",(0,r.jsxs)(i.h3,{id:"class-keltnerposition",children:[(0,r.jsx)(i.em,{children:"class"})," KeltnerPosition"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"KeltnerPosition(int period, double k_multiplier, MovingAverageType ma_type=MovingAverageType.EXPONENTIAL, MovingAverageType ma_type_atr=MovingAverageType.SIMPLE, bool use_previous=True, double atr_floor=0)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates the relative position of the given price within a defined Keltner channel. This provides a measure of the relative \u2018extension\u2019 of a market from the mean, as a multiple of volatility."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"k_multiplier"})," (\u200b_double_\u200b) \u2013 The multiplier for the ATR (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the middle band (cannot be None)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type_atr"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the internal ATR (cannot be None)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"use_previous"})," (\u200b_bool_\u200b) \u2013 The boolean flag indicating whether previous price values should be used."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"atr_floor"})," (\u200b_double_\u200b) \u2013 The ATR floor (minimum) output value for the indicator (>= 0)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-17",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"k_multiplier-1",children:"k_multiplier"}),"\n",(0,r.jsx)(i.h4,{id:"period-11",children:"period"}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-high-double-low-double-close--void-4",children:"update_raw(self, double high, double low, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"high"})," (\u200b_double_\u200b) \u2013 The high price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"low"})," (\u200b_double_\u200b) \u2013 The low price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-8",children:"value"}),"\n",(0,r.jsxs)(i.h3,{id:"class-klingervolumeoscillator",children:[(0,r.jsx)(i.em,{children:"class"})," KlingerVolumeOscillator"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"KlingerVolumeOscillator(int fast_period, int slow_period, int signal_period, MovingAverageType ma_type=MovingAverageType.EXPONENTIAL)"}),"\n",(0,r.jsx)(i.p,{children:"This indicator was developed by Stephen J. Klinger. It is designed to predict price reversals in a market by comparing volume to price."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"fast_period"})," (\u200b_int_\u200b) \u2013 The period for the fast moving average (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"slow_period"})," (\u200b_int_\u200b) \u2013 The period for the slow moving average (> 0 & > fast_sma)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"signal_period"})," (\u200b_int_\u200b) \u2013 The period for the moving average difference\u2019s moving average (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the calculations."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"fast_period-1",children:"fast_period"}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-18",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"signal_period-1",children:"signal_period"}),"\n",(0,r.jsx)(i.h4,{id:"slow_period-1",children:"slow_period"}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-high-double-low-double-close-double-volume--void",children:"update_raw(self, double high, double low, double close, double volume) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"high"})," (\u200b_double_\u200b) \u2013 The high price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"low"})," (\u200b_double_\u200b) \u2013 The low price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"volume"})," (\u200b_double_\u200b) \u2013 The volume."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-9",children:"value"}),"\n",(0,r.jsxs)(i.h3,{id:"class-linearregression",children:[(0,r.jsx)(i.em,{children:"class"})," LinearRegression"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"LinearRegression(int period=0)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator that calculates a simple linear regression."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The period for the indicator."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not greater than zero."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"r2",children:"R2"}),"\n",(0,r.jsx)(i.h4,{id:"cfo",children:"cfo"}),"\n",(0,r.jsx)(i.h4,{id:"degree",children:"degree"}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-19",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"intercept",children:"intercept"}),"\n",(0,r.jsx)(i.h4,{id:"period-12",children:"period"}),"\n",(0,r.jsx)(i.h4,{id:"slope",children:"slope"}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-close--void-3",children:"update_raw(self, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"close_price"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-10",children:"value"}),"\n",(0,r.jsxs)(i.h3,{id:"class-movingaverage",children:[(0,r.jsx)(i.em,{children:"class"})," MovingAverage"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"MovingAverage(int period, list params, PriceType price_type)"}),"\n",(0,r.jsx)(i.p,{children:"The base class for all moving average type indicators."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"params"})," (\u200b_list_\u200b) \u2013 The initialization parameters for the indicator."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"price_type"})," (",(0,r.jsx)(i.em,{children:"PriceType"})," ",(0,r.jsx)(i.em,{children:","})," \u200b_optional_\u200b) \u2013 The specified price type for extracting values from quotes."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"warning-1",children:"WARNING"}),"\n",(0,r.jsx)(i.p,{children:"This class should not be used directly, but through a concrete subclass."}),"\n",(0,r.jsx)(i.h4,{id:"count",children:"count"}),"\n",(0,r.jsx)(i.p,{children:"The count of inputs received by the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-13",children:"period"}),"\n",(0,r.jsx)(i.p,{children:"The moving average period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," PriceType"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"price_type",children:"price_type"}),"\n",(0,r.jsx)(i.p,{children:"The specified price type for extracting values from quotes."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," PriceType"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-value--void-4",children:"update_raw(self, double value) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"value"})," (\u200b_double_\u200b) \u2013 The update value."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-11",children:"value"}),"\n",(0,r.jsx)(i.p,{children:"The current output value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-movingaverageconvergencedivergence",children:[(0,r.jsx)(i.em,{children:"class"})," MovingAverageConvergenceDivergence"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"MovingAverageConvergenceDivergence(int fast_period, int slow_period, MovingAverageType ma_type=MovingAverageType.EXPONENTIAL, PriceType price_type=PriceType.LAST)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates the difference between two moving averages. Different moving average types can be selected for the inner calculation."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"fast_period"})," (\u200b_int_\u200b) \u2013 The period for the fast moving average (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"slow_period"})," (\u200b_int_\u200b) \u2013 The period for the slow moving average (> 0 & > fast_sma)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the calculations."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"price_type"})," (\u200b_PriceType_\u200b) \u2013 The specified price type for extracting values from quotes."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If fast_period is not positive (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If slow_period is not positive (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If fast_period is not < slow_period."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"fast_period-2",children:"fast_period"}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-20",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-7",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given quote tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(i.em,{children:"QuoteTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-7",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given trade tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(i.em,{children:"TradeTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"slow_period-2",children:"slow_period"}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-close--void-4",children:"update_raw(self, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given close price."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-12",children:"value"}),"\n",(0,r.jsxs)(i.h3,{id:"class-movingaveragefactory",children:[(0,r.jsx)(i.em,{children:"class"})," MovingAverageFactory"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.code,{children:"object"})]}),"\n",(0,r.jsx)(i.p,{children:"Provides a factory to construct different moving average indicators."}),"\n",(0,r.jsxs)(i.h4,{id:"static-createint-period-movingaveragetype-ma_type-movingaveragetype-kwargs--movingaverage",children:[(0,r.jsx)(i.em,{children:"static"})," create(int period, MovingAverageType ma_type: MovingAverageType, **kwargs) \u2192 ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverage",children:"MovingAverage"})]}),"\n",(0,r.jsx)(i.p,{children:"Create a moving average indicator corresponding to the given ma_type."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The period of the moving average (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Return type:"})," ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverage",children:"MovingAverage"})]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not positive (> 0)."]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-movingaveragetype",children:[(0,r.jsx)(i.em,{children:"class"})," MovingAverageType"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.code,{children:"IntFlag"})]}),"\n",(0,r.jsxs)(i.h4,{id:"simple--0",children:["SIMPLE ",(0,r.jsx)(i.em,{children:"= 0"})]}),"\n",(0,r.jsxs)(i.h4,{id:"exponential--1",children:["EXPONENTIAL ",(0,r.jsx)(i.em,{children:"= 1"})]}),"\n",(0,r.jsxs)(i.h4,{id:"doubleexponential-2_",children:["DOUBLE",(0,r.jsx)(i.em,{children:"EXPONENTIAL"}),"= 2_"]}),"\n",(0,r.jsxs)(i.h4,{id:"wilder--3",children:["WILDER ",(0,r.jsx)(i.em,{children:"= 3"})]}),"\n",(0,r.jsxs)(i.h4,{id:"hull--4",children:["HULL ",(0,r.jsx)(i.em,{children:"= 4"})]}),"\n",(0,r.jsxs)(i.h4,{id:"adaptive--5",children:["ADAPTIVE ",(0,r.jsx)(i.em,{children:"= 5"})]}),"\n",(0,r.jsxs)(i.h4,{id:"weighted--6",children:["WEIGHTED ",(0,r.jsx)(i.em,{children:"= 6"})]}),"\n",(0,r.jsxs)(i.h4,{id:"variableindex_dynamic-7_",children:["VARIABLE",(0,r.jsx)(i.em,{children:"INDEX_DYNAMIC"}),"= 7_"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-onbalancevolume",children:[(0,r.jsx)(i.em,{children:"class"})," OnBalanceVolume"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"OnBalanceVolume(int period=0)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates the momentum of relative positive or negative volume."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The period for the indicator, zero indicates no window (>= 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is negative (< 0)."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-21",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-14",children:"period"}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-open-double-close-double-volume--void",children:"update_raw(self, double open, double close, double volume) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"open"})," (\u200b_double_\u200b) \u2013 The high price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The low price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"volume"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-13",children:"value"}),"\n",(0,r.jsxs)(i.h3,{id:"class-pressure",children:[(0,r.jsx)(i.em,{children:"class"})," Pressure"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"Pressure(int period, MovingAverageType ma_type=MovingAverageType.EXPONENTIAL, double atr_floor=0)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates the relative volume (multiple of average volume) to move the market across a relative range (multiple of ATR)."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the calculations."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"atr_floor"})," (\u200b_double_\u200b) \u2013 The ATR floor (minimum) output value for the indicator (>= 0.)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not positive (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If atr_floor is negative (< 0)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-22",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-15",children:"period"}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-high-double-low-double-close-double-volume--void-1",children:"update_raw(self, double high, double low, double close, double volume) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"high"})," (\u200b_double_\u200b) \u2013 The high price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"low"})," (\u200b_double_\u200b) \u2013 The low price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"volume"})," (\u200b_double_\u200b) \u2013 The volume."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-14",children:"value"}),"\n",(0,r.jsx)(i.h4,{id:"value_cumulative",children:"value_cumulative"}),"\n",(0,r.jsxs)(i.h3,{id:"class-psychologicalline",children:[(0,r.jsx)(i.em,{children:"class"})," PsychologicalLine"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"PsychologicalLine(int period, ma_type=None)"}),"\n",(0,r.jsx)(i.p,{children:"The Psychological Line is an oscillator-type indicator that compares the number of the rising periods to the total number of periods. In other words, it is the percentage of bars that close above the previous bar over a given period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the indicator (cannot be None)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-23",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-16",children:"period"}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-close--void-5",children:"update_raw(self, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-15",children:"value"}),"\n",(0,r.jsxs)(i.h3,{id:"class-rateofchange",children:[(0,r.jsx)(i.em,{children:"class"})," RateOfChange"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"RateOfChange(int period, bool use_log=False)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates the rate of change of price over a defined period. The return output can be simple or log."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The period for the indicator."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"use_log"})," (\u200b_bool_\u200b) \u2013 Use log returns for value calculation."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not > 1."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-24",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-17",children:"period"}),"\n",(0,r.jsx)(i.p,{children:"The window period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-price--void-1",children:"update_raw(self, double price) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given price."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"price"})," (\u200b_double_\u200b) \u2013 The update price."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-16",children:"value"}),"\n",(0,r.jsx)(i.p,{children:"The current value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-relativestrengthindex",children:[(0,r.jsx)(i.em,{children:"class"})," RelativeStrengthIndex"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"RelativeStrengthIndex(int period, ma_type=None)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates a relative strength index (RSI) across a rolling window."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (\u200b_int_\u200b) \u2013 The moving average type for average gain/loss."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The rolling window period for the indicator."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not positive (> 0)."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-25",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-18",children:"period"}),"\n",(0,r.jsx)(i.p,{children:"The window period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-value--void-5",children:"update_raw(self, double value) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"value"})," (\u200b_double_\u200b) \u2013 The update value."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-17",children:"value"}),"\n",(0,r.jsx)(i.p,{children:"The current value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-relativevolatilityindex",children:[(0,r.jsx)(i.em,{children:"class"})," RelativeVolatilityIndex"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"RelativeVolatilityIndex(int period, double scalar=100.0, ma_type=None)"}),"\n",(0,r.jsx)(i.p,{children:"The Relative Volatility Index (RVI) was created in 1993 and revised in 1995. Instead of adding up price changes like RSI based on price direction, the RVI adds up standard deviations based on price direction."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"scalar"})," (\u200b_double_\u200b) \u2013 A positive float to scale the bands."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the vip and vim (cannot be None)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-26",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-19",children:"period"}),"\n",(0,r.jsx)(i.h4,{id:"scalar-1",children:"scalar"}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-close--void-6",children:"update_raw(self, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-18",children:"value"}),"\n",(0,r.jsxs)(i.h3,{id:"class-simplemovingaverage",children:[(0,r.jsx)(i.em,{children:"class"})," SimpleMovingAverage"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.averages.MovingAverage",children:(0,r.jsx)(i.code,{children:"MovingAverage"})})]}),"\n",(0,r.jsx)(i.p,{children:"SimpleMovingAverage(int period, PriceType price_type=PriceType.LAST)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates a simple moving average across a rolling window."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"price_type"})," (\u200b_PriceType_\u200b) \u2013 The specified price type for extracting values from quotes."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not positive (> 0)."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-27",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-8",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given quote tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(i.em,{children:"QuoteTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-8",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given trade tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(i.em,{children:"TradeTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-value--void-6",children:"update_raw(self, double value) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"value"})," (\u200b_double_\u200b) \u2013 The update value."]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-spreadanalyzer",children:[(0,r.jsx)(i.em,{children:"class"})," SpreadAnalyzer"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"SpreadAnalyzer(InstrumentId instrument_id, int capacity) -> None"}),"\n",(0,r.jsx)(i.p,{children:"Provides various spread analysis metrics."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"instrument_id"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(i.em,{children:"InstrumentId"})}),") \u2013 The instrument ID for the tick updates."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"capacity"})," (\u200b_int_\u200b) \u2013 The max length for the internal QuoteTick deque (determines averages)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If capacity is not positive (> 0)."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"average",children:"average"}),"\n",(0,r.jsx)(i.p,{children:"The current average spread."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"capacity",children:"capacity"}),"\n",(0,r.jsx)(i.p,{children:"The indicators spread capacity."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"current",children:"current"}),"\n",(0,r.jsx)(i.p,{children:"The current spread."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-9",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the analyzer with the given quote tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(i.em,{children:"QuoteTick"})}),") \u2013 The tick for the update."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If tick.instrument_id does not equal the analyzers instrument ID."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"instrument_id",children:"instrument_id"}),"\n",(0,r.jsx)(i.p,{children:"The indicators instrument ID."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," InstrumentId"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-stochastics",children:[(0,r.jsx)(i.em,{children:"class"})," Stochastics"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"Stochastics(int period_k, int period_d)"}),"\n",(0,r.jsx)(i.p,{children:"An oscillator which can indicate when an asset may be over bought or over sold."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period_k"})," (\u200b_int_\u200b) \u2013 The period for the K line."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period_d"})," (\u200b_int_\u200b) \u2013 The period for the D line."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period_k is not positive (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period_d is not positive (> 0)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-28",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period_d",children:"period_d"}),"\n",(0,r.jsx)(i.p,{children:"The d period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period_k",children:"period_k"}),"\n",(0,r.jsx)(i.p,{children:"The k period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-high-double-low-double-close--void-5",children:"update_raw(self, double high, double low, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"high"})," (\u200b_double_\u200b) \u2013 The high price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"low"})," (\u200b_double_\u200b) \u2013 The low price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value_d",children:"value_d"}),"\n",(0,r.jsx)(i.p,{children:"The d value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value_k",children:"value_k"}),"\n",(0,r.jsx)(i.p,{children:"The k value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-swings",children:[(0,r.jsx)(i.em,{children:"class"})," Swings"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"Swings(int period)"}),"\n",(0,r.jsx)(i.p,{children:"A swing indicator which calculates and stores various swing metrics."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"changed",children:"changed"}),"\n",(0,r.jsx)(i.h4,{id:"direction-1",children:"direction"}),"\n",(0,r.jsx)(i.h4,{id:"duration",children:"duration"}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-29",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"high_datetime",children:"high_datetime"}),"\n",(0,r.jsx)(i.h4,{id:"high_price",children:"high_price"}),"\n",(0,r.jsx)(i.h4,{id:"length",children:"length"}),"\n",(0,r.jsx)(i.h4,{id:"low_datetime",children:"low_datetime"}),"\n",(0,r.jsx)(i.h4,{id:"low_price",children:"low_price"}),"\n",(0,r.jsx)(i.h4,{id:"period-20",children:"period"}),"\n",(0,r.jsx)(i.h4,{id:"since_high",children:"since_high"}),"\n",(0,r.jsx)(i.h4,{id:"since_low",children:"since_low"}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-high-double-low-datetime-timestamp--void",children:"update_raw(self, double high, double low, datetime timestamp) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"high"})," (\u200b_double_\u200b) \u2013 The high price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"low"})," (\u200b_double_\u200b) \u2013 The low price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"timestamp"})," (\u200b_datetime_\u200b) \u2013 The current timestamp."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-variableindexdynamicaverage",children:[(0,r.jsx)(i.em,{children:"class"})," VariableIndexDynamicAverage"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.averages.MovingAverage",children:(0,r.jsx)(i.code,{children:"MovingAverage"})})]}),"\n",(0,r.jsx)(i.p,{children:"VariableIndexDynamicAverage(int period, PriceType price_type=PriceType.LAST, MovingAverageType cmo_ma_type=MovingAverageType.SIMPLE)"}),"\n",(0,r.jsx)(i.p,{children:"Variable Index Dynamic Average (VIDYA) was developed by Tushar Chande. It is similar to an Exponential Moving Average, but it has a dynamically adjusted lookback period dependent on relative price volatility as measured by Chande Momentum Oscillator (CMO). When volatility is high, VIDYA reacts faster to price changes. It is often used as moving average or trend identifier."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"price_type"})," (\u200b_PriceType_\u200b) \u2013 The specified price type for extracting values from quotes."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"cmo_ma_type"})," (\u200b_int_\u200b) \u2013 The moving average type for CMO indicator."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not positive (> 0). If cmo_ma_type is ",(0,r.jsx)(i.code,{children:"VARIABLE_INDEX_DYNAMIC"}),"."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"alpha-1",children:"alpha"}),"\n",(0,r.jsx)(i.p,{children:"The moving average alpha value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"cmo_pct",children:"cmo_pct"}),"\n",(0,r.jsx)(i.p,{children:"The normal cmo value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-30",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-10",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given quote tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(i.em,{children:"QuoteTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-9",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given trade tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(i.em,{children:"TradeTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-value--void-7",children:"update_raw(self, double value) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"value"})," (\u200b_double_\u200b) \u2013 The update value."]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-verticalhorizontalfilter",children:[(0,r.jsx)(i.em,{children:"class"})," VerticalHorizontalFilter"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"VerticalHorizontalFilter(int period, MovingAverageType ma_type=MovingAverageType.SIMPLE)"}),"\n",(0,r.jsx)(i.p,{children:"The Vertical Horizon Filter (VHF) was created by Adam White to identify trending and ranging markets."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the indicator (cannot be None)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-31",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-21",children:"period"}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-close--void-7",children:"update_raw(self, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-19",children:"value"}),"\n",(0,r.jsxs)(i.h3,{id:"class-volatilityratio",children:[(0,r.jsx)(i.em,{children:"class"})," VolatilityRatio"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"VolatilityRatio(int fast_period, int slow_period, MovingAverageType ma_type=MovingAverageType.SIMPLE, bool use_previous=True, double value_floor=0)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates the ratio of different ranges of volatility. Different moving average types can be selected for the inner ATR calculations."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"fast_period"})," (\u200b_int_\u200b) \u2013 The period for the fast ATR (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"slow_period"})," (\u200b_int_\u200b) \u2013 The period for the slow ATR (> 0 & > fast_period)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the ATR calculations."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"use_previous"})," (\u200b_bool_\u200b) \u2013 The boolean flag indicating whether previous price values should be used."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"value_floor"})," (\u200b_double_\u200b) \u2013 The floor (minimum) output value for the indicator (>= 0)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If fast_period is not positive (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If slow_period is not positive (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If fast_period is not < slow_period."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If value_floor is negative (< 0)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"fast_period-3",children:"fast_period"}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-32",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"slow_period-3",children:"slow_period"}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-high-double-low-double-close--void-6",children:"update_raw(self, double high, double low, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"high"})," (\u200b_double_\u200b) \u2013 The high price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"low"})," (\u200b_double_\u200b) \u2013 The low price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-20",children:"value"}),"\n",(0,r.jsxs)(i.h3,{id:"class-volumeweightedaverageprice",children:[(0,r.jsx)(i.em,{children:"class"})," VolumeWeightedAveragePrice"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"VolumeWeightedAveragePrice()"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates the volume weighted average price for the day."}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-33",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-price-double-volume-datetime-timestamp--void",children:"update_raw(self, double price, double volume, datetime timestamp) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"price"})," (\u200b_double_\u200b) \u2013 The update price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"volume"})," (\u200b_double_\u200b) \u2013 The update volume."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"timestamp"})," (\u200b_datetime_\u200b) \u2013 The current timestamp."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-21",children:"value"}),"\n",(0,r.jsxs)(i.h3,{id:"class-weightedmovingaverage",children:[(0,r.jsx)(i.em,{children:"class"})," WeightedMovingAverage"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.averages.MovingAverage",children:(0,r.jsx)(i.code,{children:"MovingAverage"})})]}),"\n",(0,r.jsx)(i.p,{children:"WeightedMovingAverage(int period, weights=None, PriceType price_type=PriceType.LAST)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates a weighted moving average across a rolling window."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"weights"})," (\u200b_iterable_\u200b) \u2013 The weights for the moving average calculation (if not ",(0,r.jsx)(i.code,{children:"None"})," then = period)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"price_type"})," (\u200b_PriceType_\u200b) \u2013 The specified price type for extracting values from quotes."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not positive (> 0)."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-34",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-11",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given quote tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(i.em,{children:"QuoteTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-10",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given trade tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(i.em,{children:"TradeTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-value--void-8",children:"update_raw(self, double value) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"value"})," (\u200b_double_\u200b) \u2013 The update value."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"weights",children:"weights"}),"\n",(0,r.jsxs)(i.h3,{id:"class-wildermovingaverage",children:[(0,r.jsx)(i.em,{children:"class"})," WilderMovingAverage"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.averages.MovingAverage",children:(0,r.jsx)(i.code,{children:"MovingAverage"})})]}),"\n",(0,r.jsx)(i.p,{children:"WilderMovingAverage(int period, PriceType price_type=PriceType.LAST)"}),"\n",(0,r.jsx)(i.p,{children:"The Wilder\u2019s Moving Average is simply an Exponential Moving Average (EMA) with a modified alpha = 1 / period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"price_type"})," (\u200b_PriceType_\u200b) \u2013 The specified price type for extracting values from quotes."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not positive (> 0)."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"alpha-2",children:"alpha"}),"\n",(0,r.jsx)(i.p,{children:"The moving average alpha value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-35",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-12",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given quote tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(i.em,{children:"QuoteTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-11",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given trade tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(i.em,{children:"TradeTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-value--void-9",children:"update_raw(self, double value) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"value"})," (\u200b_double_\u200b) \u2013 The update value."]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-adaptivemovingaverage-1",children:[(0,r.jsx)(i.em,{children:"class"})," AdaptiveMovingAverage"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.averages.MovingAverage",children:(0,r.jsx)(i.code,{children:"MovingAverage"})})]}),"\n",(0,r.jsx)(i.p,{children:"AdaptiveMovingAverage(int period_er, int period_alpha_fast, int period_alpha_slow, PriceType price_type=PriceType.LAST)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates an adaptive moving average (AMA) across a rolling window. Developed by Perry Kaufman, the AMA is a moving average designed to account for market noise and volatility. The AMA will closely follow prices when the price swings are relatively small and the noise is low. The AMA will increase lag when the price swings increase."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period_er"})," (\u200b_int_\u200b) \u2013 The period for the internal EfficiencyRatio indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period_alpha_fast"})," (\u200b_int_\u200b) \u2013 The period for the fast smoothing constant (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period_alpha_slow"})," (\u200b_int_\u200b) \u2013 The period for the slow smoothing constant (> 0 < alpha_fast)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"price_type"})," (\u200b_PriceType_\u200b) \u2013 The specified price type for extracting values from quotes."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"alpha_diff-1",children:"alpha_diff"}),"\n",(0,r.jsx)(i.p,{children:"The alpha difference value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"alpha_fast-1",children:"alpha_fast"}),"\n",(0,r.jsx)(i.p,{children:"The alpha fast value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"alpha_slow-1",children:"alpha_slow"}),"\n",(0,r.jsx)(i.p,{children:"The alpha slow value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"count-1",children:"count"}),"\n",(0,r.jsx)(i.p,{children:"The count of inputs received by the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-36",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-13",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given quote tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(i.em,{children:"QuoteTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-12",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given trade tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(i.em,{children:"TradeTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-1",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-1",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-1",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-22",children:"period"}),"\n",(0,r.jsx)(i.p,{children:"The moving average period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," PriceType"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period_alpha_fast-1",children:"period_alpha_fast"}),"\n",(0,r.jsx)(i.p,{children:"The period of the fast smoothing constant."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period_alpha_slow-1",children:"period_alpha_slow"}),"\n",(0,r.jsx)(i.p,{children:"The period of the slow smoothing constant."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period_er-1",children:"period_er"}),"\n",(0,r.jsx)(i.p,{children:"The period of the internal EfficiencyRatio indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"price_type-1",children:"price_type"}),"\n",(0,r.jsx)(i.p,{children:"The specified price type for extracting values from quotes."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," PriceType"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-1",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-value--void-10",children:"update_raw(self, double value) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"value"})," (\u200b_double_\u200b) \u2013 The update value."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-22",children:"value"}),"\n",(0,r.jsx)(i.p,{children:"The current output value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-doubleexponentialmovingaverage-1",children:[(0,r.jsx)(i.em,{children:"class"})," DoubleExponentialMovingAverage"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.averages.MovingAverage",children:(0,r.jsx)(i.code,{children:"MovingAverage"})})]}),"\n",(0,r.jsx)(i.p,{children:"DoubleExponentialMovingAverage(int period, PriceType price_type=PriceType.LAST)"}),"\n",(0,r.jsx)(i.p,{children:"The Double Exponential Moving Average attempts to a smoother average with less lag than the normal Exponential Moving Average (EMA)."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"price_type"})," (\u200b_PriceType_\u200b) \u2013 The specified price type for extracting values from quotes."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not positive (> 0)."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"count-2",children:"count"}),"\n",(0,r.jsx)(i.p,{children:"The count of inputs received by the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-37",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-14",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given quote tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(i.em,{children:"QuoteTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-13",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given trade tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(i.em,{children:"TradeTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-2",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-2",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-2",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-23",children:"period"}),"\n",(0,r.jsx)(i.p,{children:"The moving average period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," PriceType"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"price_type-2",children:"price_type"}),"\n",(0,r.jsx)(i.p,{children:"The specified price type for extracting values from quotes."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," PriceType"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-2",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-value--void-11",children:"update_raw(self, double value) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"value"})," (\u200b_double_\u200b) \u2013 The update value."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-23",children:"value"}),"\n",(0,r.jsx)(i.p,{children:"The current output value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-exponentialmovingaverage-1",children:[(0,r.jsx)(i.em,{children:"class"})," ExponentialMovingAverage"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.averages.MovingAverage",children:(0,r.jsx)(i.code,{children:"MovingAverage"})})]}),"\n",(0,r.jsx)(i.p,{children:"ExponentialMovingAverage(int period, PriceType price_type=PriceType.LAST)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates an exponential moving average across a rolling window."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"price_type"})," (\u200b_PriceType_\u200b) \u2013 The specified price type for extracting values from quotes."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not positive (> 0)."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"alpha-3",children:"alpha"}),"\n",(0,r.jsx)(i.p,{children:"The moving average alpha value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"count-3",children:"count"}),"\n",(0,r.jsx)(i.p,{children:"The count of inputs received by the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-38",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-15",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given quote tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(i.em,{children:"QuoteTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-14",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given trade tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(i.em,{children:"TradeTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-3",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-3",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-3",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-24",children:"period"}),"\n",(0,r.jsx)(i.p,{children:"The moving average period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," PriceType"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"price_type-3",children:"price_type"}),"\n",(0,r.jsx)(i.p,{children:"The specified price type for extracting values from quotes."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," PriceType"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-3",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-value--void-12",children:"update_raw(self, double value) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"value"})," (\u200b_double_\u200b) \u2013 The update value."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-24",children:"value"}),"\n",(0,r.jsx)(i.p,{children:"The current output value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-hullmovingaverage-1",children:[(0,r.jsx)(i.em,{children:"class"})," HullMovingAverage"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.averages.MovingAverage",children:(0,r.jsx)(i.code,{children:"MovingAverage"})})]}),"\n",(0,r.jsx)(i.p,{children:"HullMovingAverage(int period, PriceType price_type=PriceType.LAST)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates a Hull Moving Average (HMA) across a rolling window. The HMA, developed by Alan Hull, is an extremely fast and smooth moving average."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"price_type"})," (\u200b_PriceType_\u200b) \u2013 The specified price type for extracting values from quotes."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not positive (> 0)."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"count-4",children:"count"}),"\n",(0,r.jsx)(i.p,{children:"The count of inputs received by the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-39",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-16",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given quote tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(i.em,{children:"QuoteTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-15",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given trade tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(i.em,{children:"TradeTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-4",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-4",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-4",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-25",children:"period"}),"\n",(0,r.jsx)(i.p,{children:"The moving average period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," PriceType"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"price_type-4",children:"price_type"}),"\n",(0,r.jsx)(i.p,{children:"The specified price type for extracting values from quotes."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," PriceType"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-4",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-value--void-13",children:"update_raw(self, double value) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"value"})," (\u200b_double_\u200b) \u2013 The update value."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-25",children:"value"}),"\n",(0,r.jsx)(i.p,{children:"The current output value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-movingaverage-1",children:[(0,r.jsx)(i.em,{children:"class"})," MovingAverage"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"MovingAverage(int period, list params, PriceType price_type)"}),"\n",(0,r.jsx)(i.p,{children:"The base class for all moving average type indicators."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"params"})," (\u200b_list_\u200b) \u2013 The initialization parameters for the indicator."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"price_type"})," (",(0,r.jsx)(i.em,{children:"PriceType"})," ",(0,r.jsx)(i.em,{children:","})," \u200b_optional_\u200b) \u2013 The specified price type for extracting values from quotes."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"warning-2",children:"WARNING"}),"\n",(0,r.jsx)(i.p,{children:"This class should not be used directly, but through a concrete subclass."}),"\n",(0,r.jsx)(i.h4,{id:"count-5",children:"count"}),"\n",(0,r.jsx)(i.p,{children:"The count of inputs received by the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-40",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-17",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-16",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-5",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-5",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-5",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-26",children:"period"}),"\n",(0,r.jsx)(i.p,{children:"The moving average period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," PriceType"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"price_type-5",children:"price_type"}),"\n",(0,r.jsx)(i.p,{children:"The specified price type for extracting values from quotes."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," PriceType"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-5",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-value--void-14",children:"update_raw(self, double value) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"value"})," (\u200b_double_\u200b) \u2013 The update value."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-26",children:"value"}),"\n",(0,r.jsx)(i.p,{children:"The current output value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-movingaveragefactory-1",children:[(0,r.jsx)(i.em,{children:"class"})," MovingAverageFactory"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.code,{children:"object"})]}),"\n",(0,r.jsx)(i.p,{children:"Provides a factory to construct different moving average indicators."}),"\n",(0,r.jsxs)(i.h4,{id:"static-createint-period-movingaveragetype-ma_type-movingaveragetype-kwargs--movingaverage-1",children:[(0,r.jsx)(i.em,{children:"static"})," create(int period, MovingAverageType ma_type: MovingAverageType, **kwargs) \u2192 ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.averages.MovingAverage",children:"MovingAverage"})]}),"\n",(0,r.jsx)(i.p,{children:"Create a moving average indicator corresponding to the given ma_type."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The period of the moving average (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.averages.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Return type:"})," ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.averages.MovingAverage",children:"MovingAverage"})]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not positive (> 0)."]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-movingaveragetype-1",children:[(0,r.jsx)(i.em,{children:"class"})," MovingAverageType"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.code,{children:"IntFlag"})]}),"\n",(0,r.jsx)(i.h4,{id:"conjugate",children:"conjugate()"}),"\n",(0,r.jsx)(i.p,{children:"Returns self, the complex conjugate of any int."}),"\n",(0,r.jsx)(i.h4,{id:"bit_length",children:"bit_length()"}),"\n",(0,r.jsx)(i.p,{children:"Number of bits necessary to represent self in binary."}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-pycon",children:">>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6\n"})}),"\n",(0,r.jsx)(i.h4,{id:"bit_count",children:"bit_count()"}),"\n",(0,r.jsx)(i.p,{children:"Number of ones in the binary representation of the absolute value of self."}),"\n",(0,r.jsx)(i.p,{children:"Also known as the population count."}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-pycon",children:">>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3\n"})}),"\n",(0,r.jsx)(i.h4,{id:"to_byteslength1-byteorderbig--signedfalse",children:"to_bytes(length=1, byteorder='big', , signed=False)"}),"\n",(0,r.jsx)(i.p,{children:"Return an array of bytes representing an integer."}),"\n",(0,r.jsx)(i.p,{children:"length : Length of bytes object to use. An OverflowError is raised if the integer is not representable with the given number of bytes. Default is length 1."}),"\n",(0,r.jsx)(i.p,{children:"byteorder : The byte order used to represent the integer. If byteorder is \u2018big\u2019, the most significant byte is at the beginning of the byte array. If byteorder is \u2018little\u2019, the most significant byte is at the end of the byte array. To request the native byte order of the host system, use sys.byteorder as the byte order value. Default is to use \u2018big\u2019."}),"\n",(0,r.jsx)(i.p,{children:"signed : Determines whether two\u2019s complement is used to represent the integer. If signed is False and a negative integer is given, an OverflowError is raised."}),"\n",(0,r.jsxs)(i.h4,{id:"classmethod-from_bytesbytes-byteorderbig--signedfalse",children:[(0,r.jsx)(i.em,{children:"classmethod"})," from_bytes(bytes, byteorder='big', , signed=False)"]}),"\n",(0,r.jsx)(i.p,{children:"Return the integer represented by the given array of bytes."}),"\n",(0,r.jsx)(i.p,{children:"bytes : Holds the array of bytes to convert. The argument must either support the buffer protocol or be an iterable object producing bytes. Bytes and bytearray are examples of built-in objects that support the buffer protocol."}),"\n",(0,r.jsx)(i.p,{children:"byteorder : The byte order used to represent the integer. If byteorder is \u2018big\u2019, the most significant byte is at the beginning of the byte array. If byteorder is \u2018little\u2019, the most significant byte is at the end of the byte array. To request the native byte order of the host system, use sys.byteorder as the byte order value. Default is to use \u2018big\u2019."}),"\n",(0,r.jsx)(i.p,{children:"signed : Indicates whether two\u2019s complement is used to represent the integer."}),"\n",(0,r.jsx)(i.h4,{id:"as_integer_ratio",children:"as_integer_ratio()"}),"\n",(0,r.jsx)(i.p,{children:"Return a pair of integers, whose ratio is equal to the original int."}),"\n",(0,r.jsx)(i.p,{children:"The ratio is in lowest terms and has a positive denominator."}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-pycon",children:">>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)\n"})}),"\n",(0,r.jsx)(i.h4,{id:"is_integer",children:"is_integer()"}),"\n",(0,r.jsx)(i.p,{children:"Returns True. Exists for duck type compatibility with float.is_integer."}),"\n",(0,r.jsx)(i.h4,{id:"real",children:"real"}),"\n",(0,r.jsx)(i.p,{children:"the real part of a complex number"}),"\n",(0,r.jsx)(i.h4,{id:"imag",children:"imag"}),"\n",(0,r.jsx)(i.p,{children:"the imaginary part of a complex number"}),"\n",(0,r.jsx)(i.h4,{id:"numerator",children:"numerator"}),"\n",(0,r.jsx)(i.p,{children:"the numerator of a rational number in lowest terms"}),"\n",(0,r.jsx)(i.h4,{id:"denominator",children:"denominator"}),"\n",(0,r.jsx)(i.p,{children:"the denominator of a rational number in lowest terms"}),"\n",(0,r.jsxs)(i.h4,{id:"simple--0-1",children:["SIMPLE ",(0,r.jsx)(i.em,{children:"= 0"})]}),"\n",(0,r.jsxs)(i.h4,{id:"exponential--1-1",children:["EXPONENTIAL ",(0,r.jsx)(i.em,{children:"= 1"})]}),"\n",(0,r.jsxs)(i.h4,{id:"doubleexponential-2_-1",children:["DOUBLE",(0,r.jsx)(i.em,{children:"EXPONENTIAL"}),"= 2_"]}),"\n",(0,r.jsxs)(i.h4,{id:"wilder--3-1",children:["WILDER ",(0,r.jsx)(i.em,{children:"= 3"})]}),"\n",(0,r.jsxs)(i.h4,{id:"hull--4-1",children:["HULL ",(0,r.jsx)(i.em,{children:"= 4"})]}),"\n",(0,r.jsxs)(i.h4,{id:"adaptive--5-1",children:["ADAPTIVE ",(0,r.jsx)(i.em,{children:"= 5"})]}),"\n",(0,r.jsxs)(i.h4,{id:"weighted--6-1",children:["WEIGHTED ",(0,r.jsx)(i.em,{children:"= 6"})]}),"\n",(0,r.jsxs)(i.h4,{id:"variableindex_dynamic-7_-1",children:["VARIABLE",(0,r.jsx)(i.em,{children:"INDEX_DYNAMIC"}),"= 7_"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-simplemovingaverage-1",children:[(0,r.jsx)(i.em,{children:"class"})," SimpleMovingAverage"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.averages.MovingAverage",children:(0,r.jsx)(i.code,{children:"MovingAverage"})})]}),"\n",(0,r.jsx)(i.p,{children:"SimpleMovingAverage(int period, PriceType price_type=PriceType.LAST)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates a simple moving average across a rolling window."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"price_type"})," (\u200b_PriceType_\u200b) \u2013 The specified price type for extracting values from quotes."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not positive (> 0)."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"count-6",children:"count"}),"\n",(0,r.jsx)(i.p,{children:"The count of inputs received by the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-41",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-18",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given quote tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(i.em,{children:"QuoteTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-17",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given trade tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(i.em,{children:"TradeTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-6",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-6",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-6",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-27",children:"period"}),"\n",(0,r.jsx)(i.p,{children:"The moving average period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," PriceType"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"price_type-6",children:"price_type"}),"\n",(0,r.jsx)(i.p,{children:"The specified price type for extracting values from quotes."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," PriceType"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-6",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-value--void-15",children:"update_raw(self, double value) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"value"})," (\u200b_double_\u200b) \u2013 The update value."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-27",children:"value"}),"\n",(0,r.jsx)(i.p,{children:"The current output value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-variableindexdynamicaverage-1",children:[(0,r.jsx)(i.em,{children:"class"})," VariableIndexDynamicAverage"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.averages.MovingAverage",children:(0,r.jsx)(i.code,{children:"MovingAverage"})})]}),"\n",(0,r.jsx)(i.p,{children:"VariableIndexDynamicAverage(int period, PriceType price_type=PriceType.LAST, MovingAverageType cmo_ma_type=MovingAverageType.SIMPLE)"}),"\n",(0,r.jsx)(i.p,{children:"Variable Index Dynamic Average (VIDYA) was developed by Tushar Chande. It is similar to an Exponential Moving Average, but it has a dynamically adjusted lookback period dependent on relative price volatility as measured by Chande Momentum Oscillator (CMO). When volatility is high, VIDYA reacts faster to price changes. It is often used as moving average or trend identifier."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"price_type"})," (\u200b_PriceType_\u200b) \u2013 The specified price type for extracting values from quotes."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"cmo_ma_type"})," (\u200b_int_\u200b) \u2013 The moving average type for CMO indicator."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not positive (> 0). If cmo_ma_type is ",(0,r.jsx)(i.code,{children:"VARIABLE_INDEX_DYNAMIC"}),"."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"alpha-4",children:"alpha"}),"\n",(0,r.jsx)(i.p,{children:"The moving average alpha value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"cmo_pct-1",children:"cmo_pct"}),"\n",(0,r.jsx)(i.p,{children:"The normal cmo value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"count-7",children:"count"}),"\n",(0,r.jsx)(i.p,{children:"The count of inputs received by the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-42",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-19",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given quote tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(i.em,{children:"QuoteTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-18",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given trade tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(i.em,{children:"TradeTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-7",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-7",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-7",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-28",children:"period"}),"\n",(0,r.jsx)(i.p,{children:"The moving average period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," PriceType"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"price_type-7",children:"price_type"}),"\n",(0,r.jsx)(i.p,{children:"The specified price type for extracting values from quotes."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," PriceType"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-7",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-value--void-16",children:"update_raw(self, double value) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"value"})," (\u200b_double_\u200b) \u2013 The update value."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-28",children:"value"}),"\n",(0,r.jsx)(i.p,{children:"The current output value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-weightedmovingaverage-1",children:[(0,r.jsx)(i.em,{children:"class"})," WeightedMovingAverage"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.averages.MovingAverage",children:(0,r.jsx)(i.code,{children:"MovingAverage"})})]}),"\n",(0,r.jsx)(i.p,{children:"WeightedMovingAverage(int period, weights=None, PriceType price_type=PriceType.LAST)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates a weighted moving average across a rolling window."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"weights"})," (\u200b_iterable_\u200b) \u2013 The weights for the moving average calculation (if not ",(0,r.jsx)(i.code,{children:"None"})," then = period)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"price_type"})," (\u200b_PriceType_\u200b) \u2013 The specified price type for extracting values from quotes."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not positive (> 0)."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"count-8",children:"count"}),"\n",(0,r.jsx)(i.p,{children:"The count of inputs received by the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-43",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-20",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given quote tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(i.em,{children:"QuoteTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-19",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given trade tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(i.em,{children:"TradeTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-8",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-8",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-8",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-29",children:"period"}),"\n",(0,r.jsx)(i.p,{children:"The moving average period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," PriceType"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"price_type-8",children:"price_type"}),"\n",(0,r.jsx)(i.p,{children:"The specified price type for extracting values from quotes."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," PriceType"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-8",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-value--void-17",children:"update_raw(self, double value) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"value"})," (\u200b_double_\u200b) \u2013 The update value."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-29",children:"value"}),"\n",(0,r.jsx)(i.p,{children:"The current output value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"weights-1",children:"weights"}),"\n",(0,r.jsxs)(i.h3,{id:"class-wildermovingaverage-1",children:[(0,r.jsx)(i.em,{children:"class"})," WilderMovingAverage"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.averages.MovingAverage",children:(0,r.jsx)(i.code,{children:"MovingAverage"})})]}),"\n",(0,r.jsx)(i.p,{children:"WilderMovingAverage(int period, PriceType price_type=PriceType.LAST)"}),"\n",(0,r.jsx)(i.p,{children:"The Wilder\u2019s Moving Average is simply an Exponential Moving Average (EMA) with a modified alpha = 1 / period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"price_type"})," (\u200b_PriceType_\u200b) \u2013 The specified price type for extracting values from quotes."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not positive (> 0)."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"alpha-5",children:"alpha"}),"\n",(0,r.jsx)(i.p,{children:"The moving average alpha value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"count-9",children:"count"}),"\n",(0,r.jsx)(i.p,{children:"The count of inputs received by the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-44",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-21",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given quote tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(i.em,{children:"QuoteTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-20",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given trade tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(i.em,{children:"TradeTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-9",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-9",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-9",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-30",children:"period"}),"\n",(0,r.jsx)(i.p,{children:"The moving average period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," PriceType"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"price_type-9",children:"price_type"}),"\n",(0,r.jsx)(i.p,{children:"The specified price type for extracting values from quotes."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," PriceType"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-9",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-value--void-18",children:"update_raw(self, double value) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"value"})," (\u200b_double_\u200b) \u2013 The update value."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-30",children:"value"}),"\n",(0,r.jsx)(i.p,{children:"The current output value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-fuzzycandle-1",children:[(0,r.jsx)(i.em,{children:"class"})," FuzzyCandle"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.code,{children:"object"})]}),"\n",(0,r.jsx)(i.p,{children:"FuzzyCandle(CandleDirection direction, CandleSize size, CandleBodySize body_size, CandleWickSize upper_wick_size, CandleWickSize lower_wick_size)"}),"\n",(0,r.jsx)(i.p,{children:"Represents a fuzzy candle."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"direction"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.CandleDirection",children:(0,r.jsx)(i.em,{children:"CandleDirection"})}),") \u2013 The candle direction."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"size"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.CandleSize",children:(0,r.jsx)(i.em,{children:"CandleSize"})}),") \u2013 The candle fuzzy size."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"body_size"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.CandleBodySize",children:(0,r.jsx)(i.em,{children:"CandleBodySize"})}),") \u2013 The candle fuzzy body size."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"upper_wick_size"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.CandleWickSize",children:(0,r.jsx)(i.em,{children:"CandleWickSize"})}),") \u2013 The candle fuzzy upper wick size."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"lower_wick_size"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.CandleWickSize",children:(0,r.jsx)(i.em,{children:"CandleWickSize"})}),") \u2013 The candle fuzzy lower wick size."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"body_size-1",children:"body_size"}),"\n",(0,r.jsx)(i.p,{children:"The candles fuzzy body size."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," CandleBodySize"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"direction-2",children:"direction"}),"\n",(0,r.jsx)(i.p,{children:"The candles close direction."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," CandleDirection"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"lower_wick_size-1",children:"lower_wick_size"}),"\n",(0,r.jsx)(i.p,{children:"The candles fuzzy lower wick size."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," CandleWickSize"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"size-1",children:"size"}),"\n",(0,r.jsx)(i.p,{children:"The candles fuzzy overall size."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," CandleSize"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"upper_wick_size-1",children:"upper_wick_size"}),"\n",(0,r.jsx)(i.p,{children:"The candles fuzzy upper wick size."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," CandleWickSize"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-fuzzycandlesticks-1",children:[(0,r.jsx)(i.em,{children:"class"})," FuzzyCandlesticks"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"FuzzyCandlesticks(int period, double threshold1=0.5, double threshold2=1.0, double threshold3=2.0, double threshold4=3.0)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which fuzzifies bar data to produce fuzzy candlesticks. Bar data is dimensionally reduced via fuzzy feature extraction."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"threshold1"})," (\u200b_float_\u200b) \u2013 The membership function x threshold1 (>= 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"threshold2"})," (\u200b_float_\u200b) \u2013 The membership function x threshold2 (> threshold1)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"threshold3"})," (\u200b_float_\u200b) \u2013 The membership function x threshold3 (> threshold2)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"threshold4"})," (\u200b_float_\u200b) \u2013 The membership function x threshold4 (> threshold3)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-45",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar."})," (\u200b_The update_\u200b)"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-22",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-21",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-10",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-10",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-10",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-31",children:"period"}),"\n",(0,r.jsx)(i.p,{children:"The window period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-10",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-open-double-high-double-low-double-close--void-1",children:"update_raw(self, double open, double high, double low, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"open"})," (\u200b_double_\u200b) \u2013 The open price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"high"})," (\u200b_double_\u200b) \u2013 The high price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"low"})," (\u200b_double_\u200b) \u2013 The low price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-31",children:"value"}),"\n",(0,r.jsx)(i.p,{children:"The last fuzzy candle."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," FuzzyCandle"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"vector-1",children:"vector"}),"\n",(0,r.jsx)(i.p,{children:"The fuzzy candle represented as a vector of ints."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," list[int]"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-chandemomentumoscillator-1",children:[(0,r.jsx)(i.em,{children:"class"})," ChandeMomentumOscillator"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"ChandeMomentumOscillator(int period, ma_type=None)"}),"\n",(0,r.jsx)(i.p,{children:"Attempts to capture the momentum of an asset with overbought at 50 and oversold at -50."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (\u200b_int_\u200b) \u2013 The moving average type for average gain/loss."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The rolling window period for the indicator."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-46",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-23",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-22",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-11",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-11",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-11",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-32",children:"period"}),"\n",(0,r.jsx)(i.p,{children:"The window period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-11",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-close--void-8",children:"update_raw(self, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"value"})," (\u200b_double_\u200b) \u2013 The update value."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-32",children:"value"}),"\n",(0,r.jsx)(i.p,{children:"The current value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-commoditychannelindex-1",children:[(0,r.jsx)(i.em,{children:"class"})," CommodityChannelIndex"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"CommodityChannelIndex(int period, double scalar=0.015, ma_type=None)"}),"\n",(0,r.jsx)(i.p,{children:"Commodity Channel Index is a momentum oscillator used to primarily identify overbought and oversold levels relative to a mean."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"scalar"})," (\u200b_double_\u200b) \u2013 A positive float to scale the bands"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for prices."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-47",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-24",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-23",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-12",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-12",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-12",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-33",children:"period"}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-12",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"scalar-2",children:"scalar"}),"\n",(0,r.jsx)(i.p,{children:"The positive float to scale the bands."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-high-double-low-double-close--void-7",children:"update_raw(self, double high, double low, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"high"})," (\u200b_double_\u200b) \u2013 The high price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"low"})," (\u200b_double_\u200b) \u2013 The low price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-33",children:"value"}),"\n",(0,r.jsx)(i.p,{children:"The current value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-efficiencyratio-1",children:[(0,r.jsx)(i.em,{children:"class"})," EfficiencyRatio"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"EfficiencyRatio(int period)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates the efficiency ratio across a rolling window. The Kaufman Efficiency measures the ratio of the relative market speed in relation to the volatility, this could be thought of as a proxy for noise."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (>= 2)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not >= 2."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-48",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-25",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-24",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-13",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-13",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-13",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-34",children:"period"}),"\n",(0,r.jsx)(i.p,{children:"The window period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-13",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-price--void-2",children:"update_raw(self, double price) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given price."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"price"})," (\u200b_double_\u200b) \u2013 The update price."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-34",children:"value"}),"\n",(0,r.jsx)(i.p,{children:"The current value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-psychologicalline-1",children:[(0,r.jsx)(i.em,{children:"class"})," PsychologicalLine"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"PsychologicalLine(int period, ma_type=None)"}),"\n",(0,r.jsx)(i.p,{children:"The Psychological Line is an oscillator-type indicator that compares the number of the rising periods to the total number of periods. In other words, it is the percentage of bars that close above the previous bar over a given period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the indicator (cannot be None)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-49",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-26",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-25",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-14",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-14",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-14",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-35",children:"period"}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-14",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-close--void-9",children:"update_raw(self, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-35",children:"value"}),"\n",(0,r.jsxs)(i.h3,{id:"class-rateofchange-1",children:[(0,r.jsx)(i.em,{children:"class"})," RateOfChange"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"RateOfChange(int period, bool use_log=False)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates the rate of change of price over a defined period. The return output can be simple or log."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The period for the indicator."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"use_log"})," (\u200b_bool_\u200b) \u2013 Use log returns for value calculation."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not > 1."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-50",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-27",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-26",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-15",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-15",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-15",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-36",children:"period"}),"\n",(0,r.jsx)(i.p,{children:"The window period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-15",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-price--void-3",children:"update_raw(self, double price) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given price."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"price"})," (\u200b_double_\u200b) \u2013 The update price."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-36",children:"value"}),"\n",(0,r.jsx)(i.p,{children:"The current value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-relativestrengthindex-1",children:[(0,r.jsx)(i.em,{children:"class"})," RelativeStrengthIndex"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"RelativeStrengthIndex(int period, ma_type=None)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates a relative strength index (RSI) across a rolling window."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (\u200b_int_\u200b) \u2013 The moving average type for average gain/loss."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The rolling window period for the indicator."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not positive (> 0)."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-51",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-28",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-27",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-16",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-16",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-16",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-37",children:"period"}),"\n",(0,r.jsx)(i.p,{children:"The window period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-16",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-value--void-19",children:"update_raw(self, double value) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"value"})," (\u200b_double_\u200b) \u2013 The update value."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-37",children:"value"}),"\n",(0,r.jsx)(i.p,{children:"The current value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-relativevolatilityindex-1",children:[(0,r.jsx)(i.em,{children:"class"})," RelativeVolatilityIndex"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"RelativeVolatilityIndex(int period, double scalar=100.0, ma_type=None)"}),"\n",(0,r.jsx)(i.p,{children:"The Relative Volatility Index (RVI) was created in 1993 and revised in 1995. Instead of adding up price changes like RSI based on price direction, the RVI adds up standard deviations based on price direction."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"scalar"})," (\u200b_double_\u200b) \u2013 A positive float to scale the bands."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the vip and vim (cannot be None)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-52",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-29",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-28",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-17",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-17",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-17",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-38",children:"period"}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-17",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"scalar-3",children:"scalar"}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-close--void-10",children:"update_raw(self, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-38",children:"value"}),"\n",(0,r.jsxs)(i.h3,{id:"class-stochastics-1",children:[(0,r.jsx)(i.em,{children:"class"})," Stochastics"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"Stochastics(int period_k, int period_d)"}),"\n",(0,r.jsx)(i.p,{children:"An oscillator which can indicate when an asset may be over bought or over sold."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period_k"})," (\u200b_int_\u200b) \u2013 The period for the K line."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period_d"})," (\u200b_int_\u200b) \u2013 The period for the D line."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period_k is not positive (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period_d is not positive (> 0)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-53",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-30",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-29",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-18",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-18",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-18",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period_d-1",children:"period_d"}),"\n",(0,r.jsx)(i.p,{children:"The d period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period_k-1",children:"period_k"}),"\n",(0,r.jsx)(i.p,{children:"The k period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-18",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-high-double-low-double-close--void-8",children:"update_raw(self, double high, double low, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"high"})," (\u200b_double_\u200b) \u2013 The high price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"low"})," (\u200b_double_\u200b) \u2013 The low price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value_d-1",children:"value_d"}),"\n",(0,r.jsx)(i.p,{children:"The d value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value_k-1",children:"value_k"}),"\n",(0,r.jsx)(i.p,{children:"The k value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-spreadanalyzer-1",children:[(0,r.jsx)(i.em,{children:"class"})," SpreadAnalyzer"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"SpreadAnalyzer(InstrumentId instrument_id, int capacity) -> None"}),"\n",(0,r.jsx)(i.p,{children:"Provides various spread analysis metrics."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"instrument_id"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,r.jsx)(i.em,{children:"InstrumentId"})}),") \u2013 The instrument ID for the tick updates."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"capacity"})," (\u200b_int_\u200b) \u2013 The max length for the internal QuoteTick deque (determines averages)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If capacity is not positive (> 0)."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"average-1",children:"average"}),"\n",(0,r.jsx)(i.p,{children:"The current average spread."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"capacity-1",children:"capacity"}),"\n",(0,r.jsx)(i.p,{children:"The indicators spread capacity."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"current-1",children:"current"}),"\n",(0,r.jsx)(i.p,{children:"The current spread."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-54",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-31",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the analyzer with the given quote tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(i.em,{children:"QuoteTick"})}),") \u2013 The tick for the update."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If tick.instrument_id does not equal the analyzers instrument ID."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-30",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-19",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-19",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"instrument_id-1",children:"instrument_id"}),"\n",(0,r.jsx)(i.p,{children:"The indicators instrument ID."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," InstrumentId"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-19",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-19",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsxs)(i.h3,{id:"class-archermovingaveragestrends-1",children:[(0,r.jsx)(i.em,{children:"class"})," ArcherMovingAveragesTrends"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"ArcherMovingAveragesTrends(int fast_period, int slow_period, int signal_period, MovingAverageType ma_type=MovingAverageType.EXPONENTIAL)"}),"\n",(0,r.jsx)(i.p,{children:"Archer Moving Averages Trends indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"fast_period"})," (\u200b_int_\u200b) \u2013 The period for the fast moving average (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"slow_period"})," (\u200b_int_\u200b) \u2013 The period for the slow moving average (> 0 & > fast_sma)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"signal_period"})," (\u200b_int_\u200b) \u2013 The period for lookback price array (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the calculations."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"fast_period-4",children:"fast_period"}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-55",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-32",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-31",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-20",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-20",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"long_run-1",children:"long_run"}),"\n",(0,r.jsx)(i.h4,{id:"name-20",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-20",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"short_run-1",children:"short_run"}),"\n",(0,r.jsx)(i.h4,{id:"signal_period-2",children:"signal_period"}),"\n",(0,r.jsx)(i.h4,{id:"slow_period-4",children:"slow_period"}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-close--void-11",children:"update_raw(self, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given close price value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-aroonoscillator-1",children:[(0,r.jsx)(i.em,{children:"class"})," AroonOscillator"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"AroonOscillator(int period)"}),"\n",(0,r.jsx)(i.p,{children:"The Aroon (AR) indicator developed by Tushar Chande attempts to determine whether an instrument is trending, and how strong the trend is. AroonUp and AroonDown lines make up the indicator with their formulas below."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"aroon_down-1",children:"aroon_down"}),"\n",(0,r.jsx)(i.p,{children:"The current aroon down value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"aroon_up-1",children:"aroon_up"}),"\n",(0,r.jsx)(i.p,{children:"The current aroon up value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-56",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-33",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-32",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-21",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-21",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-21",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-39",children:"period"}),"\n",(0,r.jsx)(i.p,{children:"The window period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-21",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-high-double-low--void-3",children:"update_raw(self, double high, double low) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"high"})," (\u200b_double_\u200b) \u2013 The high price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"low"})," (\u200b_double_\u200b) \u2013 The low price."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-39",children:"value"}),"\n",(0,r.jsx)(i.p,{children:"The current value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-bias-1",children:[(0,r.jsx)(i.em,{children:"class"})," Bias"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"Bias(int period, MovingAverageType ma_type=MovingAverageType.SIMPLE)"}),"\n",(0,r.jsx)(i.p,{children:"Rate of change between the source and a moving average."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the indicator (cannot be None)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-57",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-34",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-33",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-22",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-22",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-22",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-40",children:"period"}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-22",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-close--void-12",children:"update_raw(self, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-40",children:"value"}),"\n",(0,r.jsxs)(i.h3,{id:"class-directionalmovement-1",children:[(0,r.jsx)(i.em,{children:"class"})," DirectionalMovement"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"DirectionalMovement(int period, MovingAverageType ma_type=MovingAverageType.EXPONENTIAL)"}),"\n",(0,r.jsx)(i.p,{children:"Two oscillators that capture positive and negative trend movement."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the indicator (cannot be None)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-58",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-35",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-34",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-23",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-23",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-23",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"neg-1",children:"neg"}),"\n",(0,r.jsx)(i.h4,{id:"period-41",children:"period"}),"\n",(0,r.jsx)(i.h4,{id:"pos-1",children:"pos"}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-23",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-high-double-low--void-4",children:"update_raw(self, double high, double low) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"high"})," (\u200b_double_\u200b) \u2013 The high price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"low"})," (\u200b_double_\u200b) \u2013 The low price."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-41",children:"value"}),"\n",(0,r.jsxs)(i.h3,{id:"class-linearregression-1",children:[(0,r.jsx)(i.em,{children:"class"})," LinearRegression"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"LinearRegression(int period=0)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator that calculates a simple linear regression."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The period for the indicator."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not greater than zero."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"r2-1",children:"R2"}),"\n",(0,r.jsx)(i.h4,{id:"cfo-1",children:"cfo"}),"\n",(0,r.jsx)(i.h4,{id:"degree-1",children:"degree"}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-59",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-36",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-35",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-24",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-24",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"intercept-1",children:"intercept"}),"\n",(0,r.jsx)(i.h4,{id:"name-24",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-42",children:"period"}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-24",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"slope-1",children:"slope"}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-close--void-13",children:"update_raw(self, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"close_price"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-42",children:"value"}),"\n",(0,r.jsxs)(i.h3,{id:"class-movingaverageconvergencedivergence-1",children:[(0,r.jsx)(i.em,{children:"class"})," MovingAverageConvergenceDivergence"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"MovingAverageConvergenceDivergence(int fast_period, int slow_period, MovingAverageType ma_type=MovingAverageType.EXPONENTIAL, PriceType price_type=PriceType.LAST)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates the difference between two moving averages. Different moving average types can be selected for the inner calculation."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"fast_period"})," (\u200b_int_\u200b) \u2013 The period for the fast moving average (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"slow_period"})," (\u200b_int_\u200b) \u2013 The period for the slow moving average (> 0 & > fast_sma)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the calculations."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"price_type"})," (\u200b_PriceType_\u200b) \u2013 The specified price type for extracting values from quotes."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If fast_period is not positive (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If slow_period is not positive (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If fast_period is not < slow_period."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"fast_period-5",children:"fast_period"}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-60",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-37",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given quote tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,r.jsx)(i.em,{children:"QuoteTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-36",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given trade tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(i.em,{children:"TradeTick"})}),") \u2013 The update tick to handle."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-25",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-25",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-25",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-25",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"slow_period-5",children:"slow_period"}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-close--void-14",children:"update_raw(self, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given close price."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-43",children:"value"}),"\n",(0,r.jsxs)(i.h3,{id:"class-swings-1",children:[(0,r.jsx)(i.em,{children:"class"})," Swings"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"Swings(int period)"}),"\n",(0,r.jsx)(i.p,{children:"A swing indicator which calculates and stores various swing metrics."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"changed-1",children:"changed"}),"\n",(0,r.jsx)(i.h4,{id:"direction-3",children:"direction"}),"\n",(0,r.jsx)(i.h4,{id:"duration-1",children:"duration"}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-61",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-38",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-37",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-26",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"high_datetime-1",children:"high_datetime"}),"\n",(0,r.jsx)(i.h4,{id:"high_price-1",children:"high_price"}),"\n",(0,r.jsx)(i.h4,{id:"initialized-26",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"length-1",children:"length"}),"\n",(0,r.jsx)(i.h4,{id:"low_datetime-1",children:"low_datetime"}),"\n",(0,r.jsx)(i.h4,{id:"low_price-1",children:"low_price"}),"\n",(0,r.jsx)(i.h4,{id:"name-26",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-43",children:"period"}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-26",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"since_high-1",children:"since_high"}),"\n",(0,r.jsx)(i.h4,{id:"since_low-1",children:"since_low"}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-high-double-low-datetime-timestamp--void-1",children:"update_raw(self, double high, double low, datetime timestamp) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"high"})," (\u200b_double_\u200b) \u2013 The high price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"low"})," (\u200b_double_\u200b) \u2013 The low price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"timestamp"})," (\u200b_datetime_\u200b) \u2013 The current timestamp."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-averagetruerange-1",children:[(0,r.jsx)(i.em,{children:"class"})," AverageTrueRange"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"AverageTrueRange(int period, MovingAverageType ma_type=MovingAverageType.SIMPLE, bool use_previous=True, double value_floor=0)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates the average true range across a rolling window. Different moving average types can be selected for the inner calculation."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the indicator (cannot be None)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"use_previous"})," (\u200b_bool_\u200b) \u2013 The boolean flag indicating whether previous price values should be used. (note: only applicable for update(). update_mid() will need to use previous price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"value_floor"})," (\u200b_double_\u200b) \u2013 The floor (minimum) output value for the indicator (>= 0)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-62",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-39",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-38",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-27",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-27",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-27",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-44",children:"period"}),"\n",(0,r.jsx)(i.p,{children:"The window period."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-27",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-high-double-low-double-close--void-9",children:"update_raw(self, double high, double low, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"high"})," (\u200b_double_\u200b) \u2013 The high price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"low"})," (\u200b_double_\u200b) \u2013 The low price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-44",children:"value"}),"\n",(0,r.jsx)(i.p,{children:"The current value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-bollingerbands-1",children:[(0,r.jsx)(i.em,{children:"class"})," BollingerBands"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"BollingerBands(int period, double k, MovingAverageType ma_type=MovingAverageType.SIMPLE)"}),"\n",(0,r.jsx)(i.p,{children:"A Bollinger Band\xae is a technical analysis tool defined by a set of trend lines plotted two standard deviations (positively and negatively) away from a simple moving average (SMA) of an instruments price, which can be adjusted to user preferences."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"k"})," (\u200b_double_\u200b) \u2013 The standard deviation multiple for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the indicator."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not positive (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If k is not positive (> 0)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-63",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-40",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(i.em,{children:"TradeTick"})}),") \u2013 The tick for the update."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-39",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given tick."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(i.em,{children:"TradeTick"})}),") \u2013 The tick for the update."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-28",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-28",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"k-1",children:"k"}),"\n",(0,r.jsx)(i.p,{children:"The standard deviation multiple."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"lower-3",children:"lower"}),"\n",(0,r.jsx)(i.p,{children:"The current value of the lower band."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"middle-3",children:"middle"}),"\n",(0,r.jsx)(i.p,{children:"The current value of the middle band."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-28",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-45",children:"period"}),"\n",(0,r.jsx)(i.p,{children:"The period for the moving average."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," int"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-28",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-high-double-low-double-close--void-10",children:"update_raw(self, double high, double low, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given prices."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"high"})," (\u200b_double_\u200b) \u2013 The high price for calculations."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"low"})," (\u200b_double_\u200b) \u2013 The low price for calculations."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The closing price for calculations"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"upper-3",children:"upper"}),"\n",(0,r.jsx)(i.p,{children:"The current value of the upper band."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," double"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"class-donchianchannel-1",children:[(0,r.jsx)(i.em,{children:"class"})," DonchianChannel"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"DonchianChannel(int period)"}),"\n",(0,r.jsx)(i.p,{children:"Donchian Channels are three lines generated by moving average calculations that comprise an indicator formed by upper and lower bands around a mid-range or median band. The upper band marks the highest price of a instrument_id over N periods while the lower band marks the lowest price of a instrument_id over N periods. The area between the upper and lower bands represents the Donchian Channel."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not positive (> 0)."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-64",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-41",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given ticks high and low prices."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(i.em,{children:"TradeTick"})}),") \u2013 The tick for the update."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-40",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given ticks price."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"tick"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,r.jsx)(i.em,{children:"TradeTick"})}),") \u2013 The tick for the update."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-29",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-29",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"lower-4",children:"lower"}),"\n",(0,r.jsx)(i.h4,{id:"middle-4",children:"middle"}),"\n",(0,r.jsx)(i.h4,{id:"name-29",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-46",children:"period"}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-29",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-high-double-low--void-5",children:"update_raw(self, double high, double low) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given prices."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"high"})," (\u200b_double_\u200b) \u2013 The price for the upper channel."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"low"})," (\u200b_double_\u200b) \u2013 The price for the lower channel."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"upper-4",children:"upper"}),"\n",(0,r.jsxs)(i.h3,{id:"class-keltnerchannel-1",children:[(0,r.jsx)(i.em,{children:"class"})," KeltnerChannel"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"KeltnerChannel(int period, double k_multiplier, MovingAverageType ma_type=MovingAverageType.EXPONENTIAL, MovingAverageType ma_type_atr=MovingAverageType.SIMPLE, bool use_previous=True, double atr_floor=0)"}),"\n",(0,r.jsx)(i.p,{children:"The Keltner channel is a volatility based envelope set above and below a central moving average. Traditionally the middle band is an EMA based on the typical price (high + low + close) / 3, the upper band is the middle band plus the ATR. The lower band is the middle band minus the ATR."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"k_multiplier"})," (\u200b_double_\u200b) \u2013 The multiplier for the ATR (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the middle band (cannot be None)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type_atr"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the internal ATR (cannot be None)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"use_previous"})," (\u200b_bool_\u200b) \u2013 The boolean flag indicating whether previous price values should be used."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"atr_floor"})," (\u200b_double_\u200b) \u2013 The ATR floor (minimum) output value for the indicator (>= 0)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-65",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-42",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-41",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-30",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-30",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"k_multiplier-2",children:"k_multiplier"}),"\n",(0,r.jsx)(i.h4,{id:"lower-5",children:"lower"}),"\n",(0,r.jsx)(i.h4,{id:"middle-5",children:"middle"}),"\n",(0,r.jsx)(i.h4,{id:"name-30",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-47",children:"period"}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-30",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-high-double-low-double-close--void-11",children:"update_raw(self, double high, double low, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"high"})," (\u200b_double_\u200b) \u2013 The high price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"low"})," (\u200b_double_\u200b) \u2013 The low price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"upper-5",children:"upper"}),"\n",(0,r.jsxs)(i.h3,{id:"class-keltnerposition-1",children:[(0,r.jsx)(i.em,{children:"class"})," KeltnerPosition"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"KeltnerPosition(int period, double k_multiplier, MovingAverageType ma_type=MovingAverageType.EXPONENTIAL, MovingAverageType ma_type_atr=MovingAverageType.SIMPLE, bool use_previous=True, double atr_floor=0)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates the relative position of the given price within a defined Keltner channel. This provides a measure of the relative \u2018extension\u2019 of a market from the mean, as a multiple of volatility."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"k_multiplier"})," (\u200b_double_\u200b) \u2013 The multiplier for the ATR (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the middle band (cannot be None)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type_atr"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the internal ATR (cannot be None)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"use_previous"})," (\u200b_bool_\u200b) \u2013 The boolean flag indicating whether previous price values should be used."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"atr_floor"})," (\u200b_double_\u200b) \u2013 The ATR floor (minimum) output value for the indicator (>= 0)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-66",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-43",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-42",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-31",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-31",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"k_multiplier-3",children:"k_multiplier"}),"\n",(0,r.jsx)(i.h4,{id:"name-31",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-48",children:"period"}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-31",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-high-double-low-double-close--void-12",children:"update_raw(self, double high, double low, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"high"})," (\u200b_double_\u200b) \u2013 The high price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"low"})," (\u200b_double_\u200b) \u2013 The low price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-45",children:"value"}),"\n",(0,r.jsxs)(i.h3,{id:"class-verticalhorizontalfilter-1",children:[(0,r.jsx)(i.em,{children:"class"})," VerticalHorizontalFilter"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"VerticalHorizontalFilter(int period, MovingAverageType ma_type=MovingAverageType.SIMPLE)"}),"\n",(0,r.jsx)(i.p,{children:"The Vertical Horizon Filter (VHF) was created by Adam White to identify trending and ranging markets."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The rolling window period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the indicator (cannot be None)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-67",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-44",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-43",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-32",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-32",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-32",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-49",children:"period"}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-32",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-close--void-15",children:"update_raw(self, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-46",children:"value"}),"\n",(0,r.jsxs)(i.h3,{id:"class-volatilityratio-1",children:[(0,r.jsx)(i.em,{children:"class"})," VolatilityRatio"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"VolatilityRatio(int fast_period, int slow_period, MovingAverageType ma_type=MovingAverageType.SIMPLE, bool use_previous=True, double value_floor=0)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates the ratio of different ranges of volatility. Different moving average types can be selected for the inner ATR calculations."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"fast_period"})," (\u200b_int_\u200b) \u2013 The period for the fast ATR (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"slow_period"})," (\u200b_int_\u200b) \u2013 The period for the slow ATR (> 0 & > fast_period)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the ATR calculations."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"use_previous"})," (\u200b_bool_\u200b) \u2013 The boolean flag indicating whether previous price values should be used."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"value_floor"})," (\u200b_double_\u200b) \u2013 The floor (minimum) output value for the indicator (>= 0)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If fast_period is not positive (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If slow_period is not positive (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If fast_period is not < slow_period."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If value_floor is negative (< 0)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"fast_period-6",children:"fast_period"}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-68",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-45",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-44",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-33",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-33",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-33",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-33",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"slow_period-6",children:"slow_period"}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-high-double-low-double-close--void-13",children:"update_raw(self, double high, double low, double close) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw value."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"high"})," (\u200b_double_\u200b) \u2013 The high price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"low"})," (\u200b_double_\u200b) \u2013 The low price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-47",children:"value"}),"\n",(0,r.jsxs)(i.h3,{id:"class-klingervolumeoscillator-1",children:[(0,r.jsx)(i.em,{children:"class"})," KlingerVolumeOscillator"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"KlingerVolumeOscillator(int fast_period, int slow_period, int signal_period, MovingAverageType ma_type=MovingAverageType.EXPONENTIAL)"}),"\n",(0,r.jsx)(i.p,{children:"This indicator was developed by Stephen J. Klinger. It is designed to predict price reversals in a market by comparing volume to price."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"fast_period"})," (\u200b_int_\u200b) \u2013 The period for the fast moving average (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"slow_period"})," (\u200b_int_\u200b) \u2013 The period for the slow moving average (> 0 & > fast_sma)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"signal_period"})," (\u200b_int_\u200b) \u2013 The period for the moving average difference\u2019s moving average (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the calculations."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"fast_period-7",children:"fast_period"}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-69",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-46",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-45",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-34",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-34",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-34",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-34",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"signal_period-3",children:"signal_period"}),"\n",(0,r.jsx)(i.h4,{id:"slow_period-7",children:"slow_period"}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-high-double-low-double-close-double-volume--void-2",children:"update_raw(self, double high, double low, double close, double volume) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"high"})," (\u200b_double_\u200b) \u2013 The high price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"low"})," (\u200b_double_\u200b) \u2013 The low price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"volume"})," (\u200b_double_\u200b) \u2013 The volume."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-48",children:"value"}),"\n",(0,r.jsxs)(i.h3,{id:"class-onbalancevolume-1",children:[(0,r.jsx)(i.em,{children:"class"})," OnBalanceVolume"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"OnBalanceVolume(int period=0)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates the momentum of relative positive or negative volume."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The period for the indicator, zero indicates no window (>= 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"})," ",(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is negative (< 0)."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-70",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-47",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-46",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-35",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-35",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-35",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-50",children:"period"}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-35",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-open-double-close-double-volume--void-1",children:"update_raw(self, double open, double close, double volume) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"open"})," (\u200b_double_\u200b) \u2013 The high price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The low price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"volume"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-49",children:"value"}),"\n",(0,r.jsxs)(i.h3,{id:"class-pressure-1",children:[(0,r.jsx)(i.em,{children:"class"})," Pressure"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"Pressure(int period, MovingAverageType ma_type=MovingAverageType.EXPONENTIAL, double atr_floor=0)"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates the relative volume (multiple of average volume) to move the market across a relative range (multiple of ATR)."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"})," (\u200b_int_\u200b) \u2013 The period for the indicator (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ma_type"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.MovingAverageType",children:(0,r.jsx)(i.em,{children:"MovingAverageType"})}),") \u2013 The moving average type for the calculations."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"atr_floor"})," (\u200b_double_\u200b) \u2013 The ATR floor (minimum) output value for the indicator (>= 0.)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Raises:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If period is not positive (> 0)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"ValueError"})," \u2013 If atr_floor is negative (< 0)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-71",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-48",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-47",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-36",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-36",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-36",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"period-51",children:"period"}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-36",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-high-double-low-double-close-double-volume--void-3",children:"update_raw(self, double high, double low, double close, double volume) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"high"})," (\u200b_double_\u200b) \u2013 The high price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"low"})," (\u200b_double_\u200b) \u2013 The low price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"close"})," (\u200b_double_\u200b) \u2013 The close price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"volume"})," (\u200b_double_\u200b) \u2013 The volume."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-50",children:"value"}),"\n",(0,r.jsx)(i.h4,{id:"value_cumulative-1",children:"value_cumulative"}),"\n",(0,r.jsxs)(i.h3,{id:"class-volumeweightedaverageprice-1",children:[(0,r.jsx)(i.em,{children:"class"})," VolumeWeightedAveragePrice"]}),"\n",(0,r.jsxs)(i.p,{children:["Bases: ",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,r.jsx)(i.code,{children:"Indicator"})})]}),"\n",(0,r.jsx)(i.p,{children:"VolumeWeightedAveragePrice()"}),"\n",(0,r.jsx)(i.p,{children:"An indicator which calculates the volume weighted average price for the day."}),"\n",(0,r.jsx)(i.h4,{id:"handle_barself-bar-bar--void-72",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given bar."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"})," ",(0,r.jsx)(i.strong,{children:"bar"})," (",(0,r.jsx)(i.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,r.jsx)(i.em,{children:"Bar"})}),") \u2013 The update bar."]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"handle_quote_tickself-quotetick-tick--void-49",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"handle_trade_tickself-tradetick-tick--void-48",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Abstract method (implement in subclass)."}),"\n",(0,r.jsx)(i.h4,{id:"has_inputs-37",children:"has_inputs"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator has received inputs."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"initialized-37",children:"initialized"}),"\n",(0,r.jsx)(i.p,{children:"If the indicator is warmed up and initialized."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"name-37",children:"name"}),"\n",(0,r.jsx)(i.p,{children:"The name of the indicator."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"resetself--void-37",children:"reset(self) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Reset the indicator."}),"\n",(0,r.jsx)(i.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,r.jsx)(i.h4,{id:"update_rawself-double-price-double-volume-datetime-timestamp--void-1",children:"update_raw(self, double price, double volume, datetime timestamp) \u2192 void"}),"\n",(0,r.jsx)(i.p,{children:"Update the indicator with the given raw values."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parameters:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"price"})," (\u200b_double_\u200b) \u2013 The update price."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"volume"})," (\u200b_double_\u200b) \u2013 The update volume."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"timestamp"})," (\u200b_datetime_\u200b) \u2013 The current timestamp."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"value-51",children:"value"})]})}function o(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},9087:(e,i,n)=>{n.d(i,{R:()=>d,x:()=>a});var l=n(6363);const r={},s=l.createContext(r);function d(e){const i=l.useContext(s);return l.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),l.createElement(s.Provider,{value:i},e.children)}}}]);