"use strict";(globalThis.webpackChunknautilus_trader=globalThis.webpackChunknautilus_trader||[]).push([[111],{5965:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"api_reference/trading","title":"Trading","description":"The trading subpackage groups all trading domain specific components and tooling.","source":"@site/docs/api_reference/trading.md","sourceDirName":"api_reference","slug":"/api_reference/trading","permalink":"/api_reference/trading","draft":false,"unlisted":false,"editUrl":"https://github.com/Aloento/NautilusTraderDoc/tree/main/docs/api_reference/trading.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"System","permalink":"/api_reference/system"},"next":{"title":"\u6982\u5ff5","permalink":"/concepts/"}}');var t=i(7259),s=i(9087);const d={},l="Trading",a={},o=[{value:"<em>class</em> Controller",id:"class-controller",level:3},{value:"create_actor(actor: Actor, start: bool = True) \u2192 None",id:"create_actoractor-actor-start-bool--true--none",level:4},{value:"create_actor_from_config(actor_config: ImportableActorConfig, start: bool = True) \u2192 None",id:"create_actor_from_configactor_config-importableactorconfig-start-bool--true--none",level:4},{value:"create_strategy(strategy: Strategy, start: bool = True) \u2192 None",id:"create_strategystrategy-strategy-start-bool--true--none",level:4},{value:"create_strategy_from_config(strategy_config: ImportableStrategyConfig, start: bool = True) \u2192 None",id:"create_strategy_from_configstrategy_config-importablestrategyconfig-start-bool--true--none",level:4},{value:"execute(command: Command) \u2192 None",id:"executecommand-command--none",level:4},{value:"register_base(self, PortfolioFacade portfolio, MessageBus msgbus, CacheFacade cache, Clock clock) \u2192 void",id:"register_baseself-portfoliofacade-portfolio-messagebus-msgbus-cachefacade-cache-clock-clock--void",level:4},{value:"WARNING",id:"warning",level:4},{value:"remove_actor(actor: Actor) \u2192 None",id:"remove_actoractor-actor--none",level:4},{value:"remove_actor_from_id(actor_id: ComponentId) \u2192 None",id:"remove_actor_from_idactor_id-componentid--none",level:4},{value:"remove_strategy(strategy: Strategy) \u2192 None",id:"remove_strategystrategy-strategy--none",level:4},{value:"remove_strategy_from_id(strategy_id: StrategyId) \u2192 None",id:"remove_strategy_from_idstrategy_id-strategyid--none",level:4},{value:"start_actor(actor: Actor) \u2192 None",id:"start_actoractor-actor--none",level:4},{value:"start_actor_from_id(actor_id: ComponentId) \u2192 None",id:"start_actor_from_idactor_id-componentid--none",level:4},{value:"start_strategy(strategy: Strategy) \u2192 None",id:"start_strategystrategy-strategy--none",level:4},{value:"start_strategy_from_id(strategy_id: StrategyId) \u2192 None",id:"start_strategy_from_idstrategy_id-strategyid--none",level:4},{value:"stop_actor(actor: Actor) \u2192 None",id:"stop_actoractor-actor--none",level:4},{value:"stop_actor_from_id(actor_id: ComponentId) \u2192 None",id:"stop_actor_from_idactor_id-componentid--none",level:4},{value:"stop_strategy(strategy: Strategy) \u2192 None",id:"stop_strategystrategy-strategy--none",level:4},{value:"stop_strategy_from_id(strategy_id: StrategyId) \u2192 None",id:"stop_strategy_from_idstrategy_id-strategyid--none",level:4},{value:"<em>class</em> Strategy",id:"class-strategy",level:3},{value:"WARNING",id:"warning-1",level:4},{value:"cancel_all_orders(self, InstrumentId instrument_id, OrderSide order_side=OrderSide.NO_ORDER_SIDE, ClientId client_id=None, dict params=None) \u2192 void",id:"cancel_all_ordersself-instrumentid-instrument_id-orderside-order_sideordersideno_order_side-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"cancel_gtd_expiry(self, Order order) \u2192 void",id:"cancel_gtd_expiryself-order-order--void",level:4},{value:"cancel_order(self, Order order, ClientId client_id=None, dict params=None) \u2192 void",id:"cancel_orderself-order-order-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"cancel_orders(self, list orders, ClientId client_id=None, dict params=None) \u2192 void",id:"cancel_ordersself-list-orders-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"change_id(self, StrategyId strategy_id) \u2192 void",id:"change_idself-strategyid-strategy_id--void",level:4},{value:"change_order_id_tag(self, str order_id_tag) \u2192 void",id:"change_order_id_tagself-str-order_id_tag--void",level:4},{value:"close_all_positions(self, InstrumentId instrument_id, PositionSide position_side=PositionSide.NO_POSITION_SIDE, ClientId client_id=None, list tags=None, TimeInForce time_in_force=TimeInForce.GTC, bool reduce_only=True, dict params=None) \u2192 void",id:"close_all_positionsself-instrumentid-instrument_id-positionside-position_sidepositionsideno_position_side-clientid-client_idnone-list-tagsnone-timeinforce-time_in_forcetimeinforcegtc-bool-reduce_onlytrue-dict-paramsnone--void",level:4},{value:"close_position(self, Position position, ClientId client_id=None, list tags=None, TimeInForce time_in_force=TimeInForce.GTC, bool reduce_only=True, dict params=None) \u2192 void",id:"close_positionself-position-position-clientid-client_idnone-list-tagsnone-timeinforce-time_in_forcetimeinforcegtc-bool-reduce_onlytrue-dict-paramsnone--void",level:4},{value:"external_order_claims",id:"external_order_claims",level:4},{value:"handle_event(self, Event event) \u2192 void",id:"handle_eventself-event-event--void",level:4},{value:"WARNING",id:"warning-2",level:4},{value:"manage_contingent_orders",id:"manage_contingent_orders",level:4},{value:"manage_gtd_expiry",id:"manage_gtd_expiry",level:4},{value:"modify_order(self, Order order, Quantity quantity=None, Price price=None, Price trigger_price=None, ClientId client_id=None, dict params=None) \u2192 void",id:"modify_orderself-order-order-quantity-quantitynone-price-pricenone-price-trigger_pricenone-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"WARNING",id:"warning-3",level:4},{value:"oms_type",id:"oms_type",level:4},{value:"on_order_accepted(self, OrderAccepted event) \u2192 void",id:"on_order_acceptedself-orderaccepted-event--void",level:4},{value:"WARNING",id:"warning-4",level:4},{value:"on_order_cancel_rejected(self, OrderCancelRejected event) \u2192 void",id:"on_order_cancel_rejectedself-ordercancelrejected-event--void",level:4},{value:"WARNING",id:"warning-5",level:4},{value:"on_order_canceled(self, OrderCanceled event) \u2192 void",id:"on_order_canceledself-ordercanceled-event--void",level:4},{value:"WARNING",id:"warning-6",level:4},{value:"on_order_denied(self, OrderDenied event) \u2192 void",id:"on_order_deniedself-orderdenied-event--void",level:4},{value:"WARNING",id:"warning-7",level:4},{value:"on_order_emulated(self, OrderEmulated event) \u2192 void",id:"on_order_emulatedself-orderemulated-event--void",level:4},{value:"WARNING",id:"warning-8",level:4},{value:"on_order_event(self, OrderEvent event) \u2192 void",id:"on_order_eventself-orderevent-event--void",level:4},{value:"WARNING",id:"warning-9",level:4},{value:"on_order_expired(self, OrderExpired event) \u2192 void",id:"on_order_expiredself-orderexpired-event--void",level:4},{value:"WARNING",id:"warning-10",level:4},{value:"on_order_filled(self, OrderFilled event) \u2192 void",id:"on_order_filledself-orderfilled-event--void",level:4},{value:"WARNING",id:"warning-11",level:4},{value:"on_order_initialized(self, OrderInitialized event) \u2192 void",id:"on_order_initializedself-orderinitialized-event--void",level:4},{value:"WARNING",id:"warning-12",level:4},{value:"on_order_modify_rejected(self, OrderModifyRejected event) \u2192 void",id:"on_order_modify_rejectedself-ordermodifyrejected-event--void",level:4},{value:"WARNING",id:"warning-13",level:4},{value:"on_order_pending_cancel(self, OrderPendingCancel event) \u2192 void",id:"on_order_pending_cancelself-orderpendingcancel-event--void",level:4},{value:"WARNING",id:"warning-14",level:4},{value:"on_order_pending_update(self, OrderPendingUpdate event) \u2192 void",id:"on_order_pending_updateself-orderpendingupdate-event--void",level:4},{value:"WARNING",id:"warning-15",level:4},{value:"on_order_rejected(self, OrderRejected event) \u2192 void",id:"on_order_rejectedself-orderrejected-event--void",level:4},{value:"WARNING",id:"warning-16",level:4},{value:"on_order_released(self, OrderReleased event) \u2192 void",id:"on_order_releasedself-orderreleased-event--void",level:4},{value:"WARNING",id:"warning-17",level:4},{value:"on_order_submitted(self, OrderSubmitted event) \u2192 void",id:"on_order_submittedself-ordersubmitted-event--void",level:4},{value:"WARNING",id:"warning-18",level:4},{value:"on_order_triggered(self, OrderTriggered event) \u2192 void",id:"on_order_triggeredself-ordertriggered-event--void",level:4},{value:"WARNING",id:"warning-19",level:4},{value:"on_order_updated(self, OrderUpdated event) \u2192 void",id:"on_order_updatedself-orderupdated-event--void",level:4},{value:"WARNING",id:"warning-20",level:4},{value:"on_position_changed(self, PositionChanged event) \u2192 void",id:"on_position_changedself-positionchanged-event--void",level:4},{value:"WARNING",id:"warning-21",level:4},{value:"on_position_closed(self, PositionClosed event) \u2192 void",id:"on_position_closedself-positionclosed-event--void",level:4},{value:"WARNING",id:"warning-22",level:4},{value:"on_position_event(self, PositionEvent event) \u2192 void",id:"on_position_eventself-positionevent-event--void",level:4},{value:"WARNING",id:"warning-23",level:4},{value:"on_position_opened(self, PositionOpened event) \u2192 void",id:"on_position_openedself-positionopened-event--void",level:4},{value:"WARNING",id:"warning-24",level:4},{value:"on_reset(self) \u2192 void",id:"on_resetself--void",level:4},{value:"on_resume(self) \u2192 void",id:"on_resumeself--void",level:4},{value:"on_start(self) \u2192 void",id:"on_startself--void",level:4},{value:"on_stop(self) \u2192 void",id:"on_stopself--void",level:4},{value:"order_factory",id:"order_factory",level:4},{value:"order_id_tag",id:"order_id_tag",level:4},{value:"query_account(self, AccountId account_id, ClientId client_id=None, dict params=None) \u2192 void",id:"query_accountself-accountid-account_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"query_order(self, Order order, ClientId client_id=None, dict params=None) \u2192 void",id:"query_orderself-order-order-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"register(self, TraderId trader_id, PortfolioFacade portfolio, MessageBus msgbus, CacheFacade cache, Clock clock) \u2192 void",id:"registerself-traderid-trader_id-portfoliofacade-portfolio-messagebus-msgbus-cachefacade-cache-clock-clock--void",level:4},{value:"WARNING",id:"warning-25",level:4},{value:"submit_order(self, Order order, PositionId position_id=None, ClientId client_id=None, dict params=None) \u2192 void",id:"submit_orderself-order-order-positionid-position_idnone-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"WARNING",id:"warning-26",level:4},{value:"submit_order_list(self, OrderList order_list, PositionId position_id=None, ClientId client_id=None, dict params=None) \u2192 void",id:"submit_order_listself-orderlist-order_list-positionid-position_idnone-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"WARNING",id:"warning-27",level:4},{value:"to_importable_config(self) \u2192 ImportableStrategyConfig",id:"to_importable_configself--importablestrategyconfig",level:4},{value:"use_hyphens_in_client_order_ids",id:"use_hyphens_in_client_order_ids",level:4},{value:"use_uuid_client_order_ids",id:"use_uuid_client_order_ids",level:4},{value:"<em>class</em> Trader",id:"class-trader",level:3},{value:"actor_ids() \u2192 list[ComponentId]",id:"actor_ids--listcomponentid",level:4},{value:"actor_states() \u2192 dict[ComponentId, str]",id:"actor_states--dictcomponentid-str",level:4},{value:"actors() \u2192 list[Actor]",id:"actors--listactor",level:4},{value:"add_actor(actor: Actor) \u2192 None",id:"add_actoractor-actor--none",level:4},{value:"add_actors(actors: list[Actor]) \u2192 None",id:"add_actorsactors-listactor--none",level:4},{value:"add_exec_algorithm(exec_algorithm: Any) \u2192 None",id:"add_exec_algorithmexec_algorithm-any--none",level:4},{value:"add_exec_algorithms(exec_algorithms: list[Any]) \u2192 None",id:"add_exec_algorithmsexec_algorithms-listany--none",level:4},{value:"add_strategies(strategies: list[Strategy]) \u2192 None",id:"add_strategiesstrategies-liststrategy--none",level:4},{value:"add_strategy(strategy: Strategy) \u2192 None",id:"add_strategystrategy-strategy--none",level:4},{value:"check_residuals() \u2192 None",id:"check_residuals--none",level:4},{value:"clear_actors() \u2192 None",id:"clear_actors--none",level:4},{value:"clear_exec_algorithms() \u2192 None",id:"clear_exec_algorithms--none",level:4},{value:"clear_strategies() \u2192 None",id:"clear_strategies--none",level:4},{value:"exec_algorithm_ids() \u2192 list[ExecAlgorithmId]",id:"exec_algorithm_ids--listexecalgorithmid",level:4},{value:"exec_algorithm_states() \u2192 dict[ExecAlgorithmId, str]",id:"exec_algorithm_states--dictexecalgorithmid-str",level:4},{value:"exec_algorithms() \u2192 list[Any]",id:"exec_algorithms--listany",level:4},{value:"generate_account_report(venue: Venue) \u2192 DataFrame",id:"generate_account_reportvenue-venue--dataframe",level:4},{value:"generate_fills_report() \u2192 DataFrame",id:"generate_fills_report--dataframe",level:4},{value:"generate_order_fills_report() \u2192 DataFrame",id:"generate_order_fills_report--dataframe",level:4},{value:"generate_orders_report() \u2192 DataFrame",id:"generate_orders_report--dataframe",level:4},{value:"generate_positions_report() \u2192 DataFrame",id:"generate_positions_report--dataframe",level:4},{value:"<em>property</em> instance<em>id</em>: UUID4_",id:"property-instanceid-uuid4_",level:4},{value:"load() \u2192 None",id:"load--none",level:4},{value:"remove_actor(actor_id: ComponentId) \u2192 None",id:"remove_actoractor_id-componentid--none",level:4},{value:"remove_strategy(strategy_id: StrategyId) \u2192 None",id:"remove_strategystrategy_id-strategyid--none",level:4},{value:"save() \u2192 None",id:"save--none",level:4},{value:"start_actor(actor_id: ComponentId) \u2192 None",id:"start_actoractor_id-componentid--none",level:4},{value:"start_strategy(strategy_id: StrategyId) \u2192 None",id:"start_strategystrategy_id-strategyid--none",level:4},{value:"stop_actor(actor_id: ComponentId) \u2192 None",id:"stop_actoractor_id-componentid--none",level:4},{value:"stop_strategy(strategy_id: StrategyId) \u2192 None",id:"stop_strategystrategy_id-strategyid--none",level:4},{value:"strategies() \u2192 list[Strategy]",id:"strategies--liststrategy",level:4},{value:"strategy_ids() \u2192 list[StrategyId]",id:"strategy_ids--liststrategyid",level:4},{value:"strategy_states() \u2192 dict[StrategyId, str]",id:"strategy_states--dictstrategyid-str",level:4},{value:"subscribe(topic: str, handler: Callable[[Any], None]) \u2192 None",id:"subscribetopic-str-handler-callableany-none--none",level:4},{value:"unsubscribe(topic: str, handler: Callable[[Any], None]) \u2192 None",id:"unsubscribetopic-str-handler-callableany-none--none",level:4},{value:"<em>class</em> Controller",id:"class-controller-1",level:3},{value:"register_base(self, PortfolioFacade portfolio, MessageBus msgbus, CacheFacade cache, Clock clock) \u2192 void",id:"register_baseself-portfoliofacade-portfolio-messagebus-msgbus-cachefacade-cache-clock-clock--void-1",level:4},{value:"WARNING",id:"warning-28",level:4},{value:"execute(command: Command) \u2192 None",id:"executecommand-command--none-1",level:4},{value:"create_actor(actor: Actor, start: bool = True) \u2192 None",id:"create_actoractor-actor-start-bool--true--none-1",level:4},{value:"create_strategy(strategy: Strategy, start: bool = True) \u2192 None",id:"create_strategystrategy-strategy-start-bool--true--none-1",level:4},{value:"start_actor(actor: Actor) \u2192 None",id:"start_actoractor-actor--none-1",level:4},{value:"start_strategy(strategy: Strategy) \u2192 None",id:"start_strategystrategy-strategy--none-1",level:4},{value:"stop_actor(actor: Actor) \u2192 None",id:"stop_actoractor-actor--none-1",level:4},{value:"stop_strategy(strategy: Strategy) \u2192 None",id:"stop_strategystrategy-strategy--none-1",level:4},{value:"remove_actor(actor: Actor) \u2192 None",id:"remove_actoractor-actor--none-1",level:4},{value:"remove_strategy(strategy: Strategy) \u2192 None",id:"remove_strategystrategy-strategy--none-1",level:4},{value:"create_actor_from_config(actor_config: ImportableActorConfig, start: bool = True) \u2192 None",id:"create_actor_from_configactor_config-importableactorconfig-start-bool--true--none-1",level:4},{value:"create_strategy_from_config(strategy_config: ImportableStrategyConfig, start: bool = True) \u2192 None",id:"create_strategy_from_configstrategy_config-importablestrategyconfig-start-bool--true--none-1",level:4},{value:"start_actor_from_id(actor_id: ComponentId) \u2192 None",id:"start_actor_from_idactor_id-componentid--none-1",level:4},{value:"start_strategy_from_id(strategy_id: StrategyId) \u2192 None",id:"start_strategy_from_idstrategy_id-strategyid--none-1",level:4},{value:"stop_actor_from_id(actor_id: ComponentId) \u2192 None",id:"stop_actor_from_idactor_id-componentid--none-1",level:4},{value:"stop_strategy_from_id(strategy_id: StrategyId) \u2192 None",id:"stop_strategy_from_idstrategy_id-strategyid--none-1",level:4},{value:"remove_actor_from_id(actor_id: ComponentId) \u2192 None",id:"remove_actor_from_idactor_id-componentid--none-1",level:4},{value:"remove_strategy_from_id(strategy_id: StrategyId) \u2192 None",id:"remove_strategy_from_idstrategy_id-strategyid--none-1",level:4},{value:"active_task_ids(self) \u2192 list",id:"active_task_idsself--list",level:4},{value:"add_synthetic(self, SyntheticInstrument synthetic) \u2192 void",id:"add_syntheticself-syntheticinstrument-synthetic--void",level:4},{value:"cache",id:"cache",level:4},{value:"cancel_all_tasks(self) \u2192 void",id:"cancel_all_tasksself--void",level:4},{value:"cancel_task(self, task_id: TaskId) \u2192 void",id:"cancel_taskself-task_id-taskid--void",level:4},{value:"clock",id:"clock",level:4},{value:"config",id:"config",level:4},{value:"degrade(self) \u2192 void",id:"degradeself--void",level:4},{value:"WARNING",id:"warning-29",level:4},{value:"deregister_warning_event(self, type event) \u2192 void",id:"deregister_warning_eventself-type-event--void",level:4},{value:"dispose(self) \u2192 void",id:"disposeself--void",level:4},{value:"WARNING",id:"warning-30",level:4},{value:"fault(self) \u2192 void",id:"faultself--void",level:4},{value:"WARNING",id:"warning-31",level:4},{value:"<em>classmethod</em> fully_qualified_name(cls) \u2192 str",id:"classmethod-fully_qualified_namecls--str",level:4},{value:"greeks",id:"greeks",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void",level:4},{value:"WARNING",id:"warning-32",level:4},{value:"handle_bars(self, list bars) \u2192 void",id:"handle_barsself-list-bars--void",level:4},{value:"WARNING",id:"warning-33",level:4},{value:"handle_data(self, Data data) \u2192 void",id:"handle_dataself-data-data--void",level:4},{value:"WARNING",id:"warning-34",level:4},{value:"handle_event(self, Event event) \u2192 void",id:"handle_eventself-event-event--void-1",level:4},{value:"WARNING",id:"warning-35",level:4},{value:"handle_funding_rate(self, FundingRateUpdate funding_rate) \u2192 void",id:"handle_funding_rateself-fundingrateupdate-funding_rate--void",level:4},{value:"WARNING",id:"warning-36",level:4},{value:"handle_historical_data(self, data) \u2192 void",id:"handle_historical_dataself-data--void",level:4},{value:"WARNING",id:"warning-37",level:4},{value:"handle_index_price(self, IndexPriceUpdate index_price) \u2192 void",id:"handle_index_priceself-indexpriceupdate-index_price--void",level:4},{value:"WARNING",id:"warning-38",level:4},{value:"handle_instrument(self, Instrument instrument) \u2192 void",id:"handle_instrumentself-instrument-instrument--void",level:4},{value:"WARNING",id:"warning-39",level:4},{value:"handle_instrument_close(self, InstrumentClose update) \u2192 void",id:"handle_instrument_closeself-instrumentclose-update--void",level:4},{value:"WARNING",id:"warning-40",level:4},{value:"handle_instrument_status(self, InstrumentStatus data) \u2192 void",id:"handle_instrument_statusself-instrumentstatus-data--void",level:4},{value:"WARNING",id:"warning-41",level:4},{value:"handle_instruments(self, list instruments) \u2192 void",id:"handle_instrumentsself-list-instruments--void",level:4},{value:"WARNING",id:"warning-42",level:4},{value:"handle_mark_price(self, MarkPriceUpdate mark_price) \u2192 void",id:"handle_mark_priceself-markpriceupdate-mark_price--void",level:4},{value:"WARNING",id:"warning-43",level:4},{value:"handle_order_book(self, OrderBook order_book) \u2192 void",id:"handle_order_bookself-orderbook-order_book--void",level:4},{value:"WARNING",id:"warning-44",level:4},{value:"handle_order_book_deltas(self, deltas) \u2192 void",id:"handle_order_book_deltasself-deltas--void",level:4},{value:"WARNING",id:"warning-45",level:4},{value:"handle_order_book_depth(self, OrderBookDepth10 depth) \u2192 void",id:"handle_order_book_depthself-orderbookdepth10-depth--void",level:4},{value:"WARNING",id:"warning-46",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void",level:4},{value:"WARNING",id:"warning-47",level:4},{value:"handle_quote_ticks(self, list ticks) \u2192 void",id:"handle_quote_ticksself-list-ticks--void",level:4},{value:"WARNING",id:"warning-48",level:4},{value:"handle_signal(self, Data signal) \u2192 void",id:"handle_signalself-data-signal--void",level:4},{value:"WARNING",id:"warning-49",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void",level:4},{value:"WARNING",id:"warning-50",level:4},{value:"handle_trade_ticks(self, list ticks) \u2192 void",id:"handle_trade_ticksself-list-ticks--void",level:4},{value:"WARNING",id:"warning-51",level:4},{value:"has_active_tasks(self) \u2192 bool",id:"has_active_tasksself--bool",level:4},{value:"has_any_tasks(self) \u2192 bool",id:"has_any_tasksself--bool",level:4},{value:"has_pending_requests(self) \u2192 bool",id:"has_pending_requestsself--bool",level:4},{value:"has_queued_tasks(self) \u2192 bool",id:"has_queued_tasksself--bool",level:4},{value:"id",id:"id",level:4},{value:"indicators_initialized(self) \u2192 bool",id:"indicators_initializedself--bool",level:4},{value:"is_degraded",id:"is_degraded",level:4},{value:"is_disposed",id:"is_disposed",level:4},{value:"is_faulted",id:"is_faulted",level:4},{value:"is_initialized",id:"is_initialized",level:4},{value:"is_pending_request(self, UUID4 request_id) \u2192 bool",id:"is_pending_requestself-uuid4-request_id--bool",level:4},{value:"is_running",id:"is_running",level:4},{value:"is_stopped",id:"is_stopped",level:4},{value:"load(self, dict state) \u2192 void",id:"loadself-dict-state--void",level:4},{value:"WARNING",id:"warning-52",level:4},{value:"log",id:"log",level:4},{value:"msgbus",id:"msgbus",level:4},{value:"on_bar(self, Bar bar) \u2192 void",id:"on_barself-bar-bar--void",level:4},{value:"WARNING",id:"warning-53",level:4},{value:"on_data(self, data) \u2192 void",id:"on_dataself-data--void",level:4},{value:"WARNING",id:"warning-54",level:4},{value:"on_degrade(self) \u2192 void",id:"on_degradeself--void",level:4},{value:"WARNING",id:"warning-55",level:4},{value:"on_dispose(self) \u2192 void",id:"on_disposeself--void",level:4},{value:"WARNING",id:"warning-56",level:4},{value:"on_event(self, Event event) \u2192 void",id:"on_eventself-event-event--void",level:4},{value:"WARNING",id:"warning-57",level:4},{value:"on_fault(self) \u2192 void",id:"on_faultself--void",level:4},{value:"WARNING",id:"warning-58",level:4},{value:"on_funding_rate(self, FundingRateUpdate funding_rate) \u2192 void",id:"on_funding_rateself-fundingrateupdate-funding_rate--void",level:4},{value:"WARNING",id:"warning-59",level:4},{value:"on_historical_data(self, data) \u2192 void",id:"on_historical_dataself-data--void",level:4},{value:"WARNING",id:"warning-60",level:4},{value:"on_index_price(self, IndexPriceUpdate index_price) \u2192 void",id:"on_index_priceself-indexpriceupdate-index_price--void",level:4},{value:"WARNING",id:"warning-61",level:4},{value:"on_instrument(self, Instrument instrument) \u2192 void",id:"on_instrumentself-instrument-instrument--void",level:4},{value:"WARNING",id:"warning-62",level:4},{value:"on_instrument_close(self, InstrumentClose update) \u2192 void",id:"on_instrument_closeself-instrumentclose-update--void",level:4},{value:"WARNING",id:"warning-63",level:4},{value:"on_instrument_status(self, InstrumentStatus data) \u2192 void",id:"on_instrument_statusself-instrumentstatus-data--void",level:4},{value:"WARNING",id:"warning-64",level:4},{value:"on_load(self, dict state) \u2192 void",id:"on_loadself-dict-state--void",level:4},{value:"WARNING",id:"warning-65",level:4},{value:"on_mark_price(self, MarkPriceUpdate mark_price) \u2192 void",id:"on_mark_priceself-markpriceupdate-mark_price--void",level:4},{value:"WARNING",id:"warning-66",level:4},{value:"on_order_book(self, OrderBook order_book) \u2192 void",id:"on_order_bookself-orderbook-order_book--void",level:4},{value:"WARNING",id:"warning-67",level:4},{value:"on_order_book_deltas(self, deltas) \u2192 void",id:"on_order_book_deltasself-deltas--void",level:4},{value:"WARNING",id:"warning-68",level:4},{value:"on_order_book_depth(self, depth) \u2192 void",id:"on_order_book_depthself-depth--void",level:4},{value:"WARNING",id:"warning-69",level:4},{value:"on_quote_tick(self, QuoteTick tick) \u2192 void",id:"on_quote_tickself-quotetick-tick--void",level:4},{value:"WARNING",id:"warning-70",level:4},{value:"on_reset(self) \u2192 void",id:"on_resetself--void-1",level:4},{value:"WARNING",id:"warning-71",level:4},{value:"on_resume(self) \u2192 void",id:"on_resumeself--void-1",level:4},{value:"WARNING",id:"warning-72",level:4},{value:"on_save(self) \u2192 dict",id:"on_saveself--dict",level:4},{value:"WARNING",id:"warning-73",level:4},{value:"on_signal(self, signal) \u2192 void",id:"on_signalself-signal--void",level:4},{value:"WARNING",id:"warning-74",level:4},{value:"on_start(self) \u2192 void",id:"on_startself--void-1",level:4},{value:"WARNING",id:"warning-75",level:4},{value:"on_stop(self) \u2192 void",id:"on_stopself--void-1",level:4},{value:"WARNING",id:"warning-76",level:4},{value:"on_trade_tick(self, TradeTick tick) \u2192 void",id:"on_trade_tickself-tradetick-tick--void",level:4},{value:"WARNING",id:"warning-77",level:4},{value:"pending_requests(self) \u2192 set",id:"pending_requestsself--set",level:4},{value:"portfolio",id:"portfolio",level:4},{value:"publish_data(self, DataType data_type, Data data) \u2192 void",id:"publish_dataself-datatype-data_type-data-data--void",level:4},{value:"publish_signal(self, str name, value, uint64_t ts_event=0) \u2192 void",id:"publish_signalself-str-name-value-uint64_t-ts_event0--void",level:4},{value:"queue_for_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)",id:"queue_for_executorself-func-callable-any-tuple-argsnone-dict-kwargsnone",level:4},{value:"queued_task_ids(self) \u2192 list",id:"queued_task_idsself--list",level:4},{value:"register_executor(self, loop: asyncio.AbstractEventLoop, executor: Executor) \u2192 void",id:"register_executorself-loop-asyncioabstracteventloop-executor-executor--void",level:4},{value:"register_indicator_for_bars(self, BarType bar_type, Indicator indicator) \u2192 void",id:"register_indicator_for_barsself-bartype-bar_type-indicator-indicator--void",level:4},{value:"register_indicator_for_quote_ticks(self, InstrumentId instrument_id, Indicator indicator) \u2192 void",id:"register_indicator_for_quote_ticksself-instrumentid-instrument_id-indicator-indicator--void",level:4},{value:"register_indicator_for_trade_ticks(self, InstrumentId instrument_id, Indicator indicator) \u2192 void",id:"register_indicator_for_trade_ticksself-instrumentid-instrument_id-indicator-indicator--void",level:4},{value:"register_warning_event(self, type event) \u2192 void",id:"register_warning_eventself-type-event--void",level:4},{value:"registered_indicators",id:"registered_indicators",level:4},{value:"request_aggregated_bars(self, list bar_types, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, bool include_external_data=False, bool update_subscriptions=False, update_catalog: bool = False, dict params=None) \u2192 UUID4",id:"request_aggregated_barsself-list-bar_types-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-bool-include_external_datafalse-bool-update_subscriptionsfalse-update_catalog-bool--false-dict-paramsnone--uuid4",level:4},{value:"request_bars(self, BarType bar_type, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 UUID4",id:"request_barsself-bartype-bar_type-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4",level:4},{value:"request_data(self, DataType data_type, ClientId client_id, InstrumentId instrument_id=None, datetime start=None, datetime end=None, int limit=0, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 UUID4",id:"request_dataself-datatype-data_type-clientid-client_id-instrumentid-instrument_idnone-datetime-startnone-datetime-endnone-int-limit0-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4",level:4},{value:"request_instrument(self, InstrumentId instrument_id, datetime start=None, datetime end=None, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 UUID4",id:"request_instrumentself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4",level:4},{value:"request_instruments(self, Venue venue, datetime start=None, datetime end=None, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 UUID4",id:"request_instrumentsself-venue-venue-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4",level:4},{value:"request_order_book_snapshot(self, InstrumentId instrument_id, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, dict params=None) \u2192 UUID4",id:"request_order_book_snapshotself-instrumentid-instrument_id-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-dict-paramsnone--uuid4",level:4},{value:"request_quote_ticks(self, InstrumentId instrument_id, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 UUID4",id:"request_quote_ticksself-instrumentid-instrument_id-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4",level:4},{value:"request_trade_ticks(self, InstrumentId instrument_id, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 UUID4",id:"request_trade_ticksself-instrumentid-instrument_id-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4",level:4},{value:"reset(self) \u2192 void",id:"resetself--void",level:4},{value:"WARNING",id:"warning-78",level:4},{value:"resume(self) \u2192 void",id:"resumeself--void",level:4},{value:"WARNING",id:"warning-79",level:4},{value:"run_in_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)",id:"run_in_executorself-func-callable-any-tuple-argsnone-dict-kwargsnone",level:4},{value:"save(self) \u2192 dict",id:"saveself--dict",level:4},{value:"WARNING",id:"warning-80",level:4},{value:"shutdown_system(self, str reason=None) \u2192 void",id:"shutdown_systemself-str-reasonnone--void",level:4},{value:"start(self) \u2192 void",id:"startself--void",level:4},{value:"WARNING",id:"warning-81",level:4},{value:"state",id:"state",level:4},{value:"stop(self) \u2192 void",id:"stopself--void",level:4},{value:"WARNING",id:"warning-82",level:4},{value:"subscribe_bars(self, BarType bar_type, ClientId client_id=None, bool await_partial=False, bool update_catalog=False, dict params=None) \u2192 void",id:"subscribe_barsself-bartype-bar_type-clientid-client_idnone-bool-await_partialfalse-bool-update_catalogfalse-dict-paramsnone--void",level:4},{value:"subscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, bool update_catalog=False, dict params=None) \u2192 void",id:"subscribe_dataself-datatype-data_type-clientid-client_idnone-instrumentid-instrument_idnone-bool-update_catalogfalse-dict-paramsnone--void",level:4},{value:"subscribe_funding_rates(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_funding_ratesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"subscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_index_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"subscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_instrumentself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"subscribe_instrument_close(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_instrument_closeself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"subscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_instrument_statusself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"subscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_instrumentsself-venue-venue-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"subscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_mark_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"subscribe_order_book_at_interval(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, int interval_ms=1000, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_order_book_at_intervalself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-int-interval_ms1000-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"WARNING",id:"warning-83",level:4},{value:"subscribe_order_book_deltas(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) \u2192 void",id:"subscribe_order_book_deltasself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-clientid-client_idnone-bool-managedtrue-bool-pyo3_conversionfalse-dict-paramsnone--void",level:4},{value:"subscribe_order_book_depth(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) \u2192 void",id:"subscribe_order_book_depthself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-clientid-client_idnone-bool-managedtrue-bool-pyo3_conversionfalse-dict-paramsnone--void",level:4},{value:"subscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) \u2192 void",id:"subscribe_quote_ticksself-instrumentid-instrument_id-clientid-client_idnone-bool-update_catalogfalse-dict-paramsnone--void",level:4},{value:"subscribe_signal(self, str name=&#39;&#39;) \u2192 void",id:"subscribe_signalself-str-name--void",level:4},{value:"subscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) \u2192 void",id:"subscribe_trade_ticksself-instrumentid-instrument_id-clientid-client_idnone-bool-update_catalogfalse-dict-paramsnone--void",level:4},{value:"to_importable_config(self) \u2192 ImportableActorConfig",id:"to_importable_configself--importableactorconfig",level:4},{value:"trader_id",id:"trader_id",level:4},{value:"type",id:"type",level:4},{value:"unsubscribe_bars(self, BarType bar_type, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_barsself-bartype-bar_type-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"unsubscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, dict params=None) \u2192 void",id:"unsubscribe_dataself-datatype-data_type-clientid-client_idnone-instrumentid-instrument_idnone-dict-paramsnone--void",level:4},{value:"unsubscribe_funding_rates(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_funding_ratesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"unsubscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_index_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"unsubscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_instrumentself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"unsubscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_instrument_statusself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"unsubscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_instrumentsself-venue-venue-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"unsubscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_mark_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"unsubscribe_order_book_at_interval(self, InstrumentId instrument_id, int interval_ms=1000, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_order_book_at_intervalself-instrumentid-instrument_id-int-interval_ms1000-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"unsubscribe_order_book_deltas(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_order_book_deltasself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"unsubscribe_order_book_depth(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_order_book_depthself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"unsubscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_quote_ticksself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"unsubscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_trade_ticksself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",level:4},{value:"update_synthetic(self, SyntheticInstrument synthetic) \u2192 void",id:"update_syntheticself-syntheticinstrument-synthetic--void",level:4},{value:"<em>class</em> NewsImpact",id:"class-newsimpact",level:3},{value:"NONE <em>= 1</em>",id:"none--1",level:4},{value:"LOW <em>= 2</em>",id:"low--2",level:4},{value:"MEDIUM <em>= 3</em>",id:"medium--3",level:4},{value:"HIGH <em>= 4</em>",id:"high--4",level:4},{value:"<em>class</em> NewsEvent",id:"class-newsevent",level:3},{value:"<em>property</em> impact <em>: NewsImpact</em>",id:"property-impact--newsimpact",level:4},{value:"<em>property</em> name <em>: str</em>",id:"property-name--str",level:4},{value:"<em>property</em> currency <em>: Currency</em>",id:"property-currency--currency",level:4},{value:"<em>property</em> ts<em>event</em>: int_",id:"property-tsevent-int_",level:4},{value:"<em>property</em> ts<em>init</em>: int_",id:"property-tsinit-int_",level:4},{value:"<em>classmethod</em> fully_qualified_name(cls) \u2192 str",id:"classmethod-fully_qualified_namecls--str-1",level:4},{value:"<em>classmethod</em> is_signal(cls, str name=&#39;&#39;) \u2192 bool",id:"classmethod-is_signalcls-str-name--bool",level:4},{value:"<em>class</em> EconomicNewsEventFilter",id:"class-economicnewseventfilter",level:3},{value:"<em>property</em> unfiltered_data_start",id:"property-unfiltered_data_start",level:4},{value:"<em>property</em> unfiltered_data_end",id:"property-unfiltered_data_end",level:4},{value:"<em>property</em> currencies",id:"property-currencies",level:4},{value:"<em>property</em> impacts",id:"property-impacts",level:4},{value:"next_event(time_now: datetime) \u2192 NewsEvent | None",id:"next_eventtime_now-datetime--newsevent--none",level:4},{value:"prev_event(time_now: datetime) \u2192 NewsEvent | None",id:"prev_eventtime_now-datetime--newsevent--none",level:4},{value:"<em>class</em> Strategy",id:"class-strategy-1",level:3},{value:"WARNING",id:"warning-84",level:4},{value:"active_task_ids(self) \u2192 list",id:"active_task_idsself--list-1",level:4},{value:"add_synthetic(self, SyntheticInstrument synthetic) \u2192 void",id:"add_syntheticself-syntheticinstrument-synthetic--void-1",level:4},{value:"cache",id:"cache-1",level:4},{value:"cancel_all_orders(self, InstrumentId instrument_id, OrderSide order_side=OrderSide.NO_ORDER_SIDE, ClientId client_id=None, dict params=None) \u2192 void",id:"cancel_all_ordersself-instrumentid-instrument_id-orderside-order_sideordersideno_order_side-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"cancel_all_tasks(self) \u2192 void",id:"cancel_all_tasksself--void-1",level:4},{value:"cancel_gtd_expiry(self, Order order) \u2192 void",id:"cancel_gtd_expiryself-order-order--void-1",level:4},{value:"cancel_order(self, Order order, ClientId client_id=None, dict params=None) \u2192 void",id:"cancel_orderself-order-order-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"cancel_orders(self, list orders, ClientId client_id=None, dict params=None) \u2192 void",id:"cancel_ordersself-list-orders-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"cancel_task(self, task_id: TaskId) \u2192 void",id:"cancel_taskself-task_id-taskid--void-1",level:4},{value:"change_id(self, StrategyId strategy_id) \u2192 void",id:"change_idself-strategyid-strategy_id--void-1",level:4},{value:"change_order_id_tag(self, str order_id_tag) \u2192 void",id:"change_order_id_tagself-str-order_id_tag--void-1",level:4},{value:"clock",id:"clock-1",level:4},{value:"close_all_positions(self, InstrumentId instrument_id, PositionSide position_side=PositionSide.NO_POSITION_SIDE, ClientId client_id=None, list tags=None, TimeInForce time_in_force=TimeInForce.GTC, bool reduce_only=True, dict params=None) \u2192 void",id:"close_all_positionsself-instrumentid-instrument_id-positionside-position_sidepositionsideno_position_side-clientid-client_idnone-list-tagsnone-timeinforce-time_in_forcetimeinforcegtc-bool-reduce_onlytrue-dict-paramsnone--void-1",level:4},{value:"close_position(self, Position position, ClientId client_id=None, list tags=None, TimeInForce time_in_force=TimeInForce.GTC, bool reduce_only=True, dict params=None) \u2192 void",id:"close_positionself-position-position-clientid-client_idnone-list-tagsnone-timeinforce-time_in_forcetimeinforcegtc-bool-reduce_onlytrue-dict-paramsnone--void-1",level:4},{value:"config",id:"config-1",level:4},{value:"degrade(self) \u2192 void",id:"degradeself--void-1",level:4},{value:"WARNING",id:"warning-85",level:4},{value:"deregister_warning_event(self, type event) \u2192 void",id:"deregister_warning_eventself-type-event--void-1",level:4},{value:"dispose(self) \u2192 void",id:"disposeself--void-1",level:4},{value:"WARNING",id:"warning-86",level:4},{value:"external_order_claims",id:"external_order_claims-1",level:4},{value:"fault(self) \u2192 void",id:"faultself--void-1",level:4},{value:"WARNING",id:"warning-87",level:4},{value:"<em>classmethod</em> fully_qualified_name(cls) \u2192 str",id:"classmethod-fully_qualified_namecls--str-2",level:4},{value:"greeks",id:"greeks-1",level:4},{value:"handle_bar(self, Bar bar) \u2192 void",id:"handle_barself-bar-bar--void-1",level:4},{value:"WARNING",id:"warning-88",level:4},{value:"handle_bars(self, list bars) \u2192 void",id:"handle_barsself-list-bars--void-1",level:4},{value:"WARNING",id:"warning-89",level:4},{value:"handle_data(self, Data data) \u2192 void",id:"handle_dataself-data-data--void-1",level:4},{value:"WARNING",id:"warning-90",level:4},{value:"handle_event(self, Event event) \u2192 void",id:"handle_eventself-event-event--void-2",level:4},{value:"WARNING",id:"warning-91",level:4},{value:"handle_funding_rate(self, FundingRateUpdate funding_rate) \u2192 void",id:"handle_funding_rateself-fundingrateupdate-funding_rate--void-1",level:4},{value:"WARNING",id:"warning-92",level:4},{value:"handle_historical_data(self, data) \u2192 void",id:"handle_historical_dataself-data--void-1",level:4},{value:"WARNING",id:"warning-93",level:4},{value:"handle_index_price(self, IndexPriceUpdate index_price) \u2192 void",id:"handle_index_priceself-indexpriceupdate-index_price--void-1",level:4},{value:"WARNING",id:"warning-94",level:4},{value:"handle_instrument(self, Instrument instrument) \u2192 void",id:"handle_instrumentself-instrument-instrument--void-1",level:4},{value:"WARNING",id:"warning-95",level:4},{value:"handle_instrument_close(self, InstrumentClose update) \u2192 void",id:"handle_instrument_closeself-instrumentclose-update--void-1",level:4},{value:"WARNING",id:"warning-96",level:4},{value:"handle_instrument_status(self, InstrumentStatus data) \u2192 void",id:"handle_instrument_statusself-instrumentstatus-data--void-1",level:4},{value:"WARNING",id:"warning-97",level:4},{value:"handle_instruments(self, list instruments) \u2192 void",id:"handle_instrumentsself-list-instruments--void-1",level:4},{value:"WARNING",id:"warning-98",level:4},{value:"handle_mark_price(self, MarkPriceUpdate mark_price) \u2192 void",id:"handle_mark_priceself-markpriceupdate-mark_price--void-1",level:4},{value:"WARNING",id:"warning-99",level:4},{value:"handle_order_book(self, OrderBook order_book) \u2192 void",id:"handle_order_bookself-orderbook-order_book--void-1",level:4},{value:"WARNING",id:"warning-100",level:4},{value:"handle_order_book_deltas(self, deltas) \u2192 void",id:"handle_order_book_deltasself-deltas--void-1",level:4},{value:"WARNING",id:"warning-101",level:4},{value:"handle_order_book_depth(self, OrderBookDepth10 depth) \u2192 void",id:"handle_order_book_depthself-orderbookdepth10-depth--void-1",level:4},{value:"WARNING",id:"warning-102",level:4},{value:"handle_quote_tick(self, QuoteTick tick) \u2192 void",id:"handle_quote_tickself-quotetick-tick--void-1",level:4},{value:"WARNING",id:"warning-103",level:4},{value:"handle_quote_ticks(self, list ticks) \u2192 void",id:"handle_quote_ticksself-list-ticks--void-1",level:4},{value:"WARNING",id:"warning-104",level:4},{value:"handle_signal(self, Data signal) \u2192 void",id:"handle_signalself-data-signal--void-1",level:4},{value:"WARNING",id:"warning-105",level:4},{value:"handle_trade_tick(self, TradeTick tick) \u2192 void",id:"handle_trade_tickself-tradetick-tick--void-1",level:4},{value:"WARNING",id:"warning-106",level:4},{value:"handle_trade_ticks(self, list ticks) \u2192 void",id:"handle_trade_ticksself-list-ticks--void-1",level:4},{value:"WARNING",id:"warning-107",level:4},{value:"has_active_tasks(self) \u2192 bool",id:"has_active_tasksself--bool-1",level:4},{value:"has_any_tasks(self) \u2192 bool",id:"has_any_tasksself--bool-1",level:4},{value:"has_pending_requests(self) \u2192 bool",id:"has_pending_requestsself--bool-1",level:4},{value:"has_queued_tasks(self) \u2192 bool",id:"has_queued_tasksself--bool-1",level:4},{value:"id",id:"id-1",level:4},{value:"indicators_initialized(self) \u2192 bool",id:"indicators_initializedself--bool-1",level:4},{value:"is_degraded",id:"is_degraded-1",level:4},{value:"is_disposed",id:"is_disposed-1",level:4},{value:"is_faulted",id:"is_faulted-1",level:4},{value:"is_initialized",id:"is_initialized-1",level:4},{value:"is_pending_request(self, UUID4 request_id) \u2192 bool",id:"is_pending_requestself-uuid4-request_id--bool-1",level:4},{value:"is_running",id:"is_running-1",level:4},{value:"is_stopped",id:"is_stopped-1",level:4},{value:"load(self, dict state) \u2192 void",id:"loadself-dict-state--void-1",level:4},{value:"WARNING",id:"warning-108",level:4},{value:"log",id:"log-1",level:4},{value:"manage_contingent_orders",id:"manage_contingent_orders-1",level:4},{value:"manage_gtd_expiry",id:"manage_gtd_expiry-1",level:4},{value:"modify_order(self, Order order, Quantity quantity=None, Price price=None, Price trigger_price=None, ClientId client_id=None, dict params=None) \u2192 void",id:"modify_orderself-order-order-quantity-quantitynone-price-pricenone-price-trigger_pricenone-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"WARNING",id:"warning-109",level:4},{value:"msgbus",id:"msgbus-1",level:4},{value:"oms_type",id:"oms_type-1",level:4},{value:"on_bar(self, Bar bar) \u2192 void",id:"on_barself-bar-bar--void-1",level:4},{value:"WARNING",id:"warning-110",level:4},{value:"on_data(self, data) \u2192 void",id:"on_dataself-data--void-1",level:4},{value:"WARNING",id:"warning-111",level:4},{value:"on_degrade(self) \u2192 void",id:"on_degradeself--void-1",level:4},{value:"WARNING",id:"warning-112",level:4},{value:"on_dispose(self) \u2192 void",id:"on_disposeself--void-1",level:4},{value:"WARNING",id:"warning-113",level:4},{value:"on_event(self, Event event) \u2192 void",id:"on_eventself-event-event--void-1",level:4},{value:"WARNING",id:"warning-114",level:4},{value:"on_fault(self) \u2192 void",id:"on_faultself--void-1",level:4},{value:"WARNING",id:"warning-115",level:4},{value:"on_funding_rate(self, FundingRateUpdate funding_rate) \u2192 void",id:"on_funding_rateself-fundingrateupdate-funding_rate--void-1",level:4},{value:"WARNING",id:"warning-116",level:4},{value:"on_historical_data(self, data) \u2192 void",id:"on_historical_dataself-data--void-1",level:4},{value:"WARNING",id:"warning-117",level:4},{value:"on_index_price(self, IndexPriceUpdate index_price) \u2192 void",id:"on_index_priceself-indexpriceupdate-index_price--void-1",level:4},{value:"WARNING",id:"warning-118",level:4},{value:"on_instrument(self, Instrument instrument) \u2192 void",id:"on_instrumentself-instrument-instrument--void-1",level:4},{value:"WARNING",id:"warning-119",level:4},{value:"on_instrument_close(self, InstrumentClose update) \u2192 void",id:"on_instrument_closeself-instrumentclose-update--void-1",level:4},{value:"WARNING",id:"warning-120",level:4},{value:"on_instrument_status(self, InstrumentStatus data) \u2192 void",id:"on_instrument_statusself-instrumentstatus-data--void-1",level:4},{value:"WARNING",id:"warning-121",level:4},{value:"on_load(self, dict state) \u2192 void",id:"on_loadself-dict-state--void-1",level:4},{value:"WARNING",id:"warning-122",level:4},{value:"on_mark_price(self, MarkPriceUpdate mark_price) \u2192 void",id:"on_mark_priceself-markpriceupdate-mark_price--void-1",level:4},{value:"WARNING",id:"warning-123",level:4},{value:"on_order_accepted(self, OrderAccepted event) \u2192 void",id:"on_order_acceptedself-orderaccepted-event--void-1",level:4},{value:"WARNING",id:"warning-124",level:4},{value:"on_order_book(self, OrderBook order_book) \u2192 void",id:"on_order_bookself-orderbook-order_book--void-1",level:4},{value:"WARNING",id:"warning-125",level:4},{value:"on_order_book_deltas(self, deltas) \u2192 void",id:"on_order_book_deltasself-deltas--void-1",level:4},{value:"WARNING",id:"warning-126",level:4},{value:"on_order_book_depth(self, depth) \u2192 void",id:"on_order_book_depthself-depth--void-1",level:4},{value:"WARNING",id:"warning-127",level:4},{value:"on_order_cancel_rejected(self, OrderCancelRejected event) \u2192 void",id:"on_order_cancel_rejectedself-ordercancelrejected-event--void-1",level:4},{value:"WARNING",id:"warning-128",level:4},{value:"on_order_canceled(self, OrderCanceled event) \u2192 void",id:"on_order_canceledself-ordercanceled-event--void-1",level:4},{value:"WARNING",id:"warning-129",level:4},{value:"on_order_denied(self, OrderDenied event) \u2192 void",id:"on_order_deniedself-orderdenied-event--void-1",level:4},{value:"WARNING",id:"warning-130",level:4},{value:"on_order_emulated(self, OrderEmulated event) \u2192 void",id:"on_order_emulatedself-orderemulated-event--void-1",level:4},{value:"WARNING",id:"warning-131",level:4},{value:"on_order_event(self, OrderEvent event) \u2192 void",id:"on_order_eventself-orderevent-event--void-1",level:4},{value:"WARNING",id:"warning-132",level:4},{value:"on_order_expired(self, OrderExpired event) \u2192 void",id:"on_order_expiredself-orderexpired-event--void-1",level:4},{value:"WARNING",id:"warning-133",level:4},{value:"on_order_filled(self, OrderFilled event) \u2192 void",id:"on_order_filledself-orderfilled-event--void-1",level:4},{value:"WARNING",id:"warning-134",level:4},{value:"on_order_initialized(self, OrderInitialized event) \u2192 void",id:"on_order_initializedself-orderinitialized-event--void-1",level:4},{value:"WARNING",id:"warning-135",level:4},{value:"on_order_modify_rejected(self, OrderModifyRejected event) \u2192 void",id:"on_order_modify_rejectedself-ordermodifyrejected-event--void-1",level:4},{value:"WARNING",id:"warning-136",level:4},{value:"on_order_pending_cancel(self, OrderPendingCancel event) \u2192 void",id:"on_order_pending_cancelself-orderpendingcancel-event--void-1",level:4},{value:"WARNING",id:"warning-137",level:4},{value:"on_order_pending_update(self, OrderPendingUpdate event) \u2192 void",id:"on_order_pending_updateself-orderpendingupdate-event--void-1",level:4},{value:"WARNING",id:"warning-138",level:4},{value:"on_order_rejected(self, OrderRejected event) \u2192 void",id:"on_order_rejectedself-orderrejected-event--void-1",level:4},{value:"WARNING",id:"warning-139",level:4},{value:"on_order_released(self, OrderReleased event) \u2192 void",id:"on_order_releasedself-orderreleased-event--void-1",level:4},{value:"WARNING",id:"warning-140",level:4},{value:"on_order_submitted(self, OrderSubmitted event) \u2192 void",id:"on_order_submittedself-ordersubmitted-event--void-1",level:4},{value:"WARNING",id:"warning-141",level:4},{value:"on_order_triggered(self, OrderTriggered event) \u2192 void",id:"on_order_triggeredself-ordertriggered-event--void-1",level:4},{value:"WARNING",id:"warning-142",level:4},{value:"on_order_updated(self, OrderUpdated event) \u2192 void",id:"on_order_updatedself-orderupdated-event--void-1",level:4},{value:"WARNING",id:"warning-143",level:4},{value:"on_position_changed(self, PositionChanged event) \u2192 void",id:"on_position_changedself-positionchanged-event--void-1",level:4},{value:"WARNING",id:"warning-144",level:4},{value:"on_position_closed(self, PositionClosed event) \u2192 void",id:"on_position_closedself-positionclosed-event--void-1",level:4},{value:"WARNING",id:"warning-145",level:4},{value:"on_position_event(self, PositionEvent event) \u2192 void",id:"on_position_eventself-positionevent-event--void-1",level:4},{value:"WARNING",id:"warning-146",level:4},{value:"on_position_opened(self, PositionOpened event) \u2192 void",id:"on_position_openedself-positionopened-event--void-1",level:4},{value:"WARNING",id:"warning-147",level:4},{value:"on_quote_tick(self, QuoteTick tick) \u2192 void",id:"on_quote_tickself-quotetick-tick--void-1",level:4},{value:"WARNING",id:"warning-148",level:4},{value:"on_reset(self) \u2192 void",id:"on_resetself--void-2",level:4},{value:"on_resume(self) \u2192 void",id:"on_resumeself--void-2",level:4},{value:"on_save(self) \u2192 dict",id:"on_saveself--dict-1",level:4},{value:"WARNING",id:"warning-149",level:4},{value:"on_signal(self, signal) \u2192 void",id:"on_signalself-signal--void-1",level:4},{value:"WARNING",id:"warning-150",level:4},{value:"on_start(self) \u2192 void",id:"on_startself--void-2",level:4},{value:"on_stop(self) \u2192 void",id:"on_stopself--void-2",level:4},{value:"on_trade_tick(self, TradeTick tick) \u2192 void",id:"on_trade_tickself-tradetick-tick--void-1",level:4},{value:"WARNING",id:"warning-151",level:4},{value:"order_factory",id:"order_factory-1",level:4},{value:"order_id_tag",id:"order_id_tag-1",level:4},{value:"pending_requests(self) \u2192 set",id:"pending_requestsself--set-1",level:4},{value:"portfolio",id:"portfolio-1",level:4},{value:"publish_data(self, DataType data_type, Data data) \u2192 void",id:"publish_dataself-datatype-data_type-data-data--void-1",level:4},{value:"publish_signal(self, str name, value, uint64_t ts_event=0) \u2192 void",id:"publish_signalself-str-name-value-uint64_t-ts_event0--void-1",level:4},{value:"query_account(self, AccountId account_id, ClientId client_id=None, dict params=None) \u2192 void",id:"query_accountself-accountid-account_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"query_order(self, Order order, ClientId client_id=None, dict params=None) \u2192 void",id:"query_orderself-order-order-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"queue_for_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)",id:"queue_for_executorself-func-callable-any-tuple-argsnone-dict-kwargsnone-1",level:4},{value:"queued_task_ids(self) \u2192 list",id:"queued_task_idsself--list-1",level:4},{value:"register(self, TraderId trader_id, PortfolioFacade portfolio, MessageBus msgbus, CacheFacade cache, Clock clock) \u2192 void",id:"registerself-traderid-trader_id-portfoliofacade-portfolio-messagebus-msgbus-cachefacade-cache-clock-clock--void-1",level:4},{value:"WARNING",id:"warning-152",level:4},{value:"register_base(self, PortfolioFacade portfolio, MessageBus msgbus, CacheFacade cache, Clock clock) \u2192 void",id:"register_baseself-portfoliofacade-portfolio-messagebus-msgbus-cachefacade-cache-clock-clock--void-2",level:4},{value:"WARNING",id:"warning-153",level:4},{value:"register_executor(self, loop: asyncio.AbstractEventLoop, executor: Executor) \u2192 void",id:"register_executorself-loop-asyncioabstracteventloop-executor-executor--void-1",level:4},{value:"register_indicator_for_bars(self, BarType bar_type, Indicator indicator) \u2192 void",id:"register_indicator_for_barsself-bartype-bar_type-indicator-indicator--void-1",level:4},{value:"register_indicator_for_quote_ticks(self, InstrumentId instrument_id, Indicator indicator) \u2192 void",id:"register_indicator_for_quote_ticksself-instrumentid-instrument_id-indicator-indicator--void-1",level:4},{value:"register_indicator_for_trade_ticks(self, InstrumentId instrument_id, Indicator indicator) \u2192 void",id:"register_indicator_for_trade_ticksself-instrumentid-instrument_id-indicator-indicator--void-1",level:4},{value:"register_warning_event(self, type event) \u2192 void",id:"register_warning_eventself-type-event--void-1",level:4},{value:"registered_indicators",id:"registered_indicators-1",level:4},{value:"request_aggregated_bars(self, list bar_types, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, bool include_external_data=False, bool update_subscriptions=False, update_catalog: bool = False, dict params=None) \u2192 UUID4",id:"request_aggregated_barsself-list-bar_types-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-bool-include_external_datafalse-bool-update_subscriptionsfalse-update_catalog-bool--false-dict-paramsnone--uuid4-1",level:4},{value:"request_bars(self, BarType bar_type, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 UUID4",id:"request_barsself-bartype-bar_type-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1",level:4},{value:"request_data(self, DataType data_type, ClientId client_id, InstrumentId instrument_id=None, datetime start=None, datetime end=None, int limit=0, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 UUID4",id:"request_dataself-datatype-data_type-clientid-client_id-instrumentid-instrument_idnone-datetime-startnone-datetime-endnone-int-limit0-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1",level:4},{value:"request_instrument(self, InstrumentId instrument_id, datetime start=None, datetime end=None, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 UUID4",id:"request_instrumentself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1",level:4},{value:"request_instruments(self, Venue venue, datetime start=None, datetime end=None, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 UUID4",id:"request_instrumentsself-venue-venue-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1",level:4},{value:"request_order_book_snapshot(self, InstrumentId instrument_id, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, dict params=None) \u2192 UUID4",id:"request_order_book_snapshotself-instrumentid-instrument_id-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-dict-paramsnone--uuid4-1",level:4},{value:"request_quote_ticks(self, InstrumentId instrument_id, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 UUID4",id:"request_quote_ticksself-instrumentid-instrument_id-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1",level:4},{value:"request_trade_ticks(self, InstrumentId instrument_id, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 UUID4",id:"request_trade_ticksself-instrumentid-instrument_id-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-1",level:4},{value:"WARNING",id:"warning-154",level:4},{value:"resume(self) \u2192 void",id:"resumeself--void-1",level:4},{value:"WARNING",id:"warning-155",level:4},{value:"run_in_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)",id:"run_in_executorself-func-callable-any-tuple-argsnone-dict-kwargsnone-1",level:4},{value:"save(self) \u2192 dict",id:"saveself--dict-1",level:4},{value:"WARNING",id:"warning-156",level:4},{value:"shutdown_system(self, str reason=None) \u2192 void",id:"shutdown_systemself-str-reasonnone--void-1",level:4},{value:"start(self) \u2192 void",id:"startself--void-1",level:4},{value:"WARNING",id:"warning-157",level:4},{value:"state",id:"state-1",level:4},{value:"stop(self) \u2192 void",id:"stopself--void-1",level:4},{value:"WARNING",id:"warning-158",level:4},{value:"submit_order(self, Order order, PositionId position_id=None, ClientId client_id=None, dict params=None) \u2192 void",id:"submit_orderself-order-order-positionid-position_idnone-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"WARNING",id:"warning-159",level:4},{value:"submit_order_list(self, OrderList order_list, PositionId position_id=None, ClientId client_id=None, dict params=None) \u2192 void",id:"submit_order_listself-orderlist-order_list-positionid-position_idnone-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"WARNING",id:"warning-160",level:4},{value:"subscribe_bars(self, BarType bar_type, ClientId client_id=None, bool await_partial=False, bool update_catalog=False, dict params=None) \u2192 void",id:"subscribe_barsself-bartype-bar_type-clientid-client_idnone-bool-await_partialfalse-bool-update_catalogfalse-dict-paramsnone--void-1",level:4},{value:"subscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, bool update_catalog=False, dict params=None) \u2192 void",id:"subscribe_dataself-datatype-data_type-clientid-client_idnone-instrumentid-instrument_idnone-bool-update_catalogfalse-dict-paramsnone--void-1",level:4},{value:"subscribe_funding_rates(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_funding_ratesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"subscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_index_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"subscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_instrumentself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"subscribe_instrument_close(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_instrument_closeself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"subscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_instrument_statusself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"subscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_instrumentsself-venue-venue-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"subscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_mark_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"subscribe_order_book_at_interval(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, int interval_ms=1000, ClientId client_id=None, dict params=None) \u2192 void",id:"subscribe_order_book_at_intervalself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-int-interval_ms1000-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"WARNING",id:"warning-161",level:4},{value:"subscribe_order_book_deltas(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) \u2192 void",id:"subscribe_order_book_deltasself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-clientid-client_idnone-bool-managedtrue-bool-pyo3_conversionfalse-dict-paramsnone--void-1",level:4},{value:"subscribe_order_book_depth(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) \u2192 void",id:"subscribe_order_book_depthself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-clientid-client_idnone-bool-managedtrue-bool-pyo3_conversionfalse-dict-paramsnone--void-1",level:4},{value:"subscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) \u2192 void",id:"subscribe_quote_ticksself-instrumentid-instrument_id-clientid-client_idnone-bool-update_catalogfalse-dict-paramsnone--void-1",level:4},{value:"subscribe_signal(self, str name=&#39;&#39;) \u2192 void",id:"subscribe_signalself-str-name--void-1",level:4},{value:"subscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) \u2192 void",id:"subscribe_trade_ticksself-instrumentid-instrument_id-clientid-client_idnone-bool-update_catalogfalse-dict-paramsnone--void-1",level:4},{value:"to_importable_config(self) \u2192 ImportableStrategyConfig",id:"to_importable_configself--importablestrategyconfig-1",level:4},{value:"trader_id",id:"trader_id-1",level:4},{value:"type",id:"type-1",level:4},{value:"unsubscribe_bars(self, BarType bar_type, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_barsself-bartype-bar_type-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"unsubscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, dict params=None) \u2192 void",id:"unsubscribe_dataself-datatype-data_type-clientid-client_idnone-instrumentid-instrument_idnone-dict-paramsnone--void-1",level:4},{value:"unsubscribe_funding_rates(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_funding_ratesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"unsubscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_index_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"unsubscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_instrumentself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"unsubscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_instrument_statusself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"unsubscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_instrumentsself-venue-venue-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"unsubscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_mark_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"unsubscribe_order_book_at_interval(self, InstrumentId instrument_id, int interval_ms=1000, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_order_book_at_intervalself-instrumentid-instrument_id-int-interval_ms1000-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"unsubscribe_order_book_deltas(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_order_book_deltasself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"unsubscribe_order_book_depth(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_order_book_depthself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"unsubscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_quote_ticksself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"unsubscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void",id:"unsubscribe_trade_ticksself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",level:4},{value:"update_synthetic(self, SyntheticInstrument synthetic) \u2192 void",id:"update_syntheticself-syntheticinstrument-synthetic--void-1",level:4},{value:"use_hyphens_in_client_order_ids",id:"use_hyphens_in_client_order_ids-1",level:4},{value:"use_uuid_client_order_ids",id:"use_uuid_client_order_ids-1",level:4},{value:"<em>class</em> Trader",id:"class-trader-1",level:3},{value:"<em>property</em> instance<em>id</em>: UUID4_",id:"property-instanceid-uuid4_-1",level:4},{value:"actors() \u2192 list[Actor]",id:"actors--listactor-1",level:4},{value:"strategies() \u2192 list[Strategy]",id:"strategies--liststrategy-1",level:4},{value:"exec_algorithms() \u2192 list[Any]",id:"exec_algorithms--listany-1",level:4},{value:"actor_ids() \u2192 list[ComponentId]",id:"actor_ids--listcomponentid-1",level:4},{value:"strategy_ids() \u2192 list[StrategyId]",id:"strategy_ids--liststrategyid-1",level:4},{value:"exec_algorithm_ids() \u2192 list[ExecAlgorithmId]",id:"exec_algorithm_ids--listexecalgorithmid-1",level:4},{value:"actor_states() \u2192 dict[ComponentId, str]",id:"actor_states--dictcomponentid-str-1",level:4},{value:"strategy_states() \u2192 dict[StrategyId, str]",id:"strategy_states--dictstrategyid-str-1",level:4},{value:"exec_algorithm_states() \u2192 dict[ExecAlgorithmId, str]",id:"exec_algorithm_states--dictexecalgorithmid-str-1",level:4},{value:"add_actor(actor: Actor) \u2192 None",id:"add_actoractor-actor--none-1",level:4},{value:"add_actors(actors: list[Actor]) \u2192 None",id:"add_actorsactors-listactor--none-1",level:4},{value:"add_strategy(strategy: Strategy) \u2192 None",id:"add_strategystrategy-strategy--none-1",level:4},{value:"add_strategies(strategies: list[Strategy]) \u2192 None",id:"add_strategiesstrategies-liststrategy--none-1",level:4},{value:"add_exec_algorithm(exec_algorithm: Any) \u2192 None",id:"add_exec_algorithmexec_algorithm-any--none-1",level:4},{value:"add_exec_algorithms(exec_algorithms: list[Any]) \u2192 None",id:"add_exec_algorithmsexec_algorithms-listany--none-1",level:4},{value:"start_actor(actor_id: ComponentId) \u2192 None",id:"start_actoractor_id-componentid--none-1",level:4},{value:"start_strategy(strategy_id: StrategyId) \u2192 None",id:"start_strategystrategy_id-strategyid--none-1",level:4},{value:"stop_actor(actor_id: ComponentId) \u2192 None",id:"stop_actoractor_id-componentid--none-1",level:4},{value:"stop_strategy(strategy_id: StrategyId) \u2192 None",id:"stop_strategystrategy_id-strategyid--none-1",level:4},{value:"remove_actor(actor_id: ComponentId) \u2192 None",id:"remove_actoractor_id-componentid--none-1",level:4},{value:"remove_strategy(strategy_id: StrategyId) \u2192 None",id:"remove_strategystrategy_id-strategyid--none-1",level:4},{value:"clear_actors() \u2192 None",id:"clear_actors--none-1",level:4},{value:"clear_strategies() \u2192 None",id:"clear_strategies--none-1",level:4},{value:"clear_exec_algorithms() \u2192 None",id:"clear_exec_algorithms--none-1",level:4},{value:"subscribe(topic: str, handler: Callable[[Any], None]) \u2192 None",id:"subscribetopic-str-handler-callableany-none--none-1",level:4},{value:"unsubscribe(topic: str, handler: Callable[[Any], None]) \u2192 None",id:"unsubscribetopic-str-handler-callableany-none--none-1",level:4},{value:"save() \u2192 None",id:"save--none-1",level:4},{value:"load() \u2192 None",id:"load--none-1",level:4},{value:"check_residuals() \u2192 None",id:"check_residuals--none-1",level:4},{value:"generate_orders_report() \u2192 DataFrame",id:"generate_orders_report--dataframe-1",level:4},{value:"generate_order_fills_report() \u2192 DataFrame",id:"generate_order_fills_report--dataframe-1",level:4},{value:"generate_fills_report() \u2192 DataFrame",id:"generate_fills_report--dataframe-1",level:4},{value:"generate_positions_report() \u2192 DataFrame",id:"generate_positions_report--dataframe-1",level:4},{value:"generate_account_report(venue: Venue) \u2192 DataFrame",id:"generate_account_reportvenue-venue--dataframe-1",level:4},{value:"degrade(self) \u2192 void",id:"degradeself--void-2",level:4},{value:"WARNING",id:"warning-162",level:4},{value:"dispose(self) \u2192 void",id:"disposeself--void-2",level:4},{value:"WARNING",id:"warning-163",level:4},{value:"fault(self) \u2192 void",id:"faultself--void-2",level:4},{value:"WARNING",id:"warning-164",level:4},{value:"<em>classmethod</em> fully_qualified_name(cls) \u2192 str",id:"classmethod-fully_qualified_namecls--str-3",level:4},{value:"id",id:"id-2",level:4},{value:"is_degraded",id:"is_degraded-2",level:4},{value:"is_disposed",id:"is_disposed-2",level:4},{value:"is_faulted",id:"is_faulted-2",level:4},{value:"is_initialized",id:"is_initialized-2",level:4},{value:"is_running",id:"is_running-2",level:4},{value:"is_stopped",id:"is_stopped-2",level:4},{value:"reset(self) \u2192 void",id:"resetself--void-2",level:4},{value:"WARNING",id:"warning-165",level:4},{value:"resume(self) \u2192 void",id:"resumeself--void-2",level:4},{value:"WARNING",id:"warning-166",level:4},{value:"shutdown_system(self, str reason=None) \u2192 void",id:"shutdown_systemself-str-reasonnone--void-2",level:4},{value:"start(self) \u2192 void",id:"startself--void-2",level:4},{value:"WARNING",id:"warning-167",level:4},{value:"state",id:"state-2",level:4},{value:"stop(self) \u2192 void",id:"stopself--void-2",level:4},{value:"WARNING",id:"warning-168",level:4},{value:"trader_id",id:"trader_id-2",level:4},{value:"type",id:"type-2",level:4}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"trading",children:"Trading"})}),"\n",(0,t.jsx)(n.p,{children:"The trading subpackage groups all trading domain specific components and tooling."}),"\n",(0,t.jsx)(n.p,{children:"This is a top-level package where the majority of users will interface with the framework. Custom trading strategies can be implemented by inheriting from the Strategy base class."}),"\n",(0,t.jsxs)(n.h3,{id:"class-controller",children:[(0,t.jsx)(n.em,{children:"class"})," Controller"]}),"\n",(0,t.jsxs)(n.p,{children:["Bases: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:(0,t.jsx)(n.code,{children:"Actor"})})]}),"\n",(0,t.jsx)(n.p,{children:"The base class for all trader controllers."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"trader"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.Trader",children:(0,t.jsx)(n.em,{children:"Trader"})}),") \u2013 The reference to the trader instance to control."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"config"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.common.config.ActorConfig",children:(0,t.jsx)(n.em,{children:"ActorConfig"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The configuration for the controller"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If config is not of type ActorConfig."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"create_actoractor-actor-start-bool--true--none",children:["create_actor(actor: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:"Actor"}),", start: bool = True) \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Add the given actor to the controlled trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"actor"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:(0,t.jsx)(n.em,{children:"Actor"})}),") \u2013 The actor to add."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"start"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If the actor should be started immediately."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If actor.state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," or ",(0,t.jsx)(n.code,{children:"DISPOSED"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"RuntimeError"})," \u2013 If actor is already registered with the trader."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"create_actor_from_configactor_config-importableactorconfig-start-bool--true--none",children:["create_actor_from_config(actor_config: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.common.config.ImportableActorConfig",children:"ImportableActorConfig"}),", start: bool = True) \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Create the actor corresponding to actor_config."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"actor_config"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.common.config.ImportableActorConfig",children:(0,t.jsx)(n.em,{children:"ImportableActorConfig"})}),") \u2013 The actor config of the actor to add."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"start"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If the actor should be started immediately."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If actor.state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," or ",(0,t.jsx)(n.code,{children:"DISPOSED"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"RuntimeError"})," \u2013 If actor is already registered with the trader."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"create_strategystrategy-strategy-start-bool--true--none",children:["create_strategy(strategy: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.strategy.Strategy",children:"Strategy"}),", start: bool = True) \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Add the given strategy to the controlled trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"strategy"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.Strategy",children:(0,t.jsx)(n.em,{children:"Strategy"})}),") \u2013 The strategy to add."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"start"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If the strategy should be started immediately."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If strategy.state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," or ",(0,t.jsx)(n.code,{children:"DISPOSED"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"RuntimeError"})," \u2013 If strategy is already registered with the trader."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"create_strategy_from_configstrategy_config-importablestrategyconfig-start-bool--true--none",children:["create_strategy_from_config(strategy_config: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.trading.config.ImportableStrategyConfig",children:"ImportableStrategyConfig"}),", start: bool = True) \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Create the strategy corresponding to strategy_config."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"strategy_config"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.trading.config.ImportableStrategyConfig",children:(0,t.jsx)(n.em,{children:"ImportableStrategyConfig"})}),") \u2013 The strategy config of the strategy to add."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"start"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If the strategy should be started immediately."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If strategy.state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," or ",(0,t.jsx)(n.code,{children:"DISPOSED"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"RuntimeError"})," \u2013 If strategy is already registered with the trader."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"executecommand-command--none",children:["execute(command: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.message.Command",children:"Command"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.h4,{id:"register_baseself-portfoliofacade-portfolio-messagebus-msgbus-cachefacade-cache-clock-clock--void",children:"register_base(self, PortfolioFacade portfolio, MessageBus msgbus, CacheFacade cache, Clock clock) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Register with a trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"portfolio"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/portfolio#nautilus_trader.portfolio.PortfolioFacade",children:(0,t.jsx)(n.em,{children:"PortfolioFacade"})}),") \u2013 The read-only portfolio for the actor."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"msgbus"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.MessageBus",children:(0,t.jsx)(n.em,{children:"MessageBus"})}),") \u2013 The message bus for the actor."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"cache"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/cache#nautilus_trader.cache.base.CacheFacade",children:(0,t.jsx)(n.em,{children:"CacheFacade"})}),") \u2013 The read-only cache for the actor."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"clock"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.Clock",children:(0,t.jsx)(n.em,{children:"Clock"})}),") \u2013 The clock for the actor."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsxs)(n.h4,{id:"remove_actoractor-actor--none",children:["remove_actor(actor: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:"Actor"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Remove the given actor."}),"\n",(0,t.jsxs)(n.p,{children:["Will stop the actor first if state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"actor"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:(0,t.jsx)(n.em,{children:"Actor"})}),") \u2013 The actor to remove."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If actor is not already registered with the trader."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"remove_actor_from_idactor_id-componentid--none",children:["remove_actor_from_id(actor_id: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:"ComponentId"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Remove the actor corresponding to actor_id."}),"\n",(0,t.jsxs)(n.p,{children:["Will stop the actor first if state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"actor_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:(0,t.jsx)(n.em,{children:"ComponentId"})}),") \u2013 The ID of the actor to remove."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If actor is not already registered with the trader."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"remove_strategystrategy-strategy--none",children:["remove_strategy(strategy: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.strategy.Strategy",children:"Strategy"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Remove the given strategy."}),"\n",(0,t.jsxs)(n.p,{children:["Will stop the strategy first if state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"strategy"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.Strategy",children:(0,t.jsx)(n.em,{children:"Strategy"})}),") \u2013 The strategy to remove."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If strategy is not already registered with the trader."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"remove_strategy_from_idstrategy_id-strategyid--none",children:["remove_strategy_from_id(strategy_id: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:"StrategyId"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Remove the strategy corresponding to strategy_id."}),"\n",(0,t.jsxs)(n.p,{children:["Will stop the strategy first if state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"strategy_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:(0,t.jsx)(n.em,{children:"StrategyId"})}),") \u2013 The ID of the strategy to remove."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If strategy is not already registered with the trader."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"start_actoractor-actor--none",children:["start_actor(actor: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:"Actor"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Start the given actor."}),"\n",(0,t.jsxs)(n.p,{children:["Will log a warning if the actor is already ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If actor is not already registered with the trader."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"start_actor_from_idactor_id-componentid--none",children:["start_actor_from_id(actor_id: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:"ComponentId"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Start the actor corresponding to actor_id."}),"\n",(0,t.jsxs)(n.p,{children:["Will log a warning if the actor is already ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"actor_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:(0,t.jsx)(n.em,{children:"ComponentId"})}),") \u2013 The ID of the actor to start."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If actor is not already registered with the trader."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"start_strategystrategy-strategy--none",children:["start_strategy(strategy: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.strategy.Strategy",children:"Strategy"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Start the given strategy."}),"\n",(0,t.jsxs)(n.p,{children:["Will log a warning if the strategy is already ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If strategy is not already registered with the trader."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"start_strategy_from_idstrategy_id-strategyid--none",children:["start_strategy_from_id(strategy_id: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:"StrategyId"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Start the strategy corresponding to strategy_id."}),"\n",(0,t.jsxs)(n.p,{children:["Will log a warning if the strategy is already ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"strategy_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:(0,t.jsx)(n.em,{children:"StrategyId"})}),") \u2013 The ID of the strategy to start."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If strategy is not already registered with the trader."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"stop_actoractor-actor--none",children:["stop_actor(actor: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:"Actor"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Stop the given actor."}),"\n",(0,t.jsxs)(n.p,{children:["Will log a warning if the actor is not ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"actor"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:(0,t.jsx)(n.em,{children:"Actor"})}),") \u2013 The actor to stop."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If actor is not already registered with the trader."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"stop_actor_from_idactor_id-componentid--none",children:["stop_actor_from_id(actor_id: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:"ComponentId"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Stop the actor corresponding to actor_id."}),"\n",(0,t.jsxs)(n.p,{children:["Will log a warning if the actor is not ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"actor_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:(0,t.jsx)(n.em,{children:"ComponentId"})}),") \u2013 The ID of the actor to stop."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If actor is not already registered with the trader."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"stop_strategystrategy-strategy--none",children:["stop_strategy(strategy: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.strategy.Strategy",children:"Strategy"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Stop the given strategy."}),"\n",(0,t.jsxs)(n.p,{children:["Will log a warning if the strategy is not ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"strategy"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.Strategy",children:(0,t.jsx)(n.em,{children:"Strategy"})}),") \u2013 The strategy to stop."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If strategy is not already registered with the trader."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"stop_strategy_from_idstrategy_id-strategyid--none",children:["stop_strategy_from_id(strategy_id: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:"StrategyId"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Stop the strategy corresponding to strategy_id."}),"\n",(0,t.jsxs)(n.p,{children:["Will log a warning if the strategy is not ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"strategy_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:(0,t.jsx)(n.em,{children:"StrategyId"})}),") \u2013 The ID of the strategy to stop."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If strategy is not already registered with the trader."]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"class-strategy",children:[(0,t.jsx)(n.em,{children:"class"})," Strategy"]}),"\n",(0,t.jsxs)(n.p,{children:["Bases: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:(0,t.jsx)(n.code,{children:"Actor"})})]}),"\n",(0,t.jsx)(n.p,{children:"Strategy(config: StrategyConfig | None = None)"}),"\n",(0,t.jsx)(n.p,{children:"The base class for all trading strategies."}),"\n",(0,t.jsx)(n.p,{children:"This class allows traders to implement their own customized trading strategies. A trading strategy can configure its own order management system type, which determines how positions are handled by the ExecutionEngine."}),"\n",(0,t.jsxs)(n.p,{children:["Strategy OMS (Order Management System) types: : - ",(0,t.jsx)(n.code,{children:"UNSPECIFIED"}),": No specific type has been configured, will therefore default to the native OMS type for each venue."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"HEDGING"}),": A position ID will be assigned for each new position which is opened per instrument."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"NETTING"}),": There will only be a single position for the strategy per instrument. The position ID naming convention is ",(0,t.jsx)(n.code,{children:"{instrument_id}-{strategy_id}"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"config"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.trading.config.StrategyConfig",children:(0,t.jsx)(n.em,{children:"StrategyConfig"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The trading strategy configuration."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If config is not of type StrategyConfig."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-1",children:"WARNING"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"This class should not be used directly, but through a concrete subclass."}),"\n",(0,t.jsx)(n.li,{children:"Do not call components such as clock and logger in the __init__ prior to registration."}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"cancel_all_ordersself-instrumentid-instrument_id-orderside-order_sideordersideno_order_side-clientid-client_idnone-dict-paramsnone--void",children:"cancel_all_orders(self, InstrumentId instrument_id, OrderSide order_side=OrderSide.NO_ORDER_SIDE, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Cancel all orders for this strategy for the given instrument ID."}),"\n",(0,t.jsxs)(n.p,{children:["A CancelAllOrders command will be created and then sent to ",(0,t.jsx)(n.strong,{children:"both"})," the OrderEmulator and the ExecutionEngine."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument for the orders to cancel."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"order_side"})," (OrderSide, default ",(0,t.jsx)(n.code,{children:"NO_ORDER_SIDE"})," (both sides)) \u2013 The side of the orders to cancel."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"cancel_gtd_expiryself-order-order--void",children:"cancel_gtd_expiry(self, Order order) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Cancel the managed GTD expiry for the given order."}),"\n",(0,t.jsx)(n.p,{children:"If there is no current GTD expiry timer, then an error will be logged."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"order"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/orders#nautilus_trader.model.orders.Order",children:(0,t.jsx)(n.em,{children:"Order"})}),") \u2013 The order to cancel the GTD expiry for."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"cancel_orderself-order-order-clientid-client_idnone-dict-paramsnone--void",children:"cancel_order(self, Order order, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Cancel the given order with optional routing instructions."}),"\n",(0,t.jsxs)(n.p,{children:["A CancelOrder command will be created and then sent to ",(0,t.jsx)(n.strong,{children:"either"})," the OrderEmulator or the ExecutionEngine (depending on whether the order is emulated)."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"order"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/orders#nautilus_trader.model.orders.Order",children:(0,t.jsx)(n.em,{children:"Order"})}),") \u2013 The order to cancel."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"cancel_ordersself-list-orders-clientid-client_idnone-dict-paramsnone--void",children:"cancel_orders(self, list orders, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Batch cancel the given list of orders with optional routing instructions."}),"\n",(0,t.jsx)(n.p,{children:"For each order in the list, a CancelOrder command will be created and added to a BatchCancelOrders command. This command is then sent to the ExecutionEngine."}),"\n",(0,t.jsx)(n.p,{children:"Logs an error if the orders list contains local/emulated orders."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"orders"})," (",(0,t.jsx)(n.em,{children:"list"})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/orders#nautilus_trader.model.orders.Order",children:(0,t.jsx)(n.em,{children:"Order"})})," \u200b*]*\u200b) \u2013 The orders to cancel."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If orders is empty."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If orders contains a type other than Order."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"change_idself-strategyid-strategy_id--void",children:"change_id(self, StrategyId strategy_id) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Change the strategies identifier to the given strategy_id."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"strategy_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:(0,t.jsx)(n.em,{children:"StrategyId"})}),") \u2013 The new strategy ID to change to."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"change_order_id_tagself-str-order_id_tag--void",children:"change_order_id_tag(self, str order_id_tag) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Change the order identifier tag to the given order_id_tag."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"order_id_tag"})," (\u200b",(0,t.jsx)(n.em,{children:"str"}),"\u200b) \u2013 The new order ID tag to change to."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"close_all_positionsself-instrumentid-instrument_id-positionside-position_sidepositionsideno_position_side-clientid-client_idnone-list-tagsnone-timeinforce-time_in_forcetimeinforcegtc-bool-reduce_onlytrue-dict-paramsnone--void",children:"close_all_positions(self, InstrumentId instrument_id, PositionSide position_side=PositionSide.NO_POSITION_SIDE, ClientId client_id=None, list tags=None, TimeInForce time_in_force=TimeInForce.GTC, bool reduce_only=True, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Close all positions for the given instrument ID for this strategy."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument for the positions to close."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"position_side"})," (PositionSide, default ",(0,t.jsx)(n.code,{children:"NO_POSITION_SIDE"})," (both sides)) \u2013 The side of the positions to close."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"tags"})," (",(0,t.jsx)(n.em,{children:"list"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 The tags for the market orders closing the positions."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"time_in_force"})," (TimeInForce, default ",(0,t.jsx)(n.code,{children:"GTC"}),") \u2013 The time in force for the market orders closing the positions."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"reduce_only"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If the market orders to close positions should carry the \u2018reduce-only\u2019 execution instruction. Optional, as not all venues support this feature."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"close_positionself-position-position-clientid-client_idnone-list-tagsnone-timeinforce-time_in_forcetimeinforcegtc-bool-reduce_onlytrue-dict-paramsnone--void",children:"close_position(self, Position position, ClientId client_id=None, list tags=None, TimeInForce time_in_force=TimeInForce.GTC, bool reduce_only=True, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Close the given position."}),"\n",(0,t.jsx)(n.p,{children:"A closing MarketOrder for the position will be created, and then sent to the ExecutionEngine via a SubmitOrder command."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"position"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Position",children:(0,t.jsx)(n.em,{children:"Position"})}),") \u2013 The position to close."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"tags"})," (",(0,t.jsx)(n.em,{children:"list"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 The tags for the market order closing the position."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"time_in_force"})," (TimeInForce, default ",(0,t.jsx)(n.code,{children:"GTC"}),") \u2013 The time in force for the market order closing the position."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"reduce_only"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If the market order to close the position should carry the \u2018reduce-only\u2019 execution instruction. Optional, as not all venues support this feature."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"external_order_claims",children:"external_order_claims"}),"\n",(0,t.jsx)(n.p,{children:"The external order claims instrument IDs for the strategy."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," list[InstrumentId]"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"handle_eventself-event-event--void",children:"handle_event(self, Event event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given event."}),"\n",(0,t.jsxs)(n.p,{children:["If state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," then passes to on_event."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Event",children:(0,t.jsx)(n.em,{children:"Event"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-2",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"manage_contingent_orders",children:"manage_contingent_orders"}),"\n",(0,t.jsx)(n.p,{children:"If contingent orders should be managed automatically by the strategy."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"manage_gtd_expiry",children:"manage_gtd_expiry"}),"\n",(0,t.jsx)(n.p,{children:"If all order GTD time in force expirations should be managed automatically by the strategy."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"modify_orderself-order-order-quantity-quantitynone-price-pricenone-price-trigger_pricenone-clientid-client_idnone-dict-paramsnone--void",children:"modify_order(self, Order order, Quantity quantity=None, Price price=None, Price trigger_price=None, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Modify the given order with optional parameters and routing instructions."}),"\n",(0,t.jsxs)(n.p,{children:["An ModifyOrder command will be created and then sent to ",(0,t.jsx)(n.strong,{children:"either"})," the OrderEmulator or the RiskEngine (depending on whether the order is emulated)."]}),"\n",(0,t.jsx)(n.p,{children:"At least one value must differ from the original order for the command to be valid."}),"\n",(0,t.jsx)(n.p,{children:"Will use an Order Cancel/Replace Request (a.k.a Order Modification) for FIX protocols, otherwise if order update is not available for the API, then will cancel and replace with a new order using the original ClientOrderId."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"order"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/orders#nautilus_trader.model.orders.Order",children:(0,t.jsx)(n.em,{children:"Order"})}),") \u2013 The order to update."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"quantity"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Quantity",children:(0,t.jsx)(n.em,{children:"Quantity"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The updated quantity for the given order."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"price"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Price",children:(0,t.jsx)(n.em,{children:"Price"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The updated price for the given order (if applicable)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"trigger_price"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Price",children:(0,t.jsx)(n.em,{children:"Price"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The updated trigger price for the given order (if applicable)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If price is not ",(0,t.jsx)(n.code,{children:"None"})," and order does not have a price."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If trigger is not ",(0,t.jsx)(n.code,{children:"None"})," and order does not have a trigger_price."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-3",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"If the order is already closed or at PENDING_CANCEL status then the command will not be generated, and a warning will be logged."}),"\n",(0,t.jsx)(n.h4,{id:"oms_type",children:"oms_type"}),"\n",(0,t.jsx)(n.p,{children:"The order management system for the strategy."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," OmsType"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"on_order_acceptedself-orderaccepted-event--void",children:"on_order_accepted(self, OrderAccepted event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order accepted event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderAccepted",children:(0,t.jsx)(n.em,{children:"OrderAccepted"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-4",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_cancel_rejectedself-ordercancelrejected-event--void",children:"on_order_cancel_rejected(self, OrderCancelRejected event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order cancel rejected event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderCancelRejected",children:(0,t.jsx)(n.em,{children:"OrderCancelRejected"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-5",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_canceledself-ordercanceled-event--void",children:"on_order_canceled(self, OrderCanceled event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order canceled event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderCanceled",children:(0,t.jsx)(n.em,{children:"OrderCanceled"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-6",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_deniedself-orderdenied-event--void",children:"on_order_denied(self, OrderDenied event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order denied event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderDenied",children:(0,t.jsx)(n.em,{children:"OrderDenied"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-7",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_emulatedself-orderemulated-event--void",children:"on_order_emulated(self, OrderEmulated event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order emulated event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderEmulated",children:(0,t.jsx)(n.em,{children:"OrderEmulated"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-8",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_eventself-orderevent-event--void",children:"on_order_event(self, OrderEvent event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderEvent",children:(0,t.jsx)(n.em,{children:"OrderEvent"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-9",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_expiredself-orderexpired-event--void",children:"on_order_expired(self, OrderExpired event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order expired event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderExpired",children:(0,t.jsx)(n.em,{children:"OrderExpired"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-10",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_filledself-orderfilled-event--void",children:"on_order_filled(self, OrderFilled event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order filled event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderFilled",children:(0,t.jsx)(n.em,{children:"OrderFilled"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-11",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_initializedself-orderinitialized-event--void",children:"on_order_initialized(self, OrderInitialized event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order initialized event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderInitialized",children:(0,t.jsx)(n.em,{children:"OrderInitialized"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-12",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_modify_rejectedself-ordermodifyrejected-event--void",children:"on_order_modify_rejected(self, OrderModifyRejected event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order modify rejected event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderModifyRejected",children:(0,t.jsx)(n.em,{children:"OrderModifyRejected"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-13",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_pending_cancelself-orderpendingcancel-event--void",children:"on_order_pending_cancel(self, OrderPendingCancel event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order pending cancel event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderPendingCancel",children:(0,t.jsx)(n.em,{children:"OrderPendingCancel"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-14",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_pending_updateself-orderpendingupdate-event--void",children:"on_order_pending_update(self, OrderPendingUpdate event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order pending update event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderPendingUpdate",children:(0,t.jsx)(n.em,{children:"OrderPendingUpdate"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-15",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_rejectedself-orderrejected-event--void",children:"on_order_rejected(self, OrderRejected event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order rejected event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderRejected",children:(0,t.jsx)(n.em,{children:"OrderRejected"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-16",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_releasedself-orderreleased-event--void",children:"on_order_released(self, OrderReleased event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order released event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderReleased",children:(0,t.jsx)(n.em,{children:"OrderReleased"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-17",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_submittedself-ordersubmitted-event--void",children:"on_order_submitted(self, OrderSubmitted event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order submitted event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderSubmitted",children:(0,t.jsx)(n.em,{children:"OrderSubmitted"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-18",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_triggeredself-ordertriggered-event--void",children:"on_order_triggered(self, OrderTriggered event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order triggered event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderTriggered",children:(0,t.jsx)(n.em,{children:"OrderTriggered"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-19",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_updatedself-orderupdated-event--void",children:"on_order_updated(self, OrderUpdated event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order updated event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderUpdated",children:(0,t.jsx)(n.em,{children:"OrderUpdated"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-20",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_position_changedself-positionchanged-event--void",children:"on_position_changed(self, PositionChanged event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives a position changed event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.PositionChanged",children:(0,t.jsx)(n.em,{children:"PositionChanged"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-21",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_position_closedself-positionclosed-event--void",children:"on_position_closed(self, PositionClosed event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives a position closed event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.PositionClosed",children:(0,t.jsx)(n.em,{children:"PositionClosed"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-22",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_position_eventself-positionevent-event--void",children:"on_position_event(self, PositionEvent event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives a position event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.PositionEvent",children:(0,t.jsx)(n.em,{children:"PositionEvent"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-23",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_position_openedself-positionopened-event--void",children:"on_position_opened(self, PositionOpened event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives a position opened event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.PositionOpened",children:(0,t.jsx)(n.em,{children:"PositionOpened"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-24",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_resetself--void",children:"on_reset(self) \u2192 void"}),"\n",(0,t.jsx)(n.h4,{id:"on_resumeself--void",children:"on_resume(self) \u2192 void"}),"\n",(0,t.jsx)(n.h4,{id:"on_startself--void",children:"on_start(self) \u2192 void"}),"\n",(0,t.jsx)(n.h4,{id:"on_stopself--void",children:"on_stop(self) \u2192 void"}),"\n",(0,t.jsx)(n.h4,{id:"order_factory",children:"order_factory"}),"\n",(0,t.jsx)(n.p,{children:"The order factory for the strategy."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," OrderFactory"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"order_id_tag",children:"order_id_tag"}),"\n",(0,t.jsx)(n.p,{children:"The order ID tag for the strategy."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"query_accountself-accountid-account_id-clientid-client_idnone-dict-paramsnone--void",children:"query_account(self, AccountId account_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Query the account with optional routing instructions."}),"\n",(0,t.jsx)(n.p,{children:"A QueryAccount command will be created and then sent to the ExecutionEngine."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"account_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.AccountId",children:(0,t.jsx)(n.em,{children:"AccountId"})}),") \u2013 The account to query."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"query_orderself-order-order-clientid-client_idnone-dict-paramsnone--void",children:"query_order(self, Order order, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Query the given order with optional routing instructions."}),"\n",(0,t.jsx)(n.p,{children:"A QueryOrder command will be created and then sent to the ExecutionEngine."}),"\n",(0,t.jsx)(n.p,{children:"Logs an error if no VenueOrderId has been assigned to the order."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"order"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/orders#nautilus_trader.model.orders.Order",children:(0,t.jsx)(n.em,{children:"Order"})}),") \u2013 The order to query."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"registerself-traderid-trader_id-portfoliofacade-portfolio-messagebus-msgbus-cachefacade-cache-clock-clock--void",children:"register(self, TraderId trader_id, PortfolioFacade portfolio, MessageBus msgbus, CacheFacade cache, Clock clock) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Register the strategy with a trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"trader_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.TraderId",children:(0,t.jsx)(n.em,{children:"TraderId"})}),") \u2013 The trader ID for the strategy."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"portfolio"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/portfolio#nautilus_trader.portfolio.PortfolioFacade",children:(0,t.jsx)(n.em,{children:"PortfolioFacade"})}),") \u2013 The read-only portfolio for the strategy."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"msgbus"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.MessageBus",children:(0,t.jsx)(n.em,{children:"MessageBus"})}),") \u2013 The message bus for the strategy."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"cache"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/cache#nautilus_trader.cache.base.CacheFacade",children:(0,t.jsx)(n.em,{children:"CacheFacade"})}),") \u2013 The read-only cache for the strategy."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"clock"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.Clock",children:(0,t.jsx)(n.em,{children:"Clock"})}),") \u2013 The clock for the strategy."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-25",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"submit_orderself-order-order-positionid-position_idnone-clientid-client_idnone-dict-paramsnone--void",children:"submit_order(self, Order order, PositionId position_id=None, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Submit the given order with optional position ID, execution algorithm and routing instructions."}),"\n",(0,t.jsxs)(n.p,{children:["A SubmitOrder command will be created and sent to ",(0,t.jsx)(n.strong,{children:"either"})," an ExecAlgorithm, the OrderEmulator or the RiskEngine (depending whether the order is emulated and/or has an exec_algorithm_id specified)."]}),"\n",(0,t.jsx)(n.p,{children:"If the client order ID is duplicate, then the order will be denied."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"order"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/orders#nautilus_trader.model.orders.Order",children:(0,t.jsx)(n.em,{children:"Order"})}),") \u2013 The order to submit."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"position_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.PositionId",children:(0,t.jsx)(n.em,{children:"PositionId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The position ID to submit the order against. If a position does not yet exist, then any position opened will have this identifier assigned."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific execution client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If order.status is not ",(0,t.jsx)(n.code,{children:"INITIALIZED"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-26",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"If a position_id is passed and a position does not yet exist, then any position opened by the order will have this position ID assigned. This may not be what you intended."}),"\n",(0,t.jsx)(n.h4,{id:"submit_order_listself-orderlist-order_list-positionid-position_idnone-clientid-client_idnone-dict-paramsnone--void",children:"submit_order_list(self, OrderList order_list, PositionId position_id=None, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Submit the given order list with optional position ID, execution algorithm and routing instructions."}),"\n",(0,t.jsxs)(n.p,{children:["A SubmitOrderList command will be created and sent to ",(0,t.jsx)(n.strong,{children:"either"})," the OrderEmulator, or the RiskEngine (depending whether an order is emulated)."]}),"\n",(0,t.jsx)(n.p,{children:"If the order list ID is duplicate, or any client order ID is duplicate, then all orders will be denied."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"order_list"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/orders#nautilus_trader.model.orders.OrderList",children:(0,t.jsx)(n.em,{children:"OrderList"})}),") \u2013 The order list to submit."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"position_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.PositionId",children:(0,t.jsx)(n.em,{children:"PositionId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The position ID to submit the order against. If a position does not yet exist, then any position opened will have this identifier assigned."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific execution client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If any order.status is not ",(0,t.jsx)(n.code,{children:"INITIALIZED"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-27",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"If a position_id is passed and a position does not yet exist, then any position opened by an order will have this position ID assigned. This may not be what you intended."}),"\n",(0,t.jsxs)(n.h4,{id:"to_importable_configself--importablestrategyconfig",children:["to_importable_config(self) \u2192 ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.trading.config.ImportableStrategyConfig",children:"ImportableStrategyConfig"})]}),"\n",(0,t.jsx)(n.p,{children:"Returns an importable configuration for this strategy."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.trading.config.ImportableStrategyConfig",children:"ImportableStrategyConfig"})]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"use_hyphens_in_client_order_ids",children:"use_hyphens_in_client_order_ids"}),"\n",(0,t.jsx)(n.p,{children:"If hyphens should be used in generated client order ID values."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"use_uuid_client_order_ids",children:"use_uuid_client_order_ids"}),"\n",(0,t.jsx)(n.p,{children:"If UUID4\u2019s should be used for client order ID values."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"class-trader",children:[(0,t.jsx)(n.em,{children:"class"})," Trader"]}),"\n",(0,t.jsxs)(n.p,{children:["Bases: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.Component",children:(0,t.jsx)(n.code,{children:"Component"})})]}),"\n",(0,t.jsx)(n.p,{children:"Provides a trader for managing a fleet of actors, execution algorithms and trading strategies."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"trader_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.TraderId",children:(0,t.jsx)(n.em,{children:"TraderId"})}),") \u2013 The ID for the trader."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instance_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,t.jsx)(n.em,{children:"UUID4"})}),") \u2013 The instance ID for the trader."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"msgbus"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.MessageBus",children:(0,t.jsx)(n.em,{children:"MessageBus"})}),") \u2013 The message bus for the trader."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"cache"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/cache#nautilus_trader.cache.Cache",children:(0,t.jsx)(n.em,{children:"Cache"})}),") \u2013 The cache for the trader."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"portfolio"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/portfolio#nautilus_trader.portfolio.Portfolio",children:(0,t.jsx)(n.em,{children:"Portfolio"})}),") \u2013 The portfolio for the trader."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"data_engine"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/data#nautilus_trader.data.engine.DataEngine",children:(0,t.jsx)(n.em,{children:"DataEngine"})}),") \u2013 The data engine for the trader."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"risk_engine"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/risk#nautilus_trader.risk.engine.RiskEngine",children:(0,t.jsx)(n.em,{children:"RiskEngine"})}),") \u2013 The risk engine for the trader."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"exec_engine"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/execution#nautilus_trader.execution.engine.ExecutionEngine",children:(0,t.jsx)(n.em,{children:"ExecutionEngine"})}),") \u2013 The execution engine for the trader."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"clock"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.Clock",children:(0,t.jsx)(n.em,{children:"Clock"})}),") \u2013 The clock for the trader."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"environment"})," (Environment ","LIVE",") \u2013 The environment context."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"has_controller"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If the trader has a controller."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"loop"})," (",(0,t.jsx)(n.em,{children:"asyncio.AbstractEventLoop"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The event loop for the trader."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If portfolio is not equal to the exec_engine portfolio."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If strategies is ",(0,t.jsx)(n.code,{children:"None"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If strategies is empty."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If strategies contains a type other than Strategy."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"actor_ids--listcomponentid",children:["actor_ids() \u2192 list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:"ComponentId"}),"]"]}),"\n",(0,t.jsx)(n.p,{children:"Return the actor IDs loaded in the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:"ComponentId"}),"]"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"actor_states--dictcomponentid-str",children:["actor_states() \u2192 dict[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:"ComponentId"}),", str]"]}),"\n",(0,t.jsx)(n.p,{children:"Return the traders actor states."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," dict[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:"ComponentId"}),", str]"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"actors--listactor",children:["actors() \u2192 list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:"Actor"}),"]"]}),"\n",(0,t.jsx)(n.p,{children:"Return the actors loaded in the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:"Actor"}),"]"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"add_actoractor-actor--none",children:["add_actor(actor: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:"Actor"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Add the given custom component to the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"actor"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:(0,t.jsx)(n.em,{children:"Actor"})}),") \u2013 The actor to add and register."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If actor.state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," or ",(0,t.jsx)(n.code,{children:"DISPOSED"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"RuntimeError"})," \u2013 If actor.id already exists in the trader."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"add_actorsactors-listactor--none",children:["add_actors(actors: list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:"Actor"}),"]) \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Add the given actors to the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"actors"})," (",(0,t.jsx)(n.em,{children:"list"})," *[*",(0,t.jsx)(n.em,{children:"TradingStrategies"})," \u200b*]*\u200b) \u2013 The actors to add and register."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If actors is ",(0,t.jsx)(n.code,{children:"None"})," or empty."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"add_exec_algorithmexec_algorithm-any--none",children:"add_exec_algorithm(exec_algorithm: Any) \u2192 None"}),"\n",(0,t.jsx)(n.p,{children:"Add the given execution algorithm to the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"exec_algorithm"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/execution#nautilus_trader.execution.algorithm.ExecAlgorithm",children:(0,t.jsx)(n.em,{children:"ExecAlgorithm"})}),") \u2013 The execution algorithm to add and register."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"KeyError"})," \u2013 If exec_algorithm.id already exists in the trader."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If exec_algorithm.state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," or ",(0,t.jsx)(n.code,{children:"DISPOSED"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"add_exec_algorithmsexec_algorithms-listany--none",children:"add_exec_algorithms(exec_algorithms: list[Any]) \u2192 None"}),"\n",(0,t.jsx)(n.p,{children:"Add the given execution algorithms to the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"exec_algorithms"})," (",(0,t.jsx)(n.em,{children:"list"})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/execution#nautilus_trader.execution.algorithm.ExecAlgorithm",children:(0,t.jsx)(n.em,{children:"ExecAlgorithm"})})," \u200b*]*\u200b) \u2013 The execution algorithms to add and register."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If exec_algorithms is ",(0,t.jsx)(n.code,{children:"None"})," or empty."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"add_strategiesstrategies-liststrategy--none",children:["add_strategies(strategies: list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.strategy.Strategy",children:"Strategy"}),"]) \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Add the given trading strategies to the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"strategies"})," (",(0,t.jsx)(n.em,{children:"list"})," *[*",(0,t.jsx)(n.em,{children:"TradingStrategies"})," \u200b*]*\u200b) \u2013 The trading strategies to add and register."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If strategies is ",(0,t.jsx)(n.code,{children:"None"})," or empty."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"add_strategystrategy-strategy--none",children:["add_strategy(strategy: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.strategy.Strategy",children:"Strategy"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Add the given trading strategy to the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"strategy"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.Strategy",children:(0,t.jsx)(n.em,{children:"Strategy"})}),") \u2013 The trading strategy to add and register."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If strategy.state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," or ",(0,t.jsx)(n.code,{children:"DISPOSED"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"RuntimeError"})," \u2013 If strategy.id already exists in the trader."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"check_residuals--none",children:"check_residuals() \u2192 None"}),"\n",(0,t.jsx)(n.p,{children:"Check for residual open state such as open orders or open positions."}),"\n",(0,t.jsx)(n.h4,{id:"clear_actors--none",children:"clear_actors() \u2192 None"}),"\n",(0,t.jsx)(n.p,{children:"Dispose and clear all actors held by the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"clear_exec_algorithms--none",children:"clear_exec_algorithms() \u2192 None"}),"\n",(0,t.jsx)(n.p,{children:"Dispose and clear all execution algorithms held by the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"clear_strategies--none",children:"clear_strategies() \u2192 None"}),"\n",(0,t.jsx)(n.p,{children:"Dispose and clear all strategies held by the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"exec_algorithm_ids--listexecalgorithmid",children:["exec_algorithm_ids() \u2192 list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ExecAlgorithmId",children:"ExecAlgorithmId"}),"]"]}),"\n",(0,t.jsx)(n.p,{children:"Return the execution algorithm IDs loaded in the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ExecAlgorithmId",children:"ExecAlgorithmId"}),"]"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"exec_algorithm_states--dictexecalgorithmid-str",children:["exec_algorithm_states() \u2192 dict[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ExecAlgorithmId",children:"ExecAlgorithmId"}),", str]"]}),"\n",(0,t.jsx)(n.p,{children:"Return the traders execution algorithm states."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," dict[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ExecAlgorithmId",children:"ExecAlgorithmId"}),", str]"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"exec_algorithms--listany",children:"exec_algorithms() \u2192 list[Any]"}),"\n",(0,t.jsx)(n.p,{children:"Return the execution algorithms loaded in the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," list[ExecAlgorithms]"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"generate_account_reportvenue-venue--dataframe",children:["generate_account_report(venue: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.Venue",children:"Venue"}),") \u2192 DataFrame"]}),"\n",(0,t.jsx)(n.p,{children:"Generate an account report."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," pd.DataFrame"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"generate_fills_report--dataframe",children:"generate_fills_report() \u2192 DataFrame"}),"\n",(0,t.jsx)(n.p,{children:"Generate a fills report."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," pd.DataFrame"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"generate_order_fills_report--dataframe",children:"generate_order_fills_report() \u2192 DataFrame"}),"\n",(0,t.jsx)(n.p,{children:"Generate an order fills report."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," pd.DataFrame"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"generate_orders_report--dataframe",children:"generate_orders_report() \u2192 DataFrame"}),"\n",(0,t.jsx)(n.p,{children:"Generate an orders report."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," pd.DataFrame"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"generate_positions_report--dataframe",children:"generate_positions_report() \u2192 DataFrame"}),"\n",(0,t.jsx)(n.p,{children:"Generate a positions report."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," pd.DataFrame"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"property-instanceid-uuid4_",children:[(0,t.jsx)(n.em,{children:"property"})," instance",(0,t.jsx)(n.em,{children:"id"}),": ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.uuid.UUID4",children:"UUID4"}),"_"]}),"\n",(0,t.jsx)(n.p,{children:"Return the traders instance ID."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"load--none",children:"load() \u2192 None"}),"\n",(0,t.jsx)(n.p,{children:"Load all actor and strategy states from the cache."}),"\n",(0,t.jsxs)(n.h4,{id:"remove_actoractor_id-componentid--none",children:["remove_actor(actor_id: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:"ComponentId"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Remove the actor with the given actor_id."}),"\n",(0,t.jsxs)(n.p,{children:["Will stop the actor first if state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"actor_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:(0,t.jsx)(n.em,{children:"ComponentId"})}),") \u2013 The actor ID to remove."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If an actor with the given actor_id is not found."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"remove_strategystrategy_id-strategyid--none",children:["remove_strategy(strategy_id: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:"StrategyId"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Remove the strategy with the given strategy_id."}),"\n",(0,t.jsxs)(n.p,{children:["Will stop the strategy first if state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"strategy_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:(0,t.jsx)(n.em,{children:"StrategyId"})}),") \u2013 The strategy ID to remove."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If a strategy with the given strategy_id is not found."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"save--none",children:"save() \u2192 None"}),"\n",(0,t.jsx)(n.p,{children:"Save all actor and strategy states to the cache."}),"\n",(0,t.jsxs)(n.h4,{id:"start_actoractor_id-componentid--none",children:["start_actor(actor_id: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:"ComponentId"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Start the actor with the given actor_id."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"actor_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:(0,t.jsx)(n.em,{children:"ComponentId"})}),") \u2013 The component ID to start."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If an actor with the given actor_id is not found."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"start_strategystrategy_id-strategyid--none",children:["start_strategy(strategy_id: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:"StrategyId"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Start the strategy with the given strategy_id."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"strategy_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:(0,t.jsx)(n.em,{children:"StrategyId"})}),") \u2013 The strategy ID to start."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If a strategy with the given strategy_id is not found."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"stop_actoractor_id-componentid--none",children:["stop_actor(actor_id: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:"ComponentId"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Stop the actor with the given actor_id."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"actor_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:(0,t.jsx)(n.em,{children:"ComponentId"})}),") \u2013 The actor ID to stop."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If an actor with the given actor_id is not found."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"stop_strategystrategy_id-strategyid--none",children:["stop_strategy(strategy_id: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:"StrategyId"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Stop the strategy with the given strategy_id."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"strategy_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:(0,t.jsx)(n.em,{children:"StrategyId"})}),") \u2013 The strategy ID to stop."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If a strategy with the given strategy_id is not found."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"strategies--liststrategy",children:["strategies() \u2192 list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.strategy.Strategy",children:"Strategy"}),"]"]}),"\n",(0,t.jsx)(n.p,{children:"Return the strategies loaded in the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.Strategy",children:"Strategy"}),"]"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"strategy_ids--liststrategyid",children:["strategy_ids() \u2192 list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:"StrategyId"}),"]"]}),"\n",(0,t.jsx)(n.p,{children:"Return the strategy IDs loaded in the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:"StrategyId"}),"]"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"strategy_states--dictstrategyid-str",children:["strategy_states() \u2192 dict[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:"StrategyId"}),", str]"]}),"\n",(0,t.jsx)(n.p,{children:"Return the traders strategy states."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," dict[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:"StrategyId"}),", str]"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"subscribetopic-str-handler-callableany-none--none",children:"subscribe(topic: str, handler: Callable[[Any], None]) \u2192 None"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to the given message topic with the given callback handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"topic"})," (\u200b",(0,t.jsx)(n.em,{children:"str"}),"\u200b) \u2013 The topic for the subscription. May include wildcard glob patterns."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"handler"})," (",(0,t.jsx)(n.em,{children:"Callable"})," ",(0,t.jsx)(n.em,{children:"["})," *[*",(0,t.jsx)(n.em,{children:"Any"})," _]* ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"None"})," \u200b_]*\u200b) \u2013 The handler for the subscription."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"unsubscribetopic-str-handler-callableany-none--none",children:"unsubscribe(topic: str, handler: Callable[[Any], None]) \u2192 None"}),"\n",(0,t.jsx)(n.p,{children:"Unsubscribe the given handler from the given message topic."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"topic"})," (",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The topic to unsubscribe from. May include wildcard glob patterns."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"handler"})," (",(0,t.jsx)(n.em,{children:"Callable"})," ",(0,t.jsx)(n.em,{children:"["})," *[*",(0,t.jsx)(n.em,{children:"Any"})," _]* ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"None"})," \u200b_]*\u200b) \u2013 The handler for the subscription."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"class-controller-1",children:[(0,t.jsx)(n.em,{children:"class"})," Controller"]}),"\n",(0,t.jsxs)(n.p,{children:["Bases: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:(0,t.jsx)(n.code,{children:"Actor"})})]}),"\n",(0,t.jsx)(n.p,{children:"The base class for all trader controllers."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"trader"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.Trader",children:(0,t.jsx)(n.em,{children:"Trader"})}),") \u2013 The reference to the trader instance to control."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"config"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.common.config.ActorConfig",children:(0,t.jsx)(n.em,{children:"ActorConfig"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The configuration for the controller"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If config is not of type ActorConfig."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"register_baseself-portfoliofacade-portfolio-messagebus-msgbus-cachefacade-cache-clock-clock--void-1",children:"register_base(self, PortfolioFacade portfolio, MessageBus msgbus, CacheFacade cache, Clock clock) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Register with a trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"portfolio"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/portfolio#nautilus_trader.portfolio.PortfolioFacade",children:(0,t.jsx)(n.em,{children:"PortfolioFacade"})}),") \u2013 The read-only portfolio for the actor."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"msgbus"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.MessageBus",children:(0,t.jsx)(n.em,{children:"MessageBus"})}),") \u2013 The message bus for the actor."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"cache"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/cache#nautilus_trader.cache.base.CacheFacade",children:(0,t.jsx)(n.em,{children:"CacheFacade"})}),") \u2013 The read-only cache for the actor."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"clock"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.Clock",children:(0,t.jsx)(n.em,{children:"Clock"})}),") \u2013 The clock for the actor."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-28",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsxs)(n.h4,{id:"executecommand-command--none-1",children:["execute(command: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.message.Command",children:"Command"}),") \u2192 None"]}),"\n",(0,t.jsxs)(n.h4,{id:"create_actoractor-actor-start-bool--true--none-1",children:["create_actor(actor: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:"Actor"}),", start: bool = True) \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Add the given actor to the controlled trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"actor"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:(0,t.jsx)(n.em,{children:"Actor"})}),") \u2013 The actor to add."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"start"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If the actor should be started immediately."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If actor.state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," or ",(0,t.jsx)(n.code,{children:"DISPOSED"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"RuntimeError"})," \u2013 If actor is already registered with the trader."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"create_strategystrategy-strategy-start-bool--true--none-1",children:["create_strategy(strategy: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.strategy.Strategy",children:"Strategy"}),", start: bool = True) \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Add the given strategy to the controlled trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"strategy"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.Strategy",children:(0,t.jsx)(n.em,{children:"Strategy"})}),") \u2013 The strategy to add."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"start"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If the strategy should be started immediately."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If strategy.state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," or ",(0,t.jsx)(n.code,{children:"DISPOSED"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"RuntimeError"})," \u2013 If strategy is already registered with the trader."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"start_actoractor-actor--none-1",children:["start_actor(actor: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:"Actor"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Start the given actor."}),"\n",(0,t.jsxs)(n.p,{children:["Will log a warning if the actor is already ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If actor is not already registered with the trader."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"start_strategystrategy-strategy--none-1",children:["start_strategy(strategy: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.strategy.Strategy",children:"Strategy"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Start the given strategy."}),"\n",(0,t.jsxs)(n.p,{children:["Will log a warning if the strategy is already ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If strategy is not already registered with the trader."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"stop_actoractor-actor--none-1",children:["stop_actor(actor: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:"Actor"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Stop the given actor."}),"\n",(0,t.jsxs)(n.p,{children:["Will log a warning if the actor is not ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"actor"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:(0,t.jsx)(n.em,{children:"Actor"})}),") \u2013 The actor to stop."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If actor is not already registered with the trader."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"stop_strategystrategy-strategy--none-1",children:["stop_strategy(strategy: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.strategy.Strategy",children:"Strategy"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Stop the given strategy."}),"\n",(0,t.jsxs)(n.p,{children:["Will log a warning if the strategy is not ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"strategy"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.Strategy",children:(0,t.jsx)(n.em,{children:"Strategy"})}),") \u2013 The strategy to stop."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If strategy is not already registered with the trader."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"remove_actoractor-actor--none-1",children:["remove_actor(actor: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:"Actor"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Remove the given actor."}),"\n",(0,t.jsxs)(n.p,{children:["Will stop the actor first if state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"actor"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:(0,t.jsx)(n.em,{children:"Actor"})}),") \u2013 The actor to remove."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If actor is not already registered with the trader."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"remove_strategystrategy-strategy--none-1",children:["remove_strategy(strategy: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.strategy.Strategy",children:"Strategy"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Remove the given strategy."}),"\n",(0,t.jsxs)(n.p,{children:["Will stop the strategy first if state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"strategy"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.Strategy",children:(0,t.jsx)(n.em,{children:"Strategy"})}),") \u2013 The strategy to remove."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If strategy is not already registered with the trader."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"create_actor_from_configactor_config-importableactorconfig-start-bool--true--none-1",children:["create_actor_from_config(actor_config: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.common.config.ImportableActorConfig",children:"ImportableActorConfig"}),", start: bool = True) \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Create the actor corresponding to actor_config."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"actor_config"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.common.config.ImportableActorConfig",children:(0,t.jsx)(n.em,{children:"ImportableActorConfig"})}),") \u2013 The actor config of the actor to add."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"start"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If the actor should be started immediately."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If actor.state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," or ",(0,t.jsx)(n.code,{children:"DISPOSED"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"RuntimeError"})," \u2013 If actor is already registered with the trader."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"create_strategy_from_configstrategy_config-importablestrategyconfig-start-bool--true--none-1",children:["create_strategy_from_config(strategy_config: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.trading.config.ImportableStrategyConfig",children:"ImportableStrategyConfig"}),", start: bool = True) \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Create the strategy corresponding to strategy_config."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"strategy_config"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.trading.config.ImportableStrategyConfig",children:(0,t.jsx)(n.em,{children:"ImportableStrategyConfig"})}),") \u2013 The strategy config of the strategy to add."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"start"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If the strategy should be started immediately."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If strategy.state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," or ",(0,t.jsx)(n.code,{children:"DISPOSED"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"RuntimeError"})," \u2013 If strategy is already registered with the trader."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"start_actor_from_idactor_id-componentid--none-1",children:["start_actor_from_id(actor_id: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:"ComponentId"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Start the actor corresponding to actor_id."}),"\n",(0,t.jsxs)(n.p,{children:["Will log a warning if the actor is already ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"actor_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:(0,t.jsx)(n.em,{children:"ComponentId"})}),") \u2013 The ID of the actor to start."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If actor is not already registered with the trader."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"start_strategy_from_idstrategy_id-strategyid--none-1",children:["start_strategy_from_id(strategy_id: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:"StrategyId"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Start the strategy corresponding to strategy_id."}),"\n",(0,t.jsxs)(n.p,{children:["Will log a warning if the strategy is already ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"strategy_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:(0,t.jsx)(n.em,{children:"StrategyId"})}),") \u2013 The ID of the strategy to start."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If strategy is not already registered with the trader."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"stop_actor_from_idactor_id-componentid--none-1",children:["stop_actor_from_id(actor_id: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:"ComponentId"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Stop the actor corresponding to actor_id."}),"\n",(0,t.jsxs)(n.p,{children:["Will log a warning if the actor is not ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"actor_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:(0,t.jsx)(n.em,{children:"ComponentId"})}),") \u2013 The ID of the actor to stop."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If actor is not already registered with the trader."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"stop_strategy_from_idstrategy_id-strategyid--none-1",children:["stop_strategy_from_id(strategy_id: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:"StrategyId"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Stop the strategy corresponding to strategy_id."}),"\n",(0,t.jsxs)(n.p,{children:["Will log a warning if the strategy is not ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"strategy_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:(0,t.jsx)(n.em,{children:"StrategyId"})}),") \u2013 The ID of the strategy to stop."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If strategy is not already registered with the trader."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"remove_actor_from_idactor_id-componentid--none-1",children:["remove_actor_from_id(actor_id: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:"ComponentId"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Remove the actor corresponding to actor_id."}),"\n",(0,t.jsxs)(n.p,{children:["Will stop the actor first if state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"actor_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:(0,t.jsx)(n.em,{children:"ComponentId"})}),") \u2013 The ID of the actor to remove."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If actor is not already registered with the trader."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"remove_strategy_from_idstrategy_id-strategyid--none-1",children:["remove_strategy_from_id(strategy_id: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:"StrategyId"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Remove the strategy corresponding to strategy_id."}),"\n",(0,t.jsxs)(n.p,{children:["Will stop the strategy first if state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"strategy_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:(0,t.jsx)(n.em,{children:"StrategyId"})}),") \u2013 The ID of the strategy to remove."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If strategy is not already registered with the trader."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"active_task_idsself--list",children:"active_task_ids(self) \u2192 list"}),"\n",(0,t.jsx)(n.p,{children:"Return the active task identifiers."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.executor.TaskId",children:"TaskId"}),"]"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"add_syntheticself-syntheticinstrument-synthetic--void",children:"add_synthetic(self, SyntheticInstrument synthetic) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Add the created synthetic instrument to the cache."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"synthetic"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.SyntheticInstrument",children:(0,t.jsx)(n.em,{children:"SyntheticInstrument"})}),") \u2013 The synthetic instrument to add to the cache."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"KeyError"})," \u2013 If synthetic is already in the cache."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"cache",children:"cache"}),"\n",(0,t.jsx)(n.p,{children:"The read-only cache for the actor."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," CacheFacade"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"cancel_all_tasksself--void",children:"cancel_all_tasks(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Cancel all queued and active tasks."}),"\n",(0,t.jsxs)(n.h4,{id:"cancel_taskself-task_id-taskid--void",children:["cancel_task(self, task_id: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.executor.TaskId",children:"TaskId"}),") \u2192 void"]}),"\n",(0,t.jsx)(n.p,{children:"Cancel the task with the given task_id (if queued or active)."}),"\n",(0,t.jsx)(n.p,{children:"If the task is not found then a warning is logged."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"task_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.executor.TaskId",children:(0,t.jsx)(n.em,{children:"TaskId"})}),") \u2013 The task identifier."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"clock",children:"clock"}),"\n",(0,t.jsx)(n.p,{children:"The actors clock."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," Clock"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"config",children:"config"}),"\n",(0,t.jsx)(n.p,{children:"The actors configuration."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," NautilusConfig"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"degradeself--void",children:"degrade(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Degrade the component."}),"\n",(0,t.jsxs)(n.p,{children:["While executing on_degrade() any exception will be logged and reraised, then the component will remain in a ",(0,t.jsx)(n.code,{children:"DEGRADING"})," state."]}),"\n",(0,t.jsx)(n.h4,{id:"warning-29",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"Do not override."}),"\n",(0,t.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,t.jsx)(n.h4,{id:"deregister_warning_eventself-type-event--void",children:"deregister_warning_event(self, type event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Deregister the given event type from warning log levels."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (\u200b",(0,t.jsx)(n.em,{children:"type"}),"\u200b) \u2013 The event class to deregister."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"disposeself--void",children:"dispose(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Dispose of the component."}),"\n",(0,t.jsxs)(n.p,{children:["While executing on_dispose() any exception will be logged and reraised, then the component will remain in a ",(0,t.jsx)(n.code,{children:"DISPOSING"})," state."]}),"\n",(0,t.jsx)(n.h4,{id:"warning-30",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"Do not override."}),"\n",(0,t.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,t.jsx)(n.h4,{id:"faultself--void",children:"fault(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Fault the component."}),"\n",(0,t.jsx)(n.p,{children:"Calling this method multiple times has the same effect as calling it once (it is idempotent). Once called, it cannot be reversed, and no other methods should be called on this instance."}),"\n",(0,t.jsxs)(n.p,{children:["While executing on_fault() any exception will be logged and reraised, then the component will remain in a ",(0,t.jsx)(n.code,{children:"FAULTING"})," state."]}),"\n",(0,t.jsx)(n.h4,{id:"warning-31",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"Do not override."}),"\n",(0,t.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,t.jsxs)(n.h4,{id:"classmethod-fully_qualified_namecls--str",children:[(0,t.jsx)(n.em,{children:"classmethod"})," fully_qualified_name(cls) \u2192 str"]}),"\n",(0,t.jsx)(n.p,{children:"Return the fully qualified name for the components class."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," str"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"greeks",children:"greeks"}),"\n",(0,t.jsx)(n.p,{children:"The read-only greeks calculator for the actor."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," GreeksCalculator"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"handle_barself-bar-bar--void",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given bar data."}),"\n",(0,t.jsxs)(n.p,{children:["If state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," then passes to on_bar."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"bar"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,t.jsx)(n.em,{children:"Bar"})}),") \u2013 The bar received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-32",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_barsself-list-bars--void",children:"handle_bars(self, list bars) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given historical bar data by handling each bar individually."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"bars"})," (",(0,t.jsx)(n.em,{children:"list"})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,t.jsx)(n.em,{children:"Bar"})})," \u200b*]*\u200b) \u2013 The bars to handle."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-33",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"RuntimeError"})," \u2013 If bar data has incorrectly sorted timestamps (not monotonically increasing)."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"handle_dataself-data-data--void",children:"handle_data(self, Data data) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given data."}),"\n",(0,t.jsxs)(n.p,{children:["If state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," then passes to on_data."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"data"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,t.jsx)(n.em,{children:"Data"})}),") \u2013 The data received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-34",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_eventself-event-event--void-1",children:"handle_event(self, Event event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given event."}),"\n",(0,t.jsxs)(n.p,{children:["If state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," then passes to on_event."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Event",children:(0,t.jsx)(n.em,{children:"Event"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-35",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_funding_rateself-fundingrateupdate-funding_rate--void",children:"handle_funding_rate(self, FundingRateUpdate funding_rate) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given funding rate update."}),"\n",(0,t.jsxs)(n.p,{children:["If state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," then passes to on_funding_rate."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"funding_rate"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.FundingRateUpdate",children:(0,t.jsx)(n.em,{children:"FundingRateUpdate"})}),") \u2013 The funding rate update received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-36",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_historical_dataself-data--void",children:"handle_historical_data(self, data) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given historical data."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"data"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,t.jsx)(n.em,{children:"Data"})}),") \u2013 The historical data received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-37",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_index_priceself-indexpriceupdate-index_price--void",children:"handle_index_price(self, IndexPriceUpdate index_price) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given index price update."}),"\n",(0,t.jsxs)(n.p,{children:["If state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," then passes to on_index_price."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"index_price"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.IndexPriceUpdate",children:(0,t.jsx)(n.em,{children:"IndexPriceUpdate"})}),") \u2013 The index price update received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-38",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_instrumentself-instrument-instrument--void",children:"handle_instrument(self, Instrument instrument) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given instrument."}),"\n",(0,t.jsxs)(n.p,{children:["Passes to on_instrument if state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"instrument"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.Instrument",children:(0,t.jsx)(n.em,{children:"Instrument"})}),") \u2013 The instrument received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-39",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_instrument_closeself-instrumentclose-update--void",children:"handle_instrument_close(self, InstrumentClose update) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given instrument close update."}),"\n",(0,t.jsxs)(n.p,{children:["If state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," then passes to on_instrument_close."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"update"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.InstrumentClose",children:(0,t.jsx)(n.em,{children:"InstrumentClose"})}),") \u2013 The update received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-40",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_instrument_statusself-instrumentstatus-data--void",children:"handle_instrument_status(self, InstrumentStatus data) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given instrument status update."}),"\n",(0,t.jsxs)(n.p,{children:["If state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," then passes to on_instrument_status."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"data"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.InstrumentStatus",children:(0,t.jsx)(n.em,{children:"InstrumentStatus"})}),") \u2013 The status update received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-41",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_instrumentsself-list-instruments--void",children:"handle_instruments(self, list instruments) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given instruments data by handling each instrument individually."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"instruments"})," (",(0,t.jsx)(n.em,{children:"list"})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.Instrument",children:(0,t.jsx)(n.em,{children:"Instrument"})})," \u200b*]*\u200b) \u2013 The instruments received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-42",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_mark_priceself-markpriceupdate-mark_price--void",children:"handle_mark_price(self, MarkPriceUpdate mark_price) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given mark price update."}),"\n",(0,t.jsxs)(n.p,{children:["If state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," then passes to on_mark_price."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"mark_price"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.MarkPriceUpdate",children:(0,t.jsx)(n.em,{children:"MarkPriceUpdate"})}),") \u2013 The mark price update received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-43",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_order_bookself-orderbook-order_book--void",children:"handle_order_book(self, OrderBook order_book) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given order book."}),"\n",(0,t.jsxs)(n.p,{children:["Passes to on_order_book if state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"order_book"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/book#nautilus_trader.model.book.OrderBook",children:(0,t.jsx)(n.em,{children:"OrderBook"})}),") \u2013 The order book received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-44",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_order_book_deltasself-deltas--void",children:"handle_order_book_deltas(self, deltas) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given order book deltas."}),"\n",(0,t.jsxs)(n.p,{children:["Passes to on_order_book_deltas if state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),". The deltas will be nautilus_pyo3.OrderBookDeltas if the pyo3_conversion flag was set for the subscription."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"deltas"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.OrderBookDeltas",children:(0,t.jsx)(n.em,{children:"OrderBookDeltas"})})," ",(0,t.jsx)(n.em,{children:"or"})," \u200b",(0,t.jsx)(n.em,{children:"nautilus_pyo3.OrderBookDeltas"}),"\u200b) \u2013 The order book deltas received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-45",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_order_book_depthself-orderbookdepth10-depth--void",children:"handle_order_book_depth(self, OrderBookDepth10 depth) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given order book depth"}),"\n",(0,t.jsxs)(n.p,{children:["Passes to on_order_book_depth if state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"depth"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.OrderBookDepth10",children:(0,t.jsx)(n.em,{children:"OrderBookDepth10"})}),") \u2013 The order book depth received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-46",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_quote_tickself-quotetick-tick--void",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given quote tick."}),"\n",(0,t.jsxs)(n.p,{children:["If state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," then passes to on_quote_tick."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"tick"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,t.jsx)(n.em,{children:"QuoteTick"})}),") \u2013 The tick received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-47",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_quote_ticksself-list-ticks--void",children:"handle_quote_ticks(self, list ticks) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given historical quote tick data by handling each tick individually."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"ticks"})," (",(0,t.jsx)(n.em,{children:"list"})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,t.jsx)(n.em,{children:"QuoteTick"})})," \u200b*]*\u200b) \u2013 The ticks received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-48",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_signalself-data-signal--void",children:"handle_signal(self, Data signal) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given signal."}),"\n",(0,t.jsxs)(n.p,{children:["If state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," then passes to on_signal."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"signal"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,t.jsx)(n.em,{children:"Data"})}),") \u2013 The signal received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-49",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_trade_tickself-tradetick-tick--void",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given trade tick."}),"\n",(0,t.jsxs)(n.p,{children:["If state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," then passes to on_trade_tick."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"tick"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,t.jsx)(n.em,{children:"TradeTick"})}),") \u2013 The tick received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-50",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_trade_ticksself-list-ticks--void",children:"handle_trade_ticks(self, list ticks) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given historical trade tick data by handling each tick individually."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"ticks"})," (",(0,t.jsx)(n.em,{children:"list"})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,t.jsx)(n.em,{children:"TradeTick"})})," \u200b*]*\u200b) \u2013 The ticks received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-51",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"has_active_tasksself--bool",children:"has_active_tasks(self) \u2192 bool"}),"\n",(0,t.jsx)(n.p,{children:"Return a value indicating whether there are any active tasks."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"has_any_tasksself--bool",children:"has_any_tasks(self) \u2192 bool"}),"\n",(0,t.jsx)(n.p,{children:"Return a value indicating whether there are any queued OR active tasks."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"has_pending_requestsself--bool",children:"has_pending_requests(self) \u2192 bool"}),"\n",(0,t.jsx)(n.p,{children:"Return whether the actor is pending processing for any requests."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," True if any requests are pending, else False."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"has_queued_tasksself--bool",children:"has_queued_tasks(self) \u2192 bool"}),"\n",(0,t.jsx)(n.p,{children:"Return a value indicating whether there are any queued tasks."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"id",children:"id"}),"\n",(0,t.jsx)(n.p,{children:"The components ID."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," ComponentId"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"indicators_initializedself--bool",children:"indicators_initialized(self) \u2192 bool"}),"\n",(0,t.jsx)(n.p,{children:"Return a value indicating whether all indicators are initialized."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," True if all initialized, else False"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"is_degraded",children:"is_degraded"}),"\n",(0,t.jsx)(n.p,{children:"bool"}),"\n",(0,t.jsxs)(n.p,{children:["Return whether the current component state is ",(0,t.jsx)(n.code,{children:"DEGRADED"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," Component.is_degraded"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"is_disposed",children:"is_disposed"}),"\n",(0,t.jsx)(n.p,{children:"bool"}),"\n",(0,t.jsxs)(n.p,{children:["Return whether the current component state is ",(0,t.jsx)(n.code,{children:"DISPOSED"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," Component.is_disposed"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"is_faulted",children:"is_faulted"}),"\n",(0,t.jsx)(n.p,{children:"bool"}),"\n",(0,t.jsxs)(n.p,{children:["Return whether the current component state is ",(0,t.jsx)(n.code,{children:"FAULTED"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," Component.is_faulted"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"is_initialized",children:"is_initialized"}),"\n",(0,t.jsx)(n.p,{children:"bool"}),"\n",(0,t.jsxs)(n.p,{children:["Return whether the component has been initialized (component.state >= ",(0,t.jsx)(n.code,{children:"INITIALIZED"}),")."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," Component.is_initialized"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"is_pending_requestself-uuid4-request_id--bool",children:"is_pending_request(self, UUID4 request_id) \u2192 bool"}),"\n",(0,t.jsx)(n.p,{children:"Return whether the request for the given identifier is pending processing."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"request_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,t.jsx)(n.em,{children:"UUID4"})}),") \u2013 The request ID to check."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," True if request is pending, else False."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"is_running",children:"is_running"}),"\n",(0,t.jsx)(n.p,{children:"bool"}),"\n",(0,t.jsxs)(n.p,{children:["Return whether the current component state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," Component.is_running"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"is_stopped",children:"is_stopped"}),"\n",(0,t.jsx)(n.p,{children:"bool"}),"\n",(0,t.jsxs)(n.p,{children:["Return whether the current component state is ",(0,t.jsx)(n.code,{children:"STOPPED"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," Component.is_stopped"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"loadself-dict-state--void",children:"load(self, dict state) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Load the actor/strategy state from the give state dictionary."}),"\n",(0,t.jsx)(n.p,{children:"Calls on_load and passes the state."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"state"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"bytes"})," \u200b*]*\u200b) \u2013 The strategy state to load."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-52",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"Exceptions raised will be caught, logged, and reraised."}),"\n",(0,t.jsx)(n.h4,{id:"log",children:"log"}),"\n",(0,t.jsx)(n.p,{children:"The actors logger."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," Logger"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"msgbus",children:"msgbus"}),"\n",(0,t.jsx)(n.p,{children:"The message bus for the actor (if registered)."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," MessageBus or ",(0,t.jsx)(n.code,{children:"None"})]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"on_barself-bar-bar--void",children:"on_bar(self, Bar bar) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives a bar."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"bar"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,t.jsx)(n.em,{children:"Bar"})}),") \u2013 The bar received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-53",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_dataself-data--void",children:"on_data(self, data) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives data."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"data"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,t.jsx)(n.em,{children:"Data"})}),") \u2013 The data received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-54",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_degradeself--void",children:"on_degrade(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed on degrade."}),"\n",(0,t.jsx)(n.h4,{id:"warning-55",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.p,{children:"Should be overridden in the actor implementation."}),"\n",(0,t.jsx)(n.h4,{id:"on_disposeself--void",children:"on_dispose(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed on dispose."}),"\n",(0,t.jsx)(n.p,{children:"Cleanup/release any resources used here."}),"\n",(0,t.jsx)(n.h4,{id:"warning-56",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_eventself-event-event--void",children:"on_event(self, Event event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed running and receives an event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Event",children:(0,t.jsx)(n.em,{children:"Event"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-57",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_faultself--void",children:"on_fault(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed on fault."}),"\n",(0,t.jsx)(n.p,{children:"Cleanup any resources used by the actor here."}),"\n",(0,t.jsx)(n.h4,{id:"warning-58",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.p,{children:"Should be overridden in the actor implementation."}),"\n",(0,t.jsx)(n.h4,{id:"on_funding_rateself-fundingrateupdate-funding_rate--void",children:"on_funding_rate(self, FundingRateUpdate funding_rate) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives a funding rate update."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"funding_rate"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.FundingRateUpdate",children:(0,t.jsx)(n.em,{children:"FundingRateUpdate"})}),") \u2013 The funding rate update received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-59",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_historical_dataself-data--void",children:"on_historical_data(self, data) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives historical data."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"data"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,t.jsx)(n.em,{children:"Data"})}),") \u2013 The historical data received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-60",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_index_priceself-indexpriceupdate-index_price--void",children:"on_index_price(self, IndexPriceUpdate index_price) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an index price update."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"index_price"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.IndexPriceUpdate",children:(0,t.jsx)(n.em,{children:"IndexPriceUpdate"})}),") \u2013 The index price update received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-61",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_instrumentself-instrument-instrument--void",children:"on_instrument(self, Instrument instrument) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an instrument."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"instrument"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.Instrument",children:(0,t.jsx)(n.em,{children:"Instrument"})}),") \u2013 The instrument received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-62",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_instrument_closeself-instrumentclose-update--void",children:"on_instrument_close(self, InstrumentClose update) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an instrument close update."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"update"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.InstrumentClose",children:(0,t.jsx)(n.em,{children:"InstrumentClose"})}),") \u2013 The instrument close received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-63",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_instrument_statusself-instrumentstatus-data--void",children:"on_instrument_status(self, InstrumentStatus data) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an instrument status update."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"data"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.InstrumentStatus",children:(0,t.jsx)(n.em,{children:"InstrumentStatus"})}),") \u2013 The instrument status update received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-64",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_loadself-dict-state--void",children:"on_load(self, dict state) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when the actor state is loaded."}),"\n",(0,t.jsx)(n.p,{children:"Saved state values will be contained in the give state dictionary."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"state"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"bytes"})," \u200b*]*\u200b) \u2013 The strategy state to load."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-65",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_mark_priceself-markpriceupdate-mark_price--void",children:"on_mark_price(self, MarkPriceUpdate mark_price) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives a mark price update."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"mark_price"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.MarkPriceUpdate",children:(0,t.jsx)(n.em,{children:"MarkPriceUpdate"})}),") \u2013 The mark price update received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-66",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_bookself-orderbook-order_book--void",children:"on_order_book(self, OrderBook order_book) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order book."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"order_book"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/book#nautilus_trader.model.book.OrderBook",children:(0,t.jsx)(n.em,{children:"OrderBook"})}),") \u2013 The order book received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-67",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_book_deltasself-deltas--void",children:"on_order_book_deltas(self, deltas) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives order book deltas."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"deltas"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.OrderBookDeltas",children:(0,t.jsx)(n.em,{children:"OrderBookDeltas"})})," ",(0,t.jsx)(n.em,{children:"or"})," \u200b",(0,t.jsx)(n.em,{children:"nautilus_pyo3.OrderBookDeltas"}),"\u200b) \u2013 The order book deltas received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-68",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_book_depthself-depth--void",children:"on_order_book_depth(self, depth) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order book depth."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"depth"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.OrderBookDepth10",children:(0,t.jsx)(n.em,{children:"OrderBookDepth10"})}),") \u2013 The order book depth received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-69",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_quote_tickself-quotetick-tick--void",children:"on_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives a quote tick."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"tick"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,t.jsx)(n.em,{children:"QuoteTick"})}),") \u2013 The tick received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-70",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_resetself--void-1",children:"on_reset(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed on reset."}),"\n",(0,t.jsx)(n.h4,{id:"warning-71",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.p,{children:"Should be overridden in a user implementation."}),"\n",(0,t.jsx)(n.h4,{id:"on_resumeself--void-1",children:"on_resume(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed on resume."}),"\n",(0,t.jsx)(n.h4,{id:"warning-72",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_saveself--dict",children:"on_save(self) \u2192 dict"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when the actor state is saved."}),"\n",(0,t.jsx)(n.p,{children:"Create and return a state dictionary of values to be saved."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," The strategy state to save."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," dict[str, bytes]"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-73",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_signalself-signal--void",children:"on_signal(self, signal) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives signal data."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"signal"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,t.jsx)(n.em,{children:"Data"})}),") \u2013 The signal received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-74",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_startself--void-1",children:"on_start(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed on start."}),"\n",(0,t.jsx)(n.p,{children:"The intent is that this method is called once per trading \u2018run\u2019, when initially starting."}),"\n",(0,t.jsx)(n.p,{children:"It is recommended to subscribe/request for data here."}),"\n",(0,t.jsx)(n.h4,{id:"warning-75",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.p,{children:"Should be overridden in a user implementation."}),"\n",(0,t.jsx)(n.h4,{id:"on_stopself--void-1",children:"on_stop(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed on stop."}),"\n",(0,t.jsx)(n.p,{children:"The intent is that this method is called to pause, or when done for day."}),"\n",(0,t.jsx)(n.h4,{id:"warning-76",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.p,{children:"Should be overridden in a user implementation."}),"\n",(0,t.jsx)(n.h4,{id:"on_trade_tickself-tradetick-tick--void",children:"on_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives a trade tick."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"tick"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,t.jsx)(n.em,{children:"TradeTick"})}),") \u2013 The tick received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-77",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"pending_requestsself--set",children:"pending_requests(self) \u2192 set"}),"\n",(0,t.jsx)(n.p,{children:"Return the request IDs which are currently pending processing."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," set[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"}),"]"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"portfolio",children:"portfolio"}),"\n",(0,t.jsx)(n.p,{children:"The read-only portfolio for the actor."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," PortfolioFacade"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"publish_dataself-datatype-data_type-data-data--void",children:"publish_data(self, DataType data_type, Data data) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Publish the given data to the message bus."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"data_type"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.DataType",children:(0,t.jsx)(n.em,{children:"DataType"})}),") \u2013 The data type being published."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"data"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,t.jsx)(n.em,{children:"Data"})}),") \u2013 The data to publish."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"publish_signalself-str-name-value-uint64_t-ts_event0--void",children:"publish_signal(self, str name, value, uint64_t ts_event=0) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Publish the given value as a signal to the message bus."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"name"})," (\u200b",(0,t.jsx)(n.em,{children:"str"}),"\u200b) \u2013 The name of the signal being published. The signal name will be converted to title case, with each word capitalized (e.g., \u2018example\u2019 becomes \u2018SignalExample\u2019)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"value"})," (\u200b",(0,t.jsx)(n.em,{children:"object"}),"\u200b) \u2013 The signal data to publish."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ts_event"})," (",(0,t.jsx)(n.em,{children:"uint64_t"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 UNIX timestamp (nanoseconds) when the signal event occurred. If ",(0,t.jsx)(n.code,{children:"None"})," then will timestamp current time."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"queue_for_executorself-func-callable-any-tuple-argsnone-dict-kwargsnone",children:"queue_for_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)"}),"\n",(0,t.jsx)(n.p,{children:"Queues the callable func to be executed as fn(*args, **kwargs) sequentially."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"func"})," (\u200b",(0,t.jsx)(n.em,{children:"Callable"}),"\u200b) \u2013 The function to be executed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"args"})," (\u200b",(0,t.jsx)(n.em,{children:"positional arguments"}),"\u200b) \u2013 The positional arguments for the call to func."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"kwargs"})," (\u200b",(0,t.jsx)(n.em,{children:"arbitrary keyword arguments"}),"\u200b) \u2013 The keyword arguments for the call to func."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If func is not of type Callable."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"queued_task_idsself--list",children:"queued_task_ids(self) \u2192 list"}),"\n",(0,t.jsx)(n.p,{children:"Return the queued task identifiers."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.executor.TaskId",children:"TaskId"}),"]"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"register_executorself-loop-asyncioabstracteventloop-executor-executor--void",children:"register_executor(self, loop: asyncio.AbstractEventLoop, executor: Executor) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Register the given Executor for the actor."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"loop"})," (\u200b",(0,t.jsx)(n.em,{children:"asyncio.AbstractEventLoop"}),"\u200b) \u2013 The event loop of the application."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"executor"})," (\u200b",(0,t.jsx)(n.em,{children:"concurrent.futures.Executor"}),"\u200b) \u2013 The executor to register."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If executor is not of type concurrent.futures.Executor"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"register_indicator_for_barsself-bartype-bar_type-indicator-indicator--void",children:"register_indicator_for_bars(self, BarType bar_type, Indicator indicator) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Register the given indicator with the actor/strategy to receive bar data for the given bar type."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"bar_type"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.BarType",children:(0,t.jsx)(n.em,{children:"BarType"})}),") \u2013 The bar type for bar updates."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"indicator"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,t.jsx)(n.em,{children:"Indicator"})}),") \u2013 The indicator to register."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"register_indicator_for_quote_ticksself-instrumentid-instrument_id-indicator-indicator--void",children:"register_indicator_for_quote_ticks(self, InstrumentId instrument_id, Indicator indicator) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Register the given indicator with the actor/strategy to receive quote tick data for the given instrument ID."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID for tick updates."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"indicator"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,t.jsx)(n.em,{children:"Indicator"})}),") \u2013 The indicator to register."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"register_indicator_for_trade_ticksself-instrumentid-instrument_id-indicator-indicator--void",children:"register_indicator_for_trade_ticks(self, InstrumentId instrument_id, Indicator indicator) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Register the given indicator with the actor/strategy to receive trade tick data for the given instrument ID."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID for tick updates."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"indicator"})," (\u200b",(0,t.jsx)(n.em,{children:"indicator"}),"\u200b) \u2013 The indicator to register."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"register_warning_eventself-type-event--void",children:"register_warning_event(self, type event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Register the given event type for warning log levels."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (\u200b",(0,t.jsx)(n.em,{children:"type"}),"\u200b) \u2013 The event class to register."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"registered_indicators",children:"registered_indicators"}),"\n",(0,t.jsx)(n.p,{children:"Return the registered indicators for the strategy."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:"Indicator"}),"]"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"request_aggregated_barsself-list-bar_types-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-bool-include_external_datafalse-bool-update_subscriptionsfalse-update_catalog-bool--false-dict-paramsnone--uuid4",children:["request_aggregated_bars(self, list bar_types, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, bool include_external_data=False, bool update_subscriptions=False, update_catalog: bool = False, dict params=None) \u2192 ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsx)(n.p,{children:"Request historical aggregated Bar data for multiple bar types. The first bar is used to determine which market data type will be queried. This can either be quotes, trades or bars. If bars are queried, the first bar type needs to have a composite bar that is external (i.e. not internal/aggregated). This external bar type will be queried."}),"\n",(0,t.jsxs)(n.p,{children:["If end is ",(0,t.jsx)(n.code,{children:"None"})," then will request up to the most recent data."]}),"\n",(0,t.jsx)(n.p,{children:"Once the response is received, the bar data is forwarded from the message bus to the on_historical_data handler. Any tick data used for aggregation is also forwarded to the on_historical_data handler."}),"\n",(0,t.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"bar_types"})," (",(0,t.jsx)(n.em,{children:"list"})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.BarType",children:(0,t.jsx)(n.em,{children:"BarType"})})," \u200b*]*\u200b) \u2013 The list of bar types for the request. Composite bars can also be used and need to figure in the list after a BarType on which it depends."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"start"})," (\u200b",(0,t.jsx)(n.em,{children:"datetime"}),"\u200b) \u2013 The start datetime (UTC) of request time range. Should be left-inclusive (start <= value), but inclusiveness is not currently guaranteed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"end"})," (",(0,t.jsx)(n.em,{children:"datetime"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) of request time range. If None then will be replaced with the current UTC time. Should be right-inclusive (value <= end), but inclusiveness is not currently guaranteed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"limit"})," (",(0,t.jsx)(n.em,{children:"int"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The limit on the amount of data received (quote ticks, trade ticks or bars)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"callback"})," (",(0,t.jsx)(n.em,{children:"Callable"})," ",(0,t.jsx)(n.em,{children:"["})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,t.jsx)(n.em,{children:"UUID4"})})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"None"})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"include_external_data"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If True, includes the queried external data in the response."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"update_subscriptions"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If True, updates the aggregators of any existing or future subscription with the queried external data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"update_catalog"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If start is None."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > current timestamp (now)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If end is > current timestamp (now)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > end."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If bar_types is empty."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If bar_types is empty or contains elements not of type BarType."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"request_barsself-bartype-bar_type-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4",children:["request_bars(self, BarType bar_type, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsx)(n.p,{children:"Request historical Bar data."}),"\n",(0,t.jsxs)(n.p,{children:["If end is ",(0,t.jsx)(n.code,{children:"None"})," then will request up to the most recent data."]}),"\n",(0,t.jsx)(n.p,{children:"Once the response is received, the bar data is forwarded from the message bus to the on_historical_data handler."}),"\n",(0,t.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"bar_type"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.BarType",children:(0,t.jsx)(n.em,{children:"BarType"})}),") \u2013 The bar type for the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"start"})," (\u200b",(0,t.jsx)(n.em,{children:"datetime"}),"\u200b) \u2013 The start datetime (UTC) of request time range. Should be left-inclusive (start <= value), but inclusiveness is not currently guaranteed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"end"})," (",(0,t.jsx)(n.em,{children:"datetime"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) of request time range. If None then will be replaced with the current UTC time. Should be right-inclusive (value <= end), but inclusiveness is not currently guaranteed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"limit"})," (",(0,t.jsx)(n.em,{children:"int"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The limit on the amount of bars received."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"callback"})," (",(0,t.jsx)(n.em,{children:"Callable"})," ",(0,t.jsx)(n.em,{children:"["})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,t.jsx)(n.em,{children:"UUID4"})})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"None"})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"update_catalog"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If start is None."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > current timestamp (now)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If end is > current timestamp (now)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > end."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"request_dataself-datatype-data_type-clientid-client_id-instrumentid-instrument_idnone-datetime-startnone-datetime-endnone-int-limit0-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4",children:["request_data(self, DataType data_type, ClientId client_id, InstrumentId instrument_id=None, datetime start=None, datetime end=None, int limit=0, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsx)(n.p,{children:"Request custom data for the given data type from the given data client."}),"\n",(0,t.jsx)(n.p,{children:"Once the response is received, the data is forwarded from the message bus to the on_historical_data handler."}),"\n",(0,t.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"data_type"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.DataType",children:(0,t.jsx)(n.em,{children:"DataType"})}),") \u2013 The data type for the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})}),") \u2013 The data client ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"start"})," (\u200b",(0,t.jsx)(n.em,{children:"datetime"}),"\u200b) \u2013 The start datetime (UTC) of request time range. Cannot be None. Should be left-inclusive (start <= value), but inclusiveness is not currently guaranteed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"end"})," (",(0,t.jsx)(n.em,{children:"datetime"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) of request time range. If None then will be replaced with the current UTC time. Should be right-inclusive (value <= end), but inclusiveness is not currently guaranteed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"limit"})," (",(0,t.jsx)(n.em,{children:"int"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The limit on the amount of data points received."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"callback"})," (",(0,t.jsx)(n.em,{children:"Callable"})," ",(0,t.jsx)(n.em,{children:"["})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,t.jsx)(n.em,{children:"UUID4"})})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"None"})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"update_catalog"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If start is None."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > current timestamp (now)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If end is > current timestamp (now)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > end."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"request_instrumentself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4",children:["request_instrument(self, InstrumentId instrument_id, datetime start=None, datetime end=None, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsx)(n.p,{children:"Request Instrument data for the given instrument ID."}),"\n",(0,t.jsxs)(n.p,{children:["If end is ",(0,t.jsx)(n.code,{children:"None"})," then will request up to the most recent data."]}),"\n",(0,t.jsx)(n.p,{children:"Once the response is received, the instrument data is forwarded from the message bus to the on_instrument handler."}),"\n",(0,t.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID for the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"start"})," (",(0,t.jsx)(n.em,{children:"datetime"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The start datetime (UTC) of request time range. The inclusiveness depends on individual data client implementation."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"end"})," (",(0,t.jsx)(n.em,{children:"datetime"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) of request time range. The inclusiveness depends on individual data client implementation."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"callback"})," (",(0,t.jsx)(n.em,{children:"Callable"})," ",(0,t.jsx)(n.em,{children:"["})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,t.jsx)(n.em,{children:"UUID4"})})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"None"})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"update_catalog"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is not None and > current timestamp (now)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If end is not None and > current timestamp (now)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If start and end are not None and start is >= end."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"request_instrumentsself-venue-venue-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4",children:["request_instruments(self, Venue venue, datetime start=None, datetime end=None, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsx)(n.p,{children:"Request all Instrument data for the given venue."}),"\n",(0,t.jsxs)(n.p,{children:["If end is ",(0,t.jsx)(n.code,{children:"None"})," then will request up to the most recent data."]}),"\n",(0,t.jsx)(n.p,{children:"Once the response is received, the instrument data is forwarded from the message bus to the on_instrument handler."}),"\n",(0,t.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"venue"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.Venue",children:(0,t.jsx)(n.em,{children:"Venue"})}),") \u2013 The venue for the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"start"})," (",(0,t.jsx)(n.em,{children:"datetime"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The start datetime (UTC) of request time range. The inclusiveness depends on individual data client implementation."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"end"})," (",(0,t.jsx)(n.em,{children:"datetime"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) of request time range. The inclusiveness depends on individual data client implementation."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"callback"})," (",(0,t.jsx)(n.em,{children:"Callable"})," ",(0,t.jsx)(n.em,{children:"["})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,t.jsx)(n.em,{children:"UUID4"})})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"None"})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"update_catalog"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"only_last (default True) retains only the latest instrument record per instrument_id, based on the most recent ts_init."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is not None and > current timestamp (now)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If end is not None and > current timestamp (now)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If start and end are not None and start is >= end."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"request_order_book_snapshotself-instrumentid-instrument_id-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-dict-paramsnone--uuid4",children:["request_order_book_snapshot(self, InstrumentId instrument_id, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, dict params=None) \u2192 ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsx)(n.p,{children:"Request an order book snapshot."}),"\n",(0,t.jsx)(n.p,{children:"Once the response is received, the order book data is forwarded from the message bus to the on_historical_data handler."}),"\n",(0,t.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID for the order book snapshot request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"limit"})," (",(0,t.jsx)(n.em,{children:"int"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The limit on the depth of the order book snapshot."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If None, it will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"callback"})," (",(0,t.jsx)(n.em,{children:"Callable"})," ",(0,t.jsx)(n.em,{children:"["})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,t.jsx)(n.em,{children:"UUID4"})})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"None"})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If the instrument_id is None."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"request_quote_ticksself-instrumentid-instrument_id-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4",children:["request_quote_ticks(self, InstrumentId instrument_id, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsx)(n.p,{children:"Request historical QuoteTick data."}),"\n",(0,t.jsxs)(n.p,{children:["If end is ",(0,t.jsx)(n.code,{children:"None"})," then will request up to the most recent data."]}),"\n",(0,t.jsx)(n.p,{children:"Once the response is received, the quote tick data is forwarded from the message bus to the on_historical_data handler."}),"\n",(0,t.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The tick instrument ID for the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"start"})," (\u200b",(0,t.jsx)(n.em,{children:"datetime"}),"\u200b) \u2013 The start datetime (UTC) of request time range. Should be left-inclusive (start <= value), but inclusiveness is not currently guaranteed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"end"})," (",(0,t.jsx)(n.em,{children:"datetime"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) of request time range. If None then will be replaced with the current UTC time. Should be right-inclusive (value <= end), but inclusiveness is not currently guaranteed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"limit"})," (",(0,t.jsx)(n.em,{children:"int"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The limit on the amount of quote ticks received."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"callback"})," (",(0,t.jsx)(n.em,{children:"Callable"})," ",(0,t.jsx)(n.em,{children:"["})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,t.jsx)(n.em,{children:"UUID4"})})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"None"})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"update_catalog"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If start is None."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > current timestamp (now)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If end is > current timestamp (now)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > end."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"request_trade_ticksself-instrumentid-instrument_id-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4",children:["request_trade_ticks(self, InstrumentId instrument_id, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsx)(n.p,{children:"Request historical TradeTick data."}),"\n",(0,t.jsxs)(n.p,{children:["If end is ",(0,t.jsx)(n.code,{children:"None"})," then will request up to the most recent data."]}),"\n",(0,t.jsx)(n.p,{children:"Once the response is received, the trade tick data is forwarded from the message bus to the on_historical_data handler."}),"\n",(0,t.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The tick instrument ID for the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"start"})," (\u200b",(0,t.jsx)(n.em,{children:"datetime"}),"\u200b) \u2013 The start datetime (UTC) of request time range. Should be left-inclusive (start <= value), but inclusiveness is not currently guaranteed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"end"})," (",(0,t.jsx)(n.em,{children:"datetime"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) of request time range. If None then will be replaced with the current UTC time. Should be right-inclusive (value <= end), but inclusiveness is not currently guaranteed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"limit"})," (",(0,t.jsx)(n.em,{children:"int"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The limit on the amount of trade ticks received."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"callback"})," (",(0,t.jsx)(n.em,{children:"Callable"})," ",(0,t.jsx)(n.em,{children:"["})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,t.jsx)(n.em,{children:"UUID4"})})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"None"})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"update_catalog"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If start is None."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > current timestamp (now)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If end is > current timestamp (now)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > end."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"resetself--void",children:"reset(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Reset the component."}),"\n",(0,t.jsx)(n.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,t.jsxs)(n.p,{children:["While executing on_reset() any exception will be logged and reraised, then the component will remain in a ",(0,t.jsx)(n.code,{children:"RESETTING"})," state."]}),"\n",(0,t.jsx)(n.h4,{id:"warning-78",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"Do not override."}),"\n",(0,t.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,t.jsx)(n.h4,{id:"resumeself--void",children:"resume(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Resume the component."}),"\n",(0,t.jsxs)(n.p,{children:["While executing on_resume() any exception will be logged and reraised, then the component will remain in a ",(0,t.jsx)(n.code,{children:"RESUMING"})," state."]}),"\n",(0,t.jsx)(n.h4,{id:"warning-79",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"Do not override."}),"\n",(0,t.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,t.jsx)(n.h4,{id:"run_in_executorself-func-callable-any-tuple-argsnone-dict-kwargsnone",children:"run_in_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)"}),"\n",(0,t.jsx)(n.p,{children:"Schedules the callable func to be executed as fn(*args, **kwargs)."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"func"})," (\u200b",(0,t.jsx)(n.em,{children:"Callable"}),"\u200b) \u2013 The function to be executed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"args"})," (\u200b",(0,t.jsx)(n.em,{children:"positional arguments"}),"\u200b) \u2013 The positional arguments for the call to func."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"kwargs"})," (\u200b",(0,t.jsx)(n.em,{children:"arbitrary keyword arguments"}),"\u200b) \u2013 The keyword arguments for the call to func."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," The unique task identifier for the execution. This also corresponds to any future objects memory address."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.executor.TaskId",children:"TaskId"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If func is not of type Callable."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"saveself--dict",children:"save(self) \u2192 dict"}),"\n",(0,t.jsx)(n.p,{children:"Return the actor/strategy state dictionary to be saved."}),"\n",(0,t.jsx)(n.p,{children:"Calls on_save."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," The strategy state to save."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," dict[str, bytes]"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-80",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"Exceptions raised will be caught, logged, and reraised."}),"\n",(0,t.jsx)(n.h4,{id:"shutdown_systemself-str-reasonnone--void",children:"shutdown_system(self, str reason=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Initiate a system-wide shutdown by generating and publishing a ShutdownSystem command."}),"\n",(0,t.jsx)(n.p,{children:"The command is handled by the system\u2019s NautilusKernel, which will invoke either stop (synchronously) or stop_async (asynchronously) depending on the execution context and the presence of an active event loop."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"reason"})," (",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The reason for issuing the shutdown command."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"startself--void",children:"start(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Start the component."}),"\n",(0,t.jsxs)(n.p,{children:["While executing on_start() any exception will be logged and reraised, then the component will remain in a ",(0,t.jsx)(n.code,{children:"STARTING"})," state."]}),"\n",(0,t.jsx)(n.h4,{id:"warning-81",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"Do not override."}),"\n",(0,t.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,t.jsx)(n.h4,{id:"state",children:"state"}),"\n",(0,t.jsx)(n.p,{children:"ComponentState"}),"\n",(0,t.jsx)(n.p,{children:"Return the components current state."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," ComponentState"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," Component.state"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"stopself--void",children:"stop(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Stop the component."}),"\n",(0,t.jsxs)(n.p,{children:["While executing on_stop() any exception will be logged and reraised, then the component will remain in a ",(0,t.jsx)(n.code,{children:"STOPPING"})," state."]}),"\n",(0,t.jsx)(n.h4,{id:"warning-82",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"Do not override."}),"\n",(0,t.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_barsself-bartype-bar_type-clientid-client_idnone-bool-await_partialfalse-bool-update_catalogfalse-dict-paramsnone--void",children:"subscribe_bars(self, BarType bar_type, ClientId client_id=None, bool await_partial=False, bool update_catalog=False, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to streaming Bar data for the given bar type."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching bar data published on the message bus is forwarded to the on_bar handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"bar_type"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.BarType",children:(0,t.jsx)(n.em,{children:"BarType"})}),") \u2013 The bar type to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"await_partial"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If the bar aggregator should await the arrival of a historical partial bar prior to actively aggregating new bars."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"update_catalog"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data. Only useful when downloading data during a backtest."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_dataself-datatype-data_type-clientid-client_idnone-instrumentid-instrument_idnone-bool-update_catalogfalse-dict-paramsnone--void",children:"subscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, bool update_catalog=False, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to data of the given data type."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching data published on the message bus is forwarded to the on_data handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"data_type"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.DataType",children:(0,t.jsx)(n.em,{children:"DataType"})}),") \u2013 The data type to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The data client ID. If supplied then a Subscribe command will be sent to the corresponding data client."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"update_catalog"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data. Only useful when downloading data during a backtest."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_funding_ratesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"subscribe_funding_rates(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to streaming FundingRateUpdate data for the given instrument ID."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching funding rate updates published on the message bus are forwarded to the on_funding_rate handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_index_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"subscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to streaming IndexPriceUpdate data for the given instrument ID."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching index price updates published on the message bus are forwarded to the on_index_price handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_instrumentself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"subscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to update Instrument data for the given instrument ID."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching instrument data published on the message bus is forwarded to the on_instrument handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID for the subscription."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_instrument_closeself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"subscribe_instrument_close(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to close updates for the given instrument ID."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching instrument close data published on the message bus is forwarded to the on_instrument_close handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to subscribe to status updates for."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_instrument_statusself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"subscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to status updates for the given instrument ID."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching instrument status data published on the message bus is forwarded to the on_instrument_status handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to subscribe to status updates for."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_instrumentsself-venue-venue-clientid-client_idnone-dict-paramsnone--void",children:"subscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to update Instrument data for the given venue."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching instrument data published on the message bus is forwarded the on_instrument handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"venue"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.Venue",children:(0,t.jsx)(n.em,{children:"Venue"})}),") \u2013 The venue for the subscription."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_mark_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"subscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to streaming MarkPriceUpdate data for the given instrument ID."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching mark price updates published on the message bus are forwarded to the on_mark_price handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_order_book_at_intervalself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-int-interval_ms1000-clientid-client_idnone-dict-paramsnone--void",children:"subscribe_order_book_at_interval(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, int interval_ms=1000, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to an OrderBook at a specified interval for the given instrument ID."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching order book updates published on the message bus are forwarded to the on_order_book handler."}),"\n",(0,t.jsx)(n.p,{children:"The DataEngine will only maintain one order book for each instrument. Because of this - the level, depth and params for the stream will be set as per the last subscription request (this will also affect all subscribers)."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The order book instrument ID to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"book_type"})," (BookType ","L3_MBO",") \u2013 The order book type."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"depth"})," (",(0,t.jsx)(n.em,{children:"int"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The maximum depth for the order book. A depth of 0 is maximum depth."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"interval_ms"})," (",(0,t.jsx)(n.em,{children:"int"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default 1000"}),"\u200b) \u2013 The order book snapshot interval (milliseconds)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If depth is negative (< 0)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If interval_ms is not positive (> 0)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-83",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"Consider subscribing to order book deltas if you need intervals less than 100 milliseconds."}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_order_book_deltasself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-clientid-client_idnone-bool-managedtrue-bool-pyo3_conversionfalse-dict-paramsnone--void",children:"subscribe_order_book_deltas(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to the order book data stream, being a snapshot then deltas for the given instrument ID."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching order book data published on the message bus is forwarded to the on_order_book_deltas handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The order book instrument ID to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"book_type"})," (BookType ","L3_MBO",") \u2013 The order book type."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"depth"})," (",(0,t.jsx)(n.em,{children:"int"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The maximum depth for the order book. A depth of 0 is maximum depth."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"managed"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If an order book should be managed by the data engine based on the subscribed feed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"pyo3_conversion"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If received deltas should be converted to nautilus_pyo3.OrderBookDeltas prior to being passed to the on_order_book_deltas handler."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_order_book_depthself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-clientid-client_idnone-bool-managedtrue-bool-pyo3_conversionfalse-dict-paramsnone--void",children:"subscribe_order_book_depth(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to the order book depth stream for the given instrument ID."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching order book data published on the message bus is forwarded to the on_order_book_depth handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The order book instrument ID to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"book_type"})," (BookType ","L3_MBO",") \u2013 The order book type."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"managed"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If an order book should be managed by the data engine based on the subscribed feed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"pyo3_conversion"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If received deltas should be converted to nautilus_pyo3.OrderBookDepth prior to being passed to the on_order_book_depth handler."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_quote_ticksself-instrumentid-instrument_id-clientid-client_idnone-bool-update_catalogfalse-dict-paramsnone--void",children:"subscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to streaming QuoteTick data for the given instrument ID."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching quote tick data published on the message bus is forwarded to the on_quote_tick handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The tick instrument to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"update_catalog"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data. Only useful when downloading data during a backtest."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_signalself-str-name--void",children:"subscribe_signal(self, str name='') \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to a specific signal by name, or to all signals if no name is provided."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching signal data published on the message bus is forwarded to the on_signal handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"name"})," (",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The name of the signal to subscribe to. If not provided or an empty string is passed, the subscription will include all signals. The signal name is case-insensitive and will be capitalized (e.g., \u2018example\u2019 becomes \u2018SignalExample*\u2019)."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_trade_ticksself-instrumentid-instrument_id-clientid-client_idnone-bool-update_catalogfalse-dict-paramsnone--void",children:"subscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to streaming TradeTick data for the given instrument ID."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching trade tick data published on the message bus is forwarded to the on_trade_tick handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The tick instrument to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"update_catalog"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data. Only useful when downloading data during a backtest."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"to_importable_configself--importableactorconfig",children:["to_importable_config(self) \u2192 ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.common.config.ImportableActorConfig",children:"ImportableActorConfig"})]}),"\n",(0,t.jsx)(n.p,{children:"Returns an importable configuration for this actor."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.common.config.ImportableActorConfig",children:"ImportableActorConfig"})]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"trader_id",children:"trader_id"}),"\n",(0,t.jsx)(n.p,{children:"The trader ID associated with the component."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," TraderId"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"type",children:"type"}),"\n",(0,t.jsx)(n.p,{children:"The components type."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," type"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"unsubscribe_barsself-bartype-bar_type-clientid-client_idnone-dict-paramsnone--void",children:"unsubscribe_bars(self, BarType bar_type, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Unsubscribe from streaming Bar data for the given bar type."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"bar_type"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.BarType",children:(0,t.jsx)(n.em,{children:"BarType"})}),") \u2013 The bar type to unsubscribe from."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"unsubscribe_dataself-datatype-data_type-clientid-client_idnone-instrumentid-instrument_idnone-dict-paramsnone--void",children:"unsubscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Unsubscribe from data of the given data type."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"data_type"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.DataType",children:(0,t.jsx)(n.em,{children:"DataType"})}),") \u2013 The data type to unsubscribe from."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The data client ID. If supplied then an Unsubscribe command will be sent to the data client."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"unsubscribe_funding_ratesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"unsubscribe_funding_rates(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Unsubscribe from streaming FundingRateUpdate data for the given instrument ID."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to unsubscribe from."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"unsubscribe_index_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"unsubscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Unsubscribe from streaming IndexPriceUpdate data for the given instrument ID."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"unsubscribe_instrumentself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"unsubscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Unsubscribe from update Instrument data for the given instrument ID."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to unsubscribe from."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"unsubscribe_instrument_statusself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"unsubscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Unsubscribe to status updates of the given venue."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to unsubscribe to status updates for."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"unsubscribe_instrumentsself-venue-venue-clientid-client_idnone-dict-paramsnone--void",children:"unsubscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Unsubscribe from update Instrument data for the given venue."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"venue"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.Venue",children:(0,t.jsx)(n.em,{children:"Venue"})}),") \u2013 The venue for the subscription."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"unsubscribe_mark_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"unsubscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Unsubscribe from streaming MarkPriceUpdate data for the given instrument ID."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"unsubscribe_order_book_at_intervalself-instrumentid-instrument_id-int-interval_ms1000-clientid-client_idnone-dict-paramsnone--void",children:"unsubscribe_order_book_at_interval(self, InstrumentId instrument_id, int interval_ms=1000, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Unsubscribe from an OrderBook at a specified interval for the given instrument ID."}),"\n",(0,t.jsx)(n.p,{children:"The interval must match the previously subscribed interval."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The order book instrument to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"interval_ms"})," (",(0,t.jsx)(n.em,{children:"int"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default 1000"}),"\u200b) \u2013 The order book snapshot interval (milliseconds)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"unsubscribe_order_book_deltasself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"unsubscribe_order_book_deltas(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Unsubscribe the order book deltas stream for the given instrument ID."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The order book instrument to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"unsubscribe_order_book_depthself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"unsubscribe_order_book_depth(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Unsubscribe the order book depth stream for the given instrument ID."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The order book instrument to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"unsubscribe_quote_ticksself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"unsubscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Unsubscribe from streaming QuoteTick data for the given instrument ID."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The tick instrument to unsubscribe from."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"unsubscribe_trade_ticksself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void",children:"unsubscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Unsubscribe from streaming TradeTick data for the given instrument ID."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The tick instrument ID to unsubscribe from."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"update_syntheticself-syntheticinstrument-synthetic--void",children:"update_synthetic(self, SyntheticInstrument synthetic) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Update the synthetic instrument in the cache."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"synthetic"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.SyntheticInstrument",children:(0,t.jsx)(n.em,{children:"SyntheticInstrument"})}),") \u2013 The synthetic instrument to update in the cache."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"KeyError"})," \u2013 If synthetic does not already exist in the cache."]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"class-newsimpact",children:[(0,t.jsx)(n.em,{children:"class"})," NewsImpact"]}),"\n",(0,t.jsxs)(n.p,{children:["Bases: ",(0,t.jsx)(n.code,{children:"Enum"})]}),"\n",(0,t.jsxs)(n.h4,{id:"none--1",children:["NONE ",(0,t.jsx)(n.em,{children:"= 1"})]}),"\n",(0,t.jsxs)(n.h4,{id:"low--2",children:["LOW ",(0,t.jsx)(n.em,{children:"= 2"})]}),"\n",(0,t.jsxs)(n.h4,{id:"medium--3",children:["MEDIUM ",(0,t.jsx)(n.em,{children:"= 3"})]}),"\n",(0,t.jsxs)(n.h4,{id:"high--4",children:["HIGH ",(0,t.jsx)(n.em,{children:"= 4"})]}),"\n",(0,t.jsxs)(n.h3,{id:"class-newsevent",children:[(0,t.jsx)(n.em,{children:"class"})," NewsEvent"]}),"\n",(0,t.jsxs)(n.p,{children:["Bases: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,t.jsx)(n.code,{children:"Data"})})]}),"\n",(0,t.jsx)(n.p,{children:"Represents an economic news event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"impact"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.filters.NewsImpact",children:(0,t.jsx)(n.em,{children:"NewsImpact"})}),") \u2013 The expected impact for the economic news event."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"name"})," (\u200b",(0,t.jsx)(n.em,{children:"str"}),"\u200b) \u2013 The name of the economic news event."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"currency"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Currency",children:(0,t.jsx)(n.em,{children:"Currency"})}),") \u2013 The currency the economic news event is expected to affect."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ts_event"})," (\u200b",(0,t.jsx)(n.em,{children:"int"}),"\u200b) \u2013 UNIX timestamp (nanoseconds) when the news event occurred."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ts_init"})," (\u200b",(0,t.jsx)(n.em,{children:"int"}),"\u200b) \u2013 UNIX timestamp (nanoseconds) when the data object was initialized."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"property-impact--newsimpact",children:[(0,t.jsx)(n.em,{children:"property"})," impact ",(0,t.jsxs)(n.em,{children:[": ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.filters.NewsImpact",children:"NewsImpact"})]})]}),"\n",(0,t.jsxs)(n.h4,{id:"property-name--str",children:[(0,t.jsx)(n.em,{children:"property"})," name ",(0,t.jsx)(n.em,{children:": str"})]}),"\n",(0,t.jsxs)(n.h4,{id:"property-currency--currency",children:[(0,t.jsx)(n.em,{children:"property"})," currency ",(0,t.jsxs)(n.em,{children:[": ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/objects#nautilus_trader.model.objects.Currency",children:"Currency"})]})]}),"\n",(0,t.jsxs)(n.h4,{id:"property-tsevent-int_",children:[(0,t.jsx)(n.em,{children:"property"})," ts",(0,t.jsx)(n.em,{children:"event"}),": int_"]}),"\n",(0,t.jsx)(n.p,{children:"int"}),"\n",(0,t.jsx)(n.p,{children:"UNIX timestamp (nanoseconds) when the data event occurred."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," int"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," Data.ts_event"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"property-tsinit-int_",children:[(0,t.jsx)(n.em,{children:"property"})," ts",(0,t.jsx)(n.em,{children:"init"}),": int_"]}),"\n",(0,t.jsx)(n.p,{children:"int"}),"\n",(0,t.jsx)(n.p,{children:"UNIX timestamp (nanoseconds) when the instance was created."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," int"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," Data.ts_init"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"classmethod-fully_qualified_namecls--str-1",children:[(0,t.jsx)(n.em,{children:"classmethod"})," fully_qualified_name(cls) \u2192 str"]}),"\n",(0,t.jsx)(n.p,{children:"Return the fully qualified name for the Data class."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," str"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"classmethod-is_signalcls-str-name--bool",children:[(0,t.jsx)(n.em,{children:"classmethod"})," is_signal(cls, str name='') \u2192 bool"]}),"\n",(0,t.jsx)(n.p,{children:"Determine if the current class is a signal type, optionally checking for a specific signal name."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"name"})," (",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific signal name to check. If name not provided or if an empty string is passed, the method checks whether the class name indicates a general signal type. If name is provided, the method checks if the class name corresponds to that specific signal."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," True if the class name matches the signal type or the specific signal name, otherwise False."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"class-economicnewseventfilter",children:[(0,t.jsx)(n.em,{children:"class"})," EconomicNewsEventFilter"]}),"\n",(0,t.jsxs)(n.p,{children:["Bases: ",(0,t.jsx)(n.code,{children:"object"})]}),"\n",(0,t.jsx)(n.p,{children:"Provides methods to help filter trading strategy rules based on economic news events."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"currencies"})," (",(0,t.jsx)(n.em,{children:"list"})," *[*",(0,t.jsx)(n.em,{children:"str"})," \u200b*]*\u200b) \u2013 The list of three letter currency codes to filter."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"impacts"})," (",(0,t.jsx)(n.em,{children:"list"})," *[*",(0,t.jsx)(n.em,{children:"str"})," \u200b*]*\u200b) \u2013 The list of impact levels to filter (\u2018LOW\u2019, \u2018MEDIUM\u2019, \u2018HIGH\u2019)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"news_data"})," (\u200b",(0,t.jsx)(n.em,{children:"pd.DataFrame"}),"\u200b) \u2013 The economic news data."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"property-unfiltered_data_start",children:[(0,t.jsx)(n.em,{children:"property"})," unfiltered_data_start"]}),"\n",(0,t.jsx)(n.p,{children:"Return the start of the raw data."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," datetime"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"property-unfiltered_data_end",children:[(0,t.jsx)(n.em,{children:"property"})," unfiltered_data_end"]}),"\n",(0,t.jsx)(n.p,{children:"Return the end of the raw data."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," datetime"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"property-currencies",children:[(0,t.jsx)(n.em,{children:"property"})," currencies"]}),"\n",(0,t.jsx)(n.p,{children:"Return the currencies the data is filtered on."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," list[str]"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"property-impacts",children:[(0,t.jsx)(n.em,{children:"property"})," impacts"]}),"\n",(0,t.jsx)(n.p,{children:"Return the news impacts the data is filtered on."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," list[str]"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"next_eventtime_now-datetime--newsevent--none",children:["next_event(time_now: datetime) \u2192 ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.filters.NewsEvent",children:"NewsEvent"})," | None"]}),"\n",(0,t.jsx)(n.p,{children:"Return the next news event matching the filter conditions. Will return None if no news events match the filter conditions."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"time_now"})," (\u200b",(0,t.jsx)(n.em,{children:"datetime"}),"\u200b) \u2013 The current time."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," The next news event in the filtered data if any."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," NewsEvent or ",(0,t.jsx)(n.code,{children:"None"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 The time_now < self.unfiltered_data_start."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 The time_now > self.unfiltered_data_end."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If time_now is not tz aware UTC."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"prev_eventtime_now-datetime--newsevent--none",children:["prev_event(time_now: datetime) \u2192 ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.filters.NewsEvent",children:"NewsEvent"})," | None"]}),"\n",(0,t.jsx)(n.p,{children:"Return the previous news event matching the initial filter conditions. Will return None if no news events match the filter conditions."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"time_now"})," (\u200b",(0,t.jsx)(n.em,{children:"datetime"}),"\u200b) \u2013 The current time."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," The previous news event in the filtered data if any."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," NewsEvent or ",(0,t.jsx)(n.code,{children:"None"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 The time_now < self.unfiltered_data_start."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 The time_now > self.unfiltered_data_end."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If time_now is not tz aware UTC."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This module defines a trading strategy class which allows users to implement their own customized trading strategies"}),"\n",(0,t.jsx)(n.p,{children:"A user can inherit from Strategy and optionally override any of the \u201con\u201d named event methods. The class is not entirely initialized in a stand-alone way, the intended usage is to pass strategies to a Trader so that they can be fully \u201cwired\u201d into the platform. Exceptions will be raised if a Strategy attempts to operate without a managing Trader instance."}),"\n",(0,t.jsxs)(n.h3,{id:"class-strategy-1",children:[(0,t.jsx)(n.em,{children:"class"})," Strategy"]}),"\n",(0,t.jsxs)(n.p,{children:["Bases: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:(0,t.jsx)(n.code,{children:"Actor"})})]}),"\n",(0,t.jsx)(n.p,{children:"Strategy(config: StrategyConfig | None = None)"}),"\n",(0,t.jsx)(n.p,{children:"The base class for all trading strategies."}),"\n",(0,t.jsx)(n.p,{children:"This class allows traders to implement their own customized trading strategies. A trading strategy can configure its own order management system type, which determines how positions are handled by the ExecutionEngine."}),"\n",(0,t.jsxs)(n.p,{children:["Strategy OMS (Order Management System) types: : - ",(0,t.jsx)(n.code,{children:"UNSPECIFIED"}),": No specific type has been configured, will therefore default to the native OMS type for each venue."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"HEDGING"}),": A position ID will be assigned for each new position which is opened per instrument."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"NETTING"}),": There will only be a single position for the strategy per instrument. The position ID naming convention is ",(0,t.jsx)(n.code,{children:"{instrument_id}-{strategy_id}"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"config"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.trading.config.StrategyConfig",children:(0,t.jsx)(n.em,{children:"StrategyConfig"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The trading strategy configuration."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If config is not of type StrategyConfig."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-84",children:"WARNING"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"This class should not be used directly, but through a concrete subclass."}),"\n",(0,t.jsx)(n.li,{children:"Do not call components such as clock and logger in the __init__ prior to registration."}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"active_task_idsself--list-1",children:"active_task_ids(self) \u2192 list"}),"\n",(0,t.jsx)(n.p,{children:"Return the active task identifiers."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.executor.TaskId",children:"TaskId"}),"]"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"add_syntheticself-syntheticinstrument-synthetic--void-1",children:"add_synthetic(self, SyntheticInstrument synthetic) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Add the created synthetic instrument to the cache."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"synthetic"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.SyntheticInstrument",children:(0,t.jsx)(n.em,{children:"SyntheticInstrument"})}),") \u2013 The synthetic instrument to add to the cache."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"KeyError"})," \u2013 If synthetic is already in the cache."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"cache-1",children:"cache"}),"\n",(0,t.jsx)(n.p,{children:"The read-only cache for the actor."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," CacheFacade"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"cancel_all_ordersself-instrumentid-instrument_id-orderside-order_sideordersideno_order_side-clientid-client_idnone-dict-paramsnone--void-1",children:"cancel_all_orders(self, InstrumentId instrument_id, OrderSide order_side=OrderSide.NO_ORDER_SIDE, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Cancel all orders for this strategy for the given instrument ID."}),"\n",(0,t.jsxs)(n.p,{children:["A CancelAllOrders command will be created and then sent to ",(0,t.jsx)(n.strong,{children:"both"})," the OrderEmulator and the ExecutionEngine."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument for the orders to cancel."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"order_side"})," (OrderSide, default ",(0,t.jsx)(n.code,{children:"NO_ORDER_SIDE"})," (both sides)) \u2013 The side of the orders to cancel."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"cancel_all_tasksself--void-1",children:"cancel_all_tasks(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Cancel all queued and active tasks."}),"\n",(0,t.jsx)(n.h4,{id:"cancel_gtd_expiryself-order-order--void-1",children:"cancel_gtd_expiry(self, Order order) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Cancel the managed GTD expiry for the given order."}),"\n",(0,t.jsx)(n.p,{children:"If there is no current GTD expiry timer, then an error will be logged."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"order"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/orders#nautilus_trader.model.orders.Order",children:(0,t.jsx)(n.em,{children:"Order"})}),") \u2013 The order to cancel the GTD expiry for."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"cancel_orderself-order-order-clientid-client_idnone-dict-paramsnone--void-1",children:"cancel_order(self, Order order, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Cancel the given order with optional routing instructions."}),"\n",(0,t.jsxs)(n.p,{children:["A CancelOrder command will be created and then sent to ",(0,t.jsx)(n.strong,{children:"either"})," the OrderEmulator or the ExecutionEngine (depending on whether the order is emulated)."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"order"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/orders#nautilus_trader.model.orders.Order",children:(0,t.jsx)(n.em,{children:"Order"})}),") \u2013 The order to cancel."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"cancel_ordersself-list-orders-clientid-client_idnone-dict-paramsnone--void-1",children:"cancel_orders(self, list orders, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Batch cancel the given list of orders with optional routing instructions."}),"\n",(0,t.jsx)(n.p,{children:"For each order in the list, a CancelOrder command will be created and added to a BatchCancelOrders command. This command is then sent to the ExecutionEngine."}),"\n",(0,t.jsx)(n.p,{children:"Logs an error if the orders list contains local/emulated orders."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"orders"})," (",(0,t.jsx)(n.em,{children:"list"})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/orders#nautilus_trader.model.orders.Order",children:(0,t.jsx)(n.em,{children:"Order"})})," \u200b*]*\u200b) \u2013 The orders to cancel."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If orders is empty."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If orders contains a type other than Order."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"cancel_taskself-task_id-taskid--void-1",children:["cancel_task(self, task_id: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.executor.TaskId",children:"TaskId"}),") \u2192 void"]}),"\n",(0,t.jsx)(n.p,{children:"Cancel the task with the given task_id (if queued or active)."}),"\n",(0,t.jsx)(n.p,{children:"If the task is not found then a warning is logged."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"task_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.executor.TaskId",children:(0,t.jsx)(n.em,{children:"TaskId"})}),") \u2013 The task identifier."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"change_idself-strategyid-strategy_id--void-1",children:"change_id(self, StrategyId strategy_id) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Change the strategies identifier to the given strategy_id."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"strategy_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:(0,t.jsx)(n.em,{children:"StrategyId"})}),") \u2013 The new strategy ID to change to."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"change_order_id_tagself-str-order_id_tag--void-1",children:"change_order_id_tag(self, str order_id_tag) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Change the order identifier tag to the given order_id_tag."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"order_id_tag"})," (\u200b",(0,t.jsx)(n.em,{children:"str"}),"\u200b) \u2013 The new order ID tag to change to."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"clock-1",children:"clock"}),"\n",(0,t.jsx)(n.p,{children:"The actors clock."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," Clock"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"close_all_positionsself-instrumentid-instrument_id-positionside-position_sidepositionsideno_position_side-clientid-client_idnone-list-tagsnone-timeinforce-time_in_forcetimeinforcegtc-bool-reduce_onlytrue-dict-paramsnone--void-1",children:"close_all_positions(self, InstrumentId instrument_id, PositionSide position_side=PositionSide.NO_POSITION_SIDE, ClientId client_id=None, list tags=None, TimeInForce time_in_force=TimeInForce.GTC, bool reduce_only=True, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Close all positions for the given instrument ID for this strategy."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument for the positions to close."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"position_side"})," (PositionSide, default ",(0,t.jsx)(n.code,{children:"NO_POSITION_SIDE"})," (both sides)) \u2013 The side of the positions to close."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"tags"})," (",(0,t.jsx)(n.em,{children:"list"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 The tags for the market orders closing the positions."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"time_in_force"})," (TimeInForce, default ",(0,t.jsx)(n.code,{children:"GTC"}),") \u2013 The time in force for the market orders closing the positions."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"reduce_only"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If the market orders to close positions should carry the \u2018reduce-only\u2019 execution instruction. Optional, as not all venues support this feature."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"close_positionself-position-position-clientid-client_idnone-list-tagsnone-timeinforce-time_in_forcetimeinforcegtc-bool-reduce_onlytrue-dict-paramsnone--void-1",children:"close_position(self, Position position, ClientId client_id=None, list tags=None, TimeInForce time_in_force=TimeInForce.GTC, bool reduce_only=True, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Close the given position."}),"\n",(0,t.jsx)(n.p,{children:"A closing MarketOrder for the position will be created, and then sent to the ExecutionEngine via a SubmitOrder command."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"position"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Position",children:(0,t.jsx)(n.em,{children:"Position"})}),") \u2013 The position to close."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"tags"})," (",(0,t.jsx)(n.em,{children:"list"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 The tags for the market order closing the position."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"time_in_force"})," (TimeInForce, default ",(0,t.jsx)(n.code,{children:"GTC"}),") \u2013 The time in force for the market order closing the position."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"reduce_only"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If the market order to close the position should carry the \u2018reduce-only\u2019 execution instruction. Optional, as not all venues support this feature."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"config-1",children:"config"}),"\n",(0,t.jsx)(n.p,{children:"The actors configuration."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," NautilusConfig"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"degradeself--void-1",children:"degrade(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Degrade the component."}),"\n",(0,t.jsxs)(n.p,{children:["While executing on_degrade() any exception will be logged and reraised, then the component will remain in a ",(0,t.jsx)(n.code,{children:"DEGRADING"})," state."]}),"\n",(0,t.jsx)(n.h4,{id:"warning-85",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"Do not override."}),"\n",(0,t.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,t.jsx)(n.h4,{id:"deregister_warning_eventself-type-event--void-1",children:"deregister_warning_event(self, type event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Deregister the given event type from warning log levels."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (\u200b",(0,t.jsx)(n.em,{children:"type"}),"\u200b) \u2013 The event class to deregister."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"disposeself--void-1",children:"dispose(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Dispose of the component."}),"\n",(0,t.jsxs)(n.p,{children:["While executing on_dispose() any exception will be logged and reraised, then the component will remain in a ",(0,t.jsx)(n.code,{children:"DISPOSING"})," state."]}),"\n",(0,t.jsx)(n.h4,{id:"warning-86",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"Do not override."}),"\n",(0,t.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,t.jsx)(n.h4,{id:"external_order_claims-1",children:"external_order_claims"}),"\n",(0,t.jsx)(n.p,{children:"The external order claims instrument IDs for the strategy."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," list[InstrumentId]"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"faultself--void-1",children:"fault(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Fault the component."}),"\n",(0,t.jsx)(n.p,{children:"Calling this method multiple times has the same effect as calling it once (it is idempotent). Once called, it cannot be reversed, and no other methods should be called on this instance."}),"\n",(0,t.jsxs)(n.p,{children:["While executing on_fault() any exception will be logged and reraised, then the component will remain in a ",(0,t.jsx)(n.code,{children:"FAULTING"})," state."]}),"\n",(0,t.jsx)(n.h4,{id:"warning-87",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"Do not override."}),"\n",(0,t.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,t.jsxs)(n.h4,{id:"classmethod-fully_qualified_namecls--str-2",children:[(0,t.jsx)(n.em,{children:"classmethod"})," fully_qualified_name(cls) \u2192 str"]}),"\n",(0,t.jsx)(n.p,{children:"Return the fully qualified name for the components class."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," str"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"greeks-1",children:"greeks"}),"\n",(0,t.jsx)(n.p,{children:"The read-only greeks calculator for the actor."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," GreeksCalculator"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"handle_barself-bar-bar--void-1",children:"handle_bar(self, Bar bar) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given bar data."}),"\n",(0,t.jsxs)(n.p,{children:["If state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," then passes to on_bar."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"bar"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,t.jsx)(n.em,{children:"Bar"})}),") \u2013 The bar received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-88",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_barsself-list-bars--void-1",children:"handle_bars(self, list bars) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given historical bar data by handling each bar individually."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"bars"})," (",(0,t.jsx)(n.em,{children:"list"})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,t.jsx)(n.em,{children:"Bar"})})," \u200b*]*\u200b) \u2013 The bars to handle."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-89",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"RuntimeError"})," \u2013 If bar data has incorrectly sorted timestamps (not monotonically increasing)."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"handle_dataself-data-data--void-1",children:"handle_data(self, Data data) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given data."}),"\n",(0,t.jsxs)(n.p,{children:["If state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," then passes to on_data."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"data"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,t.jsx)(n.em,{children:"Data"})}),") \u2013 The data received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-90",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_eventself-event-event--void-2",children:"handle_event(self, Event event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given event."}),"\n",(0,t.jsxs)(n.p,{children:["If state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," then passes to on_event."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Event",children:(0,t.jsx)(n.em,{children:"Event"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-91",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_funding_rateself-fundingrateupdate-funding_rate--void-1",children:"handle_funding_rate(self, FundingRateUpdate funding_rate) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given funding rate update."}),"\n",(0,t.jsxs)(n.p,{children:["If state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," then passes to on_funding_rate."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"funding_rate"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.FundingRateUpdate",children:(0,t.jsx)(n.em,{children:"FundingRateUpdate"})}),") \u2013 The funding rate update received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-92",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_historical_dataself-data--void-1",children:"handle_historical_data(self, data) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given historical data."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"data"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,t.jsx)(n.em,{children:"Data"})}),") \u2013 The historical data received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-93",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_index_priceself-indexpriceupdate-index_price--void-1",children:"handle_index_price(self, IndexPriceUpdate index_price) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given index price update."}),"\n",(0,t.jsxs)(n.p,{children:["If state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," then passes to on_index_price."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"index_price"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.IndexPriceUpdate",children:(0,t.jsx)(n.em,{children:"IndexPriceUpdate"})}),") \u2013 The index price update received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-94",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_instrumentself-instrument-instrument--void-1",children:"handle_instrument(self, Instrument instrument) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given instrument."}),"\n",(0,t.jsxs)(n.p,{children:["Passes to on_instrument if state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"instrument"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.Instrument",children:(0,t.jsx)(n.em,{children:"Instrument"})}),") \u2013 The instrument received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-95",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_instrument_closeself-instrumentclose-update--void-1",children:"handle_instrument_close(self, InstrumentClose update) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given instrument close update."}),"\n",(0,t.jsxs)(n.p,{children:["If state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," then passes to on_instrument_close."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"update"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.InstrumentClose",children:(0,t.jsx)(n.em,{children:"InstrumentClose"})}),") \u2013 The update received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-96",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_instrument_statusself-instrumentstatus-data--void-1",children:"handle_instrument_status(self, InstrumentStatus data) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given instrument status update."}),"\n",(0,t.jsxs)(n.p,{children:["If state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," then passes to on_instrument_status."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"data"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.InstrumentStatus",children:(0,t.jsx)(n.em,{children:"InstrumentStatus"})}),") \u2013 The status update received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-97",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_instrumentsself-list-instruments--void-1",children:"handle_instruments(self, list instruments) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given instruments data by handling each instrument individually."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"instruments"})," (",(0,t.jsx)(n.em,{children:"list"})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.Instrument",children:(0,t.jsx)(n.em,{children:"Instrument"})})," \u200b*]*\u200b) \u2013 The instruments received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-98",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_mark_priceself-markpriceupdate-mark_price--void-1",children:"handle_mark_price(self, MarkPriceUpdate mark_price) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given mark price update."}),"\n",(0,t.jsxs)(n.p,{children:["If state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," then passes to on_mark_price."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"mark_price"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.MarkPriceUpdate",children:(0,t.jsx)(n.em,{children:"MarkPriceUpdate"})}),") \u2013 The mark price update received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-99",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_order_bookself-orderbook-order_book--void-1",children:"handle_order_book(self, OrderBook order_book) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given order book."}),"\n",(0,t.jsxs)(n.p,{children:["Passes to on_order_book if state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"order_book"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/book#nautilus_trader.model.book.OrderBook",children:(0,t.jsx)(n.em,{children:"OrderBook"})}),") \u2013 The order book received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-100",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_order_book_deltasself-deltas--void-1",children:"handle_order_book_deltas(self, deltas) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given order book deltas."}),"\n",(0,t.jsxs)(n.p,{children:["Passes to on_order_book_deltas if state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),". The deltas will be nautilus_pyo3.OrderBookDeltas if the pyo3_conversion flag was set for the subscription."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"deltas"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.OrderBookDeltas",children:(0,t.jsx)(n.em,{children:"OrderBookDeltas"})})," ",(0,t.jsx)(n.em,{children:"or"})," \u200b",(0,t.jsx)(n.em,{children:"nautilus_pyo3.OrderBookDeltas"}),"\u200b) \u2013 The order book deltas received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-101",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_order_book_depthself-orderbookdepth10-depth--void-1",children:"handle_order_book_depth(self, OrderBookDepth10 depth) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given order book depth"}),"\n",(0,t.jsxs)(n.p,{children:["Passes to on_order_book_depth if state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"depth"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.OrderBookDepth10",children:(0,t.jsx)(n.em,{children:"OrderBookDepth10"})}),") \u2013 The order book depth received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-102",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_quote_tickself-quotetick-tick--void-1",children:"handle_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given quote tick."}),"\n",(0,t.jsxs)(n.p,{children:["If state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," then passes to on_quote_tick."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"tick"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,t.jsx)(n.em,{children:"QuoteTick"})}),") \u2013 The tick received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-103",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_quote_ticksself-list-ticks--void-1",children:"handle_quote_ticks(self, list ticks) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given historical quote tick data by handling each tick individually."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"ticks"})," (",(0,t.jsx)(n.em,{children:"list"})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,t.jsx)(n.em,{children:"QuoteTick"})})," \u200b*]*\u200b) \u2013 The ticks received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-104",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_signalself-data-signal--void-1",children:"handle_signal(self, Data signal) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given signal."}),"\n",(0,t.jsxs)(n.p,{children:["If state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," then passes to on_signal."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"signal"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,t.jsx)(n.em,{children:"Data"})}),") \u2013 The signal received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-105",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_trade_tickself-tradetick-tick--void-1",children:"handle_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given trade tick."}),"\n",(0,t.jsxs)(n.p,{children:["If state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," then passes to on_trade_tick."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"tick"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,t.jsx)(n.em,{children:"TradeTick"})}),") \u2013 The tick received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-106",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"handle_trade_ticksself-list-ticks--void-1",children:"handle_trade_ticks(self, list ticks) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Handle the given historical trade tick data by handling each tick individually."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"ticks"})," (",(0,t.jsx)(n.em,{children:"list"})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,t.jsx)(n.em,{children:"TradeTick"})})," \u200b*]*\u200b) \u2013 The ticks received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-107",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"has_active_tasksself--bool-1",children:"has_active_tasks(self) \u2192 bool"}),"\n",(0,t.jsx)(n.p,{children:"Return a value indicating whether there are any active tasks."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"has_any_tasksself--bool-1",children:"has_any_tasks(self) \u2192 bool"}),"\n",(0,t.jsx)(n.p,{children:"Return a value indicating whether there are any queued OR active tasks."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"has_pending_requestsself--bool-1",children:"has_pending_requests(self) \u2192 bool"}),"\n",(0,t.jsx)(n.p,{children:"Return whether the actor is pending processing for any requests."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," True if any requests are pending, else False."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"has_queued_tasksself--bool-1",children:"has_queued_tasks(self) \u2192 bool"}),"\n",(0,t.jsx)(n.p,{children:"Return a value indicating whether there are any queued tasks."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"id-1",children:"id"}),"\n",(0,t.jsx)(n.p,{children:"The components ID."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," ComponentId"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"indicators_initializedself--bool-1",children:"indicators_initialized(self) \u2192 bool"}),"\n",(0,t.jsx)(n.p,{children:"Return a value indicating whether all indicators are initialized."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," True if all initialized, else False"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"is_degraded-1",children:"is_degraded"}),"\n",(0,t.jsx)(n.p,{children:"bool"}),"\n",(0,t.jsxs)(n.p,{children:["Return whether the current component state is ",(0,t.jsx)(n.code,{children:"DEGRADED"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," Component.is_degraded"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"is_disposed-1",children:"is_disposed"}),"\n",(0,t.jsx)(n.p,{children:"bool"}),"\n",(0,t.jsxs)(n.p,{children:["Return whether the current component state is ",(0,t.jsx)(n.code,{children:"DISPOSED"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," Component.is_disposed"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"is_faulted-1",children:"is_faulted"}),"\n",(0,t.jsx)(n.p,{children:"bool"}),"\n",(0,t.jsxs)(n.p,{children:["Return whether the current component state is ",(0,t.jsx)(n.code,{children:"FAULTED"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," Component.is_faulted"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"is_initialized-1",children:"is_initialized"}),"\n",(0,t.jsx)(n.p,{children:"bool"}),"\n",(0,t.jsxs)(n.p,{children:["Return whether the component has been initialized (component.state >= ",(0,t.jsx)(n.code,{children:"INITIALIZED"}),")."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," Component.is_initialized"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"is_pending_requestself-uuid4-request_id--bool-1",children:"is_pending_request(self, UUID4 request_id) \u2192 bool"}),"\n",(0,t.jsx)(n.p,{children:"Return whether the request for the given identifier is pending processing."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"request_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,t.jsx)(n.em,{children:"UUID4"})}),") \u2013 The request ID to check."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," True if request is pending, else False."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"is_running-1",children:"is_running"}),"\n",(0,t.jsx)(n.p,{children:"bool"}),"\n",(0,t.jsxs)(n.p,{children:["Return whether the current component state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," Component.is_running"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"is_stopped-1",children:"is_stopped"}),"\n",(0,t.jsx)(n.p,{children:"bool"}),"\n",(0,t.jsxs)(n.p,{children:["Return whether the current component state is ",(0,t.jsx)(n.code,{children:"STOPPED"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," Component.is_stopped"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"loadself-dict-state--void-1",children:"load(self, dict state) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Load the actor/strategy state from the give state dictionary."}),"\n",(0,t.jsx)(n.p,{children:"Calls on_load and passes the state."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"state"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"bytes"})," \u200b*]*\u200b) \u2013 The strategy state to load."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-108",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"Exceptions raised will be caught, logged, and reraised."}),"\n",(0,t.jsx)(n.h4,{id:"log-1",children:"log"}),"\n",(0,t.jsx)(n.p,{children:"The actors logger."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," Logger"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"manage_contingent_orders-1",children:"manage_contingent_orders"}),"\n",(0,t.jsx)(n.p,{children:"If contingent orders should be managed automatically by the strategy."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"manage_gtd_expiry-1",children:"manage_gtd_expiry"}),"\n",(0,t.jsx)(n.p,{children:"If all order GTD time in force expirations should be managed automatically by the strategy."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"modify_orderself-order-order-quantity-quantitynone-price-pricenone-price-trigger_pricenone-clientid-client_idnone-dict-paramsnone--void-1",children:"modify_order(self, Order order, Quantity quantity=None, Price price=None, Price trigger_price=None, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Modify the given order with optional parameters and routing instructions."}),"\n",(0,t.jsxs)(n.p,{children:["An ModifyOrder command will be created and then sent to ",(0,t.jsx)(n.strong,{children:"either"})," the OrderEmulator or the RiskEngine (depending on whether the order is emulated)."]}),"\n",(0,t.jsx)(n.p,{children:"At least one value must differ from the original order for the command to be valid."}),"\n",(0,t.jsx)(n.p,{children:"Will use an Order Cancel/Replace Request (a.k.a Order Modification) for FIX protocols, otherwise if order update is not available for the API, then will cancel and replace with a new order using the original ClientOrderId."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"order"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/orders#nautilus_trader.model.orders.Order",children:(0,t.jsx)(n.em,{children:"Order"})}),") \u2013 The order to update."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"quantity"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Quantity",children:(0,t.jsx)(n.em,{children:"Quantity"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The updated quantity for the given order."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"price"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Price",children:(0,t.jsx)(n.em,{children:"Price"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The updated price for the given order (if applicable)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"trigger_price"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/#nautilus_trader.model.Price",children:(0,t.jsx)(n.em,{children:"Price"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The updated trigger price for the given order (if applicable)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If price is not ",(0,t.jsx)(n.code,{children:"None"})," and order does not have a price."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If trigger is not ",(0,t.jsx)(n.code,{children:"None"})," and order does not have a trigger_price."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-109",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"If the order is already closed or at PENDING_CANCEL status then the command will not be generated, and a warning will be logged."}),"\n",(0,t.jsx)(n.h4,{id:"msgbus-1",children:"msgbus"}),"\n",(0,t.jsx)(n.p,{children:"The message bus for the actor (if registered)."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," MessageBus or ",(0,t.jsx)(n.code,{children:"None"})]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"oms_type-1",children:"oms_type"}),"\n",(0,t.jsx)(n.p,{children:"The order management system for the strategy."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," OmsType"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"on_barself-bar-bar--void-1",children:"on_bar(self, Bar bar) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives a bar."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"bar"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.Bar",children:(0,t.jsx)(n.em,{children:"Bar"})}),") \u2013 The bar received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-110",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_dataself-data--void-1",children:"on_data(self, data) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives data."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"data"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,t.jsx)(n.em,{children:"Data"})}),") \u2013 The data received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-111",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_degradeself--void-1",children:"on_degrade(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed on degrade."}),"\n",(0,t.jsx)(n.h4,{id:"warning-112",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.p,{children:"Should be overridden in the actor implementation."}),"\n",(0,t.jsx)(n.h4,{id:"on_disposeself--void-1",children:"on_dispose(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed on dispose."}),"\n",(0,t.jsx)(n.p,{children:"Cleanup/release any resources used here."}),"\n",(0,t.jsx)(n.h4,{id:"warning-113",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_eventself-event-event--void-1",children:"on_event(self, Event event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed running and receives an event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Event",children:(0,t.jsx)(n.em,{children:"Event"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-114",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_faultself--void-1",children:"on_fault(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed on fault."}),"\n",(0,t.jsx)(n.p,{children:"Cleanup any resources used by the actor here."}),"\n",(0,t.jsx)(n.h4,{id:"warning-115",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.p,{children:"Should be overridden in the actor implementation."}),"\n",(0,t.jsx)(n.h4,{id:"on_funding_rateself-fundingrateupdate-funding_rate--void-1",children:"on_funding_rate(self, FundingRateUpdate funding_rate) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives a funding rate update."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"funding_rate"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.FundingRateUpdate",children:(0,t.jsx)(n.em,{children:"FundingRateUpdate"})}),") \u2013 The funding rate update received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-116",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_historical_dataself-data--void-1",children:"on_historical_data(self, data) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives historical data."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"data"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,t.jsx)(n.em,{children:"Data"})}),") \u2013 The historical data received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-117",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_index_priceself-indexpriceupdate-index_price--void-1",children:"on_index_price(self, IndexPriceUpdate index_price) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an index price update."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"index_price"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.IndexPriceUpdate",children:(0,t.jsx)(n.em,{children:"IndexPriceUpdate"})}),") \u2013 The index price update received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-118",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_instrumentself-instrument-instrument--void-1",children:"on_instrument(self, Instrument instrument) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an instrument."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"instrument"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.Instrument",children:(0,t.jsx)(n.em,{children:"Instrument"})}),") \u2013 The instrument received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-119",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_instrument_closeself-instrumentclose-update--void-1",children:"on_instrument_close(self, InstrumentClose update) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an instrument close update."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"update"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.InstrumentClose",children:(0,t.jsx)(n.em,{children:"InstrumentClose"})}),") \u2013 The instrument close received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-120",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_instrument_statusself-instrumentstatus-data--void-1",children:"on_instrument_status(self, InstrumentStatus data) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an instrument status update."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"data"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.InstrumentStatus",children:(0,t.jsx)(n.em,{children:"InstrumentStatus"})}),") \u2013 The instrument status update received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-121",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_loadself-dict-state--void-1",children:"on_load(self, dict state) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when the actor state is loaded."}),"\n",(0,t.jsx)(n.p,{children:"Saved state values will be contained in the give state dictionary."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"state"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"bytes"})," \u200b*]*\u200b) \u2013 The strategy state to load."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-122",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_mark_priceself-markpriceupdate-mark_price--void-1",children:"on_mark_price(self, MarkPriceUpdate mark_price) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives a mark price update."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"mark_price"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.MarkPriceUpdate",children:(0,t.jsx)(n.em,{children:"MarkPriceUpdate"})}),") \u2013 The mark price update received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-123",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_acceptedself-orderaccepted-event--void-1",children:"on_order_accepted(self, OrderAccepted event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order accepted event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderAccepted",children:(0,t.jsx)(n.em,{children:"OrderAccepted"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-124",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_bookself-orderbook-order_book--void-1",children:"on_order_book(self, OrderBook order_book) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order book."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"order_book"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/book#nautilus_trader.model.book.OrderBook",children:(0,t.jsx)(n.em,{children:"OrderBook"})}),") \u2013 The order book received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-125",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_book_deltasself-deltas--void-1",children:"on_order_book_deltas(self, deltas) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives order book deltas."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"deltas"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.OrderBookDeltas",children:(0,t.jsx)(n.em,{children:"OrderBookDeltas"})})," ",(0,t.jsx)(n.em,{children:"or"})," \u200b",(0,t.jsx)(n.em,{children:"nautilus_pyo3.OrderBookDeltas"}),"\u200b) \u2013 The order book deltas received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-126",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_book_depthself-depth--void-1",children:"on_order_book_depth(self, depth) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order book depth."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"depth"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.OrderBookDepth10",children:(0,t.jsx)(n.em,{children:"OrderBookDepth10"})}),") \u2013 The order book depth received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-127",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_cancel_rejectedself-ordercancelrejected-event--void-1",children:"on_order_cancel_rejected(self, OrderCancelRejected event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order cancel rejected event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderCancelRejected",children:(0,t.jsx)(n.em,{children:"OrderCancelRejected"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-128",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_canceledself-ordercanceled-event--void-1",children:"on_order_canceled(self, OrderCanceled event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order canceled event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderCanceled",children:(0,t.jsx)(n.em,{children:"OrderCanceled"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-129",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_deniedself-orderdenied-event--void-1",children:"on_order_denied(self, OrderDenied event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order denied event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderDenied",children:(0,t.jsx)(n.em,{children:"OrderDenied"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-130",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_emulatedself-orderemulated-event--void-1",children:"on_order_emulated(self, OrderEmulated event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order emulated event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderEmulated",children:(0,t.jsx)(n.em,{children:"OrderEmulated"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-131",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_eventself-orderevent-event--void-1",children:"on_order_event(self, OrderEvent event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderEvent",children:(0,t.jsx)(n.em,{children:"OrderEvent"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-132",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_expiredself-orderexpired-event--void-1",children:"on_order_expired(self, OrderExpired event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order expired event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderExpired",children:(0,t.jsx)(n.em,{children:"OrderExpired"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-133",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_filledself-orderfilled-event--void-1",children:"on_order_filled(self, OrderFilled event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order filled event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderFilled",children:(0,t.jsx)(n.em,{children:"OrderFilled"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-134",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_initializedself-orderinitialized-event--void-1",children:"on_order_initialized(self, OrderInitialized event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order initialized event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderInitialized",children:(0,t.jsx)(n.em,{children:"OrderInitialized"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-135",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_modify_rejectedself-ordermodifyrejected-event--void-1",children:"on_order_modify_rejected(self, OrderModifyRejected event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order modify rejected event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderModifyRejected",children:(0,t.jsx)(n.em,{children:"OrderModifyRejected"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-136",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_pending_cancelself-orderpendingcancel-event--void-1",children:"on_order_pending_cancel(self, OrderPendingCancel event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order pending cancel event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderPendingCancel",children:(0,t.jsx)(n.em,{children:"OrderPendingCancel"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-137",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_pending_updateself-orderpendingupdate-event--void-1",children:"on_order_pending_update(self, OrderPendingUpdate event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order pending update event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderPendingUpdate",children:(0,t.jsx)(n.em,{children:"OrderPendingUpdate"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-138",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_rejectedself-orderrejected-event--void-1",children:"on_order_rejected(self, OrderRejected event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order rejected event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderRejected",children:(0,t.jsx)(n.em,{children:"OrderRejected"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-139",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_releasedself-orderreleased-event--void-1",children:"on_order_released(self, OrderReleased event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order released event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderReleased",children:(0,t.jsx)(n.em,{children:"OrderReleased"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-140",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_submittedself-ordersubmitted-event--void-1",children:"on_order_submitted(self, OrderSubmitted event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order submitted event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderSubmitted",children:(0,t.jsx)(n.em,{children:"OrderSubmitted"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-141",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_triggeredself-ordertriggered-event--void-1",children:"on_order_triggered(self, OrderTriggered event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order triggered event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderTriggered",children:(0,t.jsx)(n.em,{children:"OrderTriggered"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-142",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_order_updatedself-orderupdated-event--void-1",children:"on_order_updated(self, OrderUpdated event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives an order updated event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.OrderUpdated",children:(0,t.jsx)(n.em,{children:"OrderUpdated"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-143",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_position_changedself-positionchanged-event--void-1",children:"on_position_changed(self, PositionChanged event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives a position changed event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.PositionChanged",children:(0,t.jsx)(n.em,{children:"PositionChanged"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-144",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_position_closedself-positionclosed-event--void-1",children:"on_position_closed(self, PositionClosed event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives a position closed event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.PositionClosed",children:(0,t.jsx)(n.em,{children:"PositionClosed"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-145",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_position_eventself-positionevent-event--void-1",children:"on_position_event(self, PositionEvent event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives a position event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.PositionEvent",children:(0,t.jsx)(n.em,{children:"PositionEvent"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-146",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_position_openedself-positionopened-event--void-1",children:"on_position_opened(self, PositionOpened event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives a position opened event."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/events#nautilus_trader.model.events.PositionOpened",children:(0,t.jsx)(n.em,{children:"PositionOpened"})}),") \u2013 The event received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-147",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_quote_tickself-quotetick-tick--void-1",children:"on_quote_tick(self, QuoteTick tick) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives a quote tick."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"tick"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.QuoteTick",children:(0,t.jsx)(n.em,{children:"QuoteTick"})}),") \u2013 The tick received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-148",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_resetself--void-2",children:"on_reset(self) \u2192 void"}),"\n",(0,t.jsx)(n.h4,{id:"on_resumeself--void-2",children:"on_resume(self) \u2192 void"}),"\n",(0,t.jsx)(n.h4,{id:"on_saveself--dict-1",children:"on_save(self) \u2192 dict"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when the actor state is saved."}),"\n",(0,t.jsx)(n.p,{children:"Create and return a state dictionary of values to be saved."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," The strategy state to save."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," dict[str, bytes]"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-149",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_signalself-signal--void-1",children:"on_signal(self, signal) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives signal data."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"signal"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,t.jsx)(n.em,{children:"Data"})}),") \u2013 The signal received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-150",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"on_startself--void-2",children:"on_start(self) \u2192 void"}),"\n",(0,t.jsx)(n.h4,{id:"on_stopself--void-2",children:"on_stop(self) \u2192 void"}),"\n",(0,t.jsx)(n.h4,{id:"on_trade_tickself-tradetick-tick--void-1",children:"on_trade_tick(self, TradeTick tick) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Actions to be performed when running and receives a trade tick."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"tick"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.TradeTick",children:(0,t.jsx)(n.em,{children:"TradeTick"})}),") \u2013 The tick received."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-151",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"order_factory-1",children:"order_factory"}),"\n",(0,t.jsx)(n.p,{children:"The order factory for the strategy."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," OrderFactory"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"order_id_tag-1",children:"order_id_tag"}),"\n",(0,t.jsx)(n.p,{children:"The order ID tag for the strategy."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," str"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"pending_requestsself--set-1",children:"pending_requests(self) \u2192 set"}),"\n",(0,t.jsx)(n.p,{children:"Return the request IDs which are currently pending processing."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," set[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"}),"]"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"portfolio-1",children:"portfolio"}),"\n",(0,t.jsx)(n.p,{children:"The read-only portfolio for the actor."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," PortfolioFacade"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"publish_dataself-datatype-data_type-data-data--void-1",children:"publish_data(self, DataType data_type, Data data) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Publish the given data to the message bus."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"data_type"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.DataType",children:(0,t.jsx)(n.em,{children:"DataType"})}),") \u2013 The data type being published."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"data"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.Data",children:(0,t.jsx)(n.em,{children:"Data"})}),") \u2013 The data to publish."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"publish_signalself-str-name-value-uint64_t-ts_event0--void-1",children:"publish_signal(self, str name, value, uint64_t ts_event=0) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Publish the given value as a signal to the message bus."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"name"})," (\u200b",(0,t.jsx)(n.em,{children:"str"}),"\u200b) \u2013 The name of the signal being published. The signal name will be converted to title case, with each word capitalized (e.g., \u2018example\u2019 becomes \u2018SignalExample\u2019)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"value"})," (\u200b",(0,t.jsx)(n.em,{children:"object"}),"\u200b) \u2013 The signal data to publish."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ts_event"})," (",(0,t.jsx)(n.em,{children:"uint64_t"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 UNIX timestamp (nanoseconds) when the signal event occurred. If ",(0,t.jsx)(n.code,{children:"None"})," then will timestamp current time."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"query_accountself-accountid-account_id-clientid-client_idnone-dict-paramsnone--void-1",children:"query_account(self, AccountId account_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Query the account with optional routing instructions."}),"\n",(0,t.jsx)(n.p,{children:"A QueryAccount command will be created and then sent to the ExecutionEngine."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"account_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.AccountId",children:(0,t.jsx)(n.em,{children:"AccountId"})}),") \u2013 The account to query."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"query_orderself-order-order-clientid-client_idnone-dict-paramsnone--void-1",children:"query_order(self, Order order, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Query the given order with optional routing instructions."}),"\n",(0,t.jsx)(n.p,{children:"A QueryOrder command will be created and then sent to the ExecutionEngine."}),"\n",(0,t.jsx)(n.p,{children:"Logs an error if no VenueOrderId has been assigned to the order."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"order"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/orders#nautilus_trader.model.orders.Order",children:(0,t.jsx)(n.em,{children:"Order"})}),") \u2013 The order to query."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"queue_for_executorself-func-callable-any-tuple-argsnone-dict-kwargsnone-1",children:"queue_for_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)"}),"\n",(0,t.jsx)(n.p,{children:"Queues the callable func to be executed as fn(*args, **kwargs) sequentially."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"func"})," (\u200b",(0,t.jsx)(n.em,{children:"Callable"}),"\u200b) \u2013 The function to be executed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"args"})," (\u200b",(0,t.jsx)(n.em,{children:"positional arguments"}),"\u200b) \u2013 The positional arguments for the call to func."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"kwargs"})," (\u200b",(0,t.jsx)(n.em,{children:"arbitrary keyword arguments"}),"\u200b) \u2013 The keyword arguments for the call to func."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If func is not of type Callable."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"queued_task_idsself--list-1",children:"queued_task_ids(self) \u2192 list"}),"\n",(0,t.jsx)(n.p,{children:"Return the queued task identifiers."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.executor.TaskId",children:"TaskId"}),"]"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"registerself-traderid-trader_id-portfoliofacade-portfolio-messagebus-msgbus-cachefacade-cache-clock-clock--void-1",children:"register(self, TraderId trader_id, PortfolioFacade portfolio, MessageBus msgbus, CacheFacade cache, Clock clock) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Register the strategy with a trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"trader_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.TraderId",children:(0,t.jsx)(n.em,{children:"TraderId"})}),") \u2013 The trader ID for the strategy."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"portfolio"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/portfolio#nautilus_trader.portfolio.PortfolioFacade",children:(0,t.jsx)(n.em,{children:"PortfolioFacade"})}),") \u2013 The read-only portfolio for the strategy."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"msgbus"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.MessageBus",children:(0,t.jsx)(n.em,{children:"MessageBus"})}),") \u2013 The message bus for the strategy."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"cache"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/cache#nautilus_trader.cache.base.CacheFacade",children:(0,t.jsx)(n.em,{children:"CacheFacade"})}),") \u2013 The read-only cache for the strategy."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"clock"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.Clock",children:(0,t.jsx)(n.em,{children:"Clock"})}),") \u2013 The clock for the strategy."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-152",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"register_baseself-portfoliofacade-portfolio-messagebus-msgbus-cachefacade-cache-clock-clock--void-2",children:"register_base(self, PortfolioFacade portfolio, MessageBus msgbus, CacheFacade cache, Clock clock) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Register with a trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"portfolio"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/portfolio#nautilus_trader.portfolio.PortfolioFacade",children:(0,t.jsx)(n.em,{children:"PortfolioFacade"})}),") \u2013 The read-only portfolio for the actor."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"msgbus"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.MessageBus",children:(0,t.jsx)(n.em,{children:"MessageBus"})}),") \u2013 The message bus for the actor."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"cache"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/cache#nautilus_trader.cache.base.CacheFacade",children:(0,t.jsx)(n.em,{children:"CacheFacade"})}),") \u2013 The read-only cache for the actor."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"clock"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.Clock",children:(0,t.jsx)(n.em,{children:"Clock"})}),") \u2013 The clock for the actor."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-153",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"System method (not intended to be called by user code)."}),"\n",(0,t.jsx)(n.h4,{id:"register_executorself-loop-asyncioabstracteventloop-executor-executor--void-1",children:"register_executor(self, loop: asyncio.AbstractEventLoop, executor: Executor) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Register the given Executor for the actor."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"loop"})," (\u200b",(0,t.jsx)(n.em,{children:"asyncio.AbstractEventLoop"}),"\u200b) \u2013 The event loop of the application."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"executor"})," (\u200b",(0,t.jsx)(n.em,{children:"concurrent.futures.Executor"}),"\u200b) \u2013 The executor to register."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If executor is not of type concurrent.futures.Executor"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"register_indicator_for_barsself-bartype-bar_type-indicator-indicator--void-1",children:"register_indicator_for_bars(self, BarType bar_type, Indicator indicator) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Register the given indicator with the actor/strategy to receive bar data for the given bar type."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"bar_type"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.BarType",children:(0,t.jsx)(n.em,{children:"BarType"})}),") \u2013 The bar type for bar updates."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"indicator"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,t.jsx)(n.em,{children:"Indicator"})}),") \u2013 The indicator to register."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"register_indicator_for_quote_ticksself-instrumentid-instrument_id-indicator-indicator--void-1",children:"register_indicator_for_quote_ticks(self, InstrumentId instrument_id, Indicator indicator) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Register the given indicator with the actor/strategy to receive quote tick data for the given instrument ID."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID for tick updates."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"indicator"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:(0,t.jsx)(n.em,{children:"Indicator"})}),") \u2013 The indicator to register."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"register_indicator_for_trade_ticksself-instrumentid-instrument_id-indicator-indicator--void-1",children:"register_indicator_for_trade_ticks(self, InstrumentId instrument_id, Indicator indicator) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Register the given indicator with the actor/strategy to receive trade tick data for the given instrument ID."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID for tick updates."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"indicator"})," (\u200b",(0,t.jsx)(n.em,{children:"indicator"}),"\u200b) \u2013 The indicator to register."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"register_warning_eventself-type-event--void-1",children:"register_warning_event(self, type event) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Register the given event type for warning log levels."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"event"})," (\u200b",(0,t.jsx)(n.em,{children:"type"}),"\u200b) \u2013 The event class to register."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"registered_indicators-1",children:"registered_indicators"}),"\n",(0,t.jsx)(n.p,{children:"Return the registered indicators for the strategy."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/indicators#nautilus_trader.indicators.Indicator",children:"Indicator"}),"]"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"request_aggregated_barsself-list-bar_types-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-bool-include_external_datafalse-bool-update_subscriptionsfalse-update_catalog-bool--false-dict-paramsnone--uuid4-1",children:["request_aggregated_bars(self, list bar_types, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, bool include_external_data=False, bool update_subscriptions=False, update_catalog: bool = False, dict params=None) \u2192 ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsx)(n.p,{children:"Request historical aggregated Bar data for multiple bar types. The first bar is used to determine which market data type will be queried. This can either be quotes, trades or bars. If bars are queried, the first bar type needs to have a composite bar that is external (i.e. not internal/aggregated). This external bar type will be queried."}),"\n",(0,t.jsxs)(n.p,{children:["If end is ",(0,t.jsx)(n.code,{children:"None"})," then will request up to the most recent data."]}),"\n",(0,t.jsx)(n.p,{children:"Once the response is received, the bar data is forwarded from the message bus to the on_historical_data handler. Any tick data used for aggregation is also forwarded to the on_historical_data handler."}),"\n",(0,t.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"bar_types"})," (",(0,t.jsx)(n.em,{children:"list"})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.BarType",children:(0,t.jsx)(n.em,{children:"BarType"})})," \u200b*]*\u200b) \u2013 The list of bar types for the request. Composite bars can also be used and need to figure in the list after a BarType on which it depends."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"start"})," (\u200b",(0,t.jsx)(n.em,{children:"datetime"}),"\u200b) \u2013 The start datetime (UTC) of request time range. Should be left-inclusive (start <= value), but inclusiveness is not currently guaranteed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"end"})," (",(0,t.jsx)(n.em,{children:"datetime"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) of request time range. If None then will be replaced with the current UTC time. Should be right-inclusive (value <= end), but inclusiveness is not currently guaranteed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"limit"})," (",(0,t.jsx)(n.em,{children:"int"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The limit on the amount of data received (quote ticks, trade ticks or bars)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"callback"})," (",(0,t.jsx)(n.em,{children:"Callable"})," ",(0,t.jsx)(n.em,{children:"["})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,t.jsx)(n.em,{children:"UUID4"})})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"None"})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"include_external_data"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If True, includes the queried external data in the response."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"update_subscriptions"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If True, updates the aggregators of any existing or future subscription with the queried external data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"update_catalog"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If start is None."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > current timestamp (now)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If end is > current timestamp (now)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > end."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If bar_types is empty."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If bar_types is empty or contains elements not of type BarType."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"request_barsself-bartype-bar_type-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1",children:["request_bars(self, BarType bar_type, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsx)(n.p,{children:"Request historical Bar data."}),"\n",(0,t.jsxs)(n.p,{children:["If end is ",(0,t.jsx)(n.code,{children:"None"})," then will request up to the most recent data."]}),"\n",(0,t.jsx)(n.p,{children:"Once the response is received, the bar data is forwarded from the message bus to the on_historical_data handler."}),"\n",(0,t.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"bar_type"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.BarType",children:(0,t.jsx)(n.em,{children:"BarType"})}),") \u2013 The bar type for the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"start"})," (\u200b",(0,t.jsx)(n.em,{children:"datetime"}),"\u200b) \u2013 The start datetime (UTC) of request time range. Should be left-inclusive (start <= value), but inclusiveness is not currently guaranteed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"end"})," (",(0,t.jsx)(n.em,{children:"datetime"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) of request time range. If None then will be replaced with the current UTC time. Should be right-inclusive (value <= end), but inclusiveness is not currently guaranteed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"limit"})," (",(0,t.jsx)(n.em,{children:"int"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The limit on the amount of bars received."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"callback"})," (",(0,t.jsx)(n.em,{children:"Callable"})," ",(0,t.jsx)(n.em,{children:"["})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,t.jsx)(n.em,{children:"UUID4"})})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"None"})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"update_catalog"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If start is None."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > current timestamp (now)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If end is > current timestamp (now)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > end."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"request_dataself-datatype-data_type-clientid-client_id-instrumentid-instrument_idnone-datetime-startnone-datetime-endnone-int-limit0-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1",children:["request_data(self, DataType data_type, ClientId client_id, InstrumentId instrument_id=None, datetime start=None, datetime end=None, int limit=0, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsx)(n.p,{children:"Request custom data for the given data type from the given data client."}),"\n",(0,t.jsx)(n.p,{children:"Once the response is received, the data is forwarded from the message bus to the on_historical_data handler."}),"\n",(0,t.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"data_type"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.DataType",children:(0,t.jsx)(n.em,{children:"DataType"})}),") \u2013 The data type for the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})}),") \u2013 The data client ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"start"})," (\u200b",(0,t.jsx)(n.em,{children:"datetime"}),"\u200b) \u2013 The start datetime (UTC) of request time range. Cannot be None. Should be left-inclusive (start <= value), but inclusiveness is not currently guaranteed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"end"})," (",(0,t.jsx)(n.em,{children:"datetime"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) of request time range. If None then will be replaced with the current UTC time. Should be right-inclusive (value <= end), but inclusiveness is not currently guaranteed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"limit"})," (",(0,t.jsx)(n.em,{children:"int"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The limit on the amount of data points received."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"callback"})," (",(0,t.jsx)(n.em,{children:"Callable"})," ",(0,t.jsx)(n.em,{children:"["})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,t.jsx)(n.em,{children:"UUID4"})})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"None"})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"update_catalog"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If start is None."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > current timestamp (now)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If end is > current timestamp (now)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > end."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"request_instrumentself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1",children:["request_instrument(self, InstrumentId instrument_id, datetime start=None, datetime end=None, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsx)(n.p,{children:"Request Instrument data for the given instrument ID."}),"\n",(0,t.jsxs)(n.p,{children:["If end is ",(0,t.jsx)(n.code,{children:"None"})," then will request up to the most recent data."]}),"\n",(0,t.jsx)(n.p,{children:"Once the response is received, the instrument data is forwarded from the message bus to the on_instrument handler."}),"\n",(0,t.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID for the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"start"})," (",(0,t.jsx)(n.em,{children:"datetime"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The start datetime (UTC) of request time range. The inclusiveness depends on individual data client implementation."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"end"})," (",(0,t.jsx)(n.em,{children:"datetime"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) of request time range. The inclusiveness depends on individual data client implementation."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"callback"})," (",(0,t.jsx)(n.em,{children:"Callable"})," ",(0,t.jsx)(n.em,{children:"["})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,t.jsx)(n.em,{children:"UUID4"})})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"None"})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"update_catalog"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is not None and > current timestamp (now)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If end is not None and > current timestamp (now)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If start and end are not None and start is >= end."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"request_instrumentsself-venue-venue-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1",children:["request_instruments(self, Venue venue, datetime start=None, datetime end=None, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsx)(n.p,{children:"Request all Instrument data for the given venue."}),"\n",(0,t.jsxs)(n.p,{children:["If end is ",(0,t.jsx)(n.code,{children:"None"})," then will request up to the most recent data."]}),"\n",(0,t.jsx)(n.p,{children:"Once the response is received, the instrument data is forwarded from the message bus to the on_instrument handler."}),"\n",(0,t.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"venue"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.Venue",children:(0,t.jsx)(n.em,{children:"Venue"})}),") \u2013 The venue for the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"start"})," (",(0,t.jsx)(n.em,{children:"datetime"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The start datetime (UTC) of request time range. The inclusiveness depends on individual data client implementation."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"end"})," (",(0,t.jsx)(n.em,{children:"datetime"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) of request time range. The inclusiveness depends on individual data client implementation."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"callback"})," (",(0,t.jsx)(n.em,{children:"Callable"})," ",(0,t.jsx)(n.em,{children:"["})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,t.jsx)(n.em,{children:"UUID4"})})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"None"})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"update_catalog"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"only_last (default True) retains only the latest instrument record per instrument_id, based on the most recent ts_init."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is not None and > current timestamp (now)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If end is not None and > current timestamp (now)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If start and end are not None and start is >= end."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"request_order_book_snapshotself-instrumentid-instrument_id-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-dict-paramsnone--uuid4-1",children:["request_order_book_snapshot(self, InstrumentId instrument_id, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, dict params=None) \u2192 ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsx)(n.p,{children:"Request an order book snapshot."}),"\n",(0,t.jsx)(n.p,{children:"Once the response is received, the order book data is forwarded from the message bus to the on_historical_data handler."}),"\n",(0,t.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID for the order book snapshot request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"limit"})," (",(0,t.jsx)(n.em,{children:"int"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The limit on the depth of the order book snapshot."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If None, it will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"callback"})," (",(0,t.jsx)(n.em,{children:"Callable"})," ",(0,t.jsx)(n.em,{children:"["})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,t.jsx)(n.em,{children:"UUID4"})})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"None"})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If the instrument_id is None."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"request_quote_ticksself-instrumentid-instrument_id-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1",children:["request_quote_ticks(self, InstrumentId instrument_id, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsx)(n.p,{children:"Request historical QuoteTick data."}),"\n",(0,t.jsxs)(n.p,{children:["If end is ",(0,t.jsx)(n.code,{children:"None"})," then will request up to the most recent data."]}),"\n",(0,t.jsx)(n.p,{children:"Once the response is received, the quote tick data is forwarded from the message bus to the on_historical_data handler."}),"\n",(0,t.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The tick instrument ID for the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"start"})," (\u200b",(0,t.jsx)(n.em,{children:"datetime"}),"\u200b) \u2013 The start datetime (UTC) of request time range. Should be left-inclusive (start <= value), but inclusiveness is not currently guaranteed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"end"})," (",(0,t.jsx)(n.em,{children:"datetime"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) of request time range. If None then will be replaced with the current UTC time. Should be right-inclusive (value <= end), but inclusiveness is not currently guaranteed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"limit"})," (",(0,t.jsx)(n.em,{children:"int"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The limit on the amount of quote ticks received."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"callback"})," (",(0,t.jsx)(n.em,{children:"Callable"})," ",(0,t.jsx)(n.em,{children:"["})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,t.jsx)(n.em,{children:"UUID4"})})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"None"})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"update_catalog"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If start is None."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > current timestamp (now)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If end is > current timestamp (now)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > end."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"request_trade_ticksself-instrumentid-instrument_id-datetime-start-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1",children:["request_trade_ticks(self, InstrumentId instrument_id, datetime start, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) \u2192 ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsx)(n.p,{children:"Request historical TradeTick data."}),"\n",(0,t.jsxs)(n.p,{children:["If end is ",(0,t.jsx)(n.code,{children:"None"})," then will request up to the most recent data."]}),"\n",(0,t.jsx)(n.p,{children:"Once the response is received, the trade tick data is forwarded from the message bus to the on_historical_data handler."}),"\n",(0,t.jsx)(n.p,{children:"If the request fails, then an error is logged."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The tick instrument ID for the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"start"})," (\u200b",(0,t.jsx)(n.em,{children:"datetime"}),"\u200b) \u2013 The start datetime (UTC) of request time range. Should be left-inclusive (start <= value), but inclusiveness is not currently guaranteed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"end"})," (",(0,t.jsx)(n.em,{children:"datetime"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The end datetime (UTC) of request time range. If None then will be replaced with the current UTC time. Should be right-inclusive (value <= end), but inclusiveness is not currently guaranteed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"limit"})," (",(0,t.jsx)(n.em,{children:"int"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The limit on the amount of trade ticks received."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"callback"})," (",(0,t.jsx)(n.em,{children:"Callable"})," ",(0,t.jsx)(n.em,{children:"["})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,t.jsx)(n.em,{children:"UUID4"})})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"None"})," ",(0,t.jsx)(n.em,{children:"]"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The registered callback, to be called with the request ID when the response has completed processing."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"update_catalog"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," The request_id for the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If start is None."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > current timestamp (now)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If end is > current timestamp (now)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If start is > end."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If callback is not None and not of type Callable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"resetself--void-1",children:"reset(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Reset the component."}),"\n",(0,t.jsx)(n.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,t.jsxs)(n.p,{children:["While executing on_reset() any exception will be logged and reraised, then the component will remain in a ",(0,t.jsx)(n.code,{children:"RESETTING"})," state."]}),"\n",(0,t.jsx)(n.h4,{id:"warning-154",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"Do not override."}),"\n",(0,t.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,t.jsx)(n.h4,{id:"resumeself--void-1",children:"resume(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Resume the component."}),"\n",(0,t.jsxs)(n.p,{children:["While executing on_resume() any exception will be logged and reraised, then the component will remain in a ",(0,t.jsx)(n.code,{children:"RESUMING"})," state."]}),"\n",(0,t.jsx)(n.h4,{id:"warning-155",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"Do not override."}),"\n",(0,t.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,t.jsx)(n.h4,{id:"run_in_executorself-func-callable-any-tuple-argsnone-dict-kwargsnone-1",children:"run_in_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)"}),"\n",(0,t.jsx)(n.p,{children:"Schedules the callable func to be executed as fn(*args, **kwargs)."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"func"})," (\u200b",(0,t.jsx)(n.em,{children:"Callable"}),"\u200b) \u2013 The function to be executed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"args"})," (\u200b",(0,t.jsx)(n.em,{children:"positional arguments"}),"\u200b) \u2013 The positional arguments for the call to func."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"kwargs"})," (\u200b",(0,t.jsx)(n.em,{children:"arbitrary keyword arguments"}),"\u200b) \u2013 The keyword arguments for the call to func."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," The unique task identifier for the execution. This also corresponds to any future objects memory address."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.executor.TaskId",children:"TaskId"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If func is not of type Callable."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"saveself--dict-1",children:"save(self) \u2192 dict"}),"\n",(0,t.jsx)(n.p,{children:"Return the actor/strategy state dictionary to be saved."}),"\n",(0,t.jsx)(n.p,{children:"Calls on_save."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," The strategy state to save."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," dict[str, bytes]"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-156",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"Exceptions raised will be caught, logged, and reraised."}),"\n",(0,t.jsx)(n.h4,{id:"shutdown_systemself-str-reasonnone--void-1",children:"shutdown_system(self, str reason=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Initiate a system-wide shutdown by generating and publishing a ShutdownSystem command."}),"\n",(0,t.jsx)(n.p,{children:"The command is handled by the system\u2019s NautilusKernel, which will invoke either stop (synchronously) or stop_async (asynchronously) depending on the execution context and the presence of an active event loop."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"reason"})," (",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The reason for issuing the shutdown command."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"startself--void-1",children:"start(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Start the component."}),"\n",(0,t.jsxs)(n.p,{children:["While executing on_start() any exception will be logged and reraised, then the component will remain in a ",(0,t.jsx)(n.code,{children:"STARTING"})," state."]}),"\n",(0,t.jsx)(n.h4,{id:"warning-157",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"Do not override."}),"\n",(0,t.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,t.jsx)(n.h4,{id:"state-1",children:"state"}),"\n",(0,t.jsx)(n.p,{children:"ComponentState"}),"\n",(0,t.jsx)(n.p,{children:"Return the components current state."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," ComponentState"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," Component.state"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"stopself--void-1",children:"stop(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Stop the component."}),"\n",(0,t.jsxs)(n.p,{children:["While executing on_stop() any exception will be logged and reraised, then the component will remain in a ",(0,t.jsx)(n.code,{children:"STOPPING"})," state."]}),"\n",(0,t.jsx)(n.h4,{id:"warning-158",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"Do not override."}),"\n",(0,t.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,t.jsx)(n.h4,{id:"submit_orderself-order-order-positionid-position_idnone-clientid-client_idnone-dict-paramsnone--void-1",children:"submit_order(self, Order order, PositionId position_id=None, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Submit the given order with optional position ID, execution algorithm and routing instructions."}),"\n",(0,t.jsxs)(n.p,{children:["A SubmitOrder command will be created and sent to ",(0,t.jsx)(n.strong,{children:"either"})," an ExecAlgorithm, the OrderEmulator or the RiskEngine (depending whether the order is emulated and/or has an exec_algorithm_id specified)."]}),"\n",(0,t.jsx)(n.p,{children:"If the client order ID is duplicate, then the order will be denied."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"order"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/orders#nautilus_trader.model.orders.Order",children:(0,t.jsx)(n.em,{children:"Order"})}),") \u2013 The order to submit."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"position_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.PositionId",children:(0,t.jsx)(n.em,{children:"PositionId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The position ID to submit the order against. If a position does not yet exist, then any position opened will have this identifier assigned."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific execution client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If order.status is not ",(0,t.jsx)(n.code,{children:"INITIALIZED"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-159",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"If a position_id is passed and a position does not yet exist, then any position opened by the order will have this position ID assigned. This may not be what you intended."}),"\n",(0,t.jsx)(n.h4,{id:"submit_order_listself-orderlist-order_list-positionid-position_idnone-clientid-client_idnone-dict-paramsnone--void-1",children:"submit_order_list(self, OrderList order_list, PositionId position_id=None, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Submit the given order list with optional position ID, execution algorithm and routing instructions."}),"\n",(0,t.jsxs)(n.p,{children:["A SubmitOrderList command will be created and sent to ",(0,t.jsx)(n.strong,{children:"either"})," the OrderEmulator, or the RiskEngine (depending whether an order is emulated)."]}),"\n",(0,t.jsx)(n.p,{children:"If the order list ID is duplicate, or any client order ID is duplicate, then all orders will be denied."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"order_list"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/orders#nautilus_trader.model.orders.OrderList",children:(0,t.jsx)(n.em,{children:"OrderList"})}),") \u2013 The order list to submit."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"position_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.PositionId",children:(0,t.jsx)(n.em,{children:"PositionId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The position ID to submit the order against. If a position does not yet exist, then any position opened will have this identifier assigned."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific execution client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If any order.status is not ",(0,t.jsx)(n.code,{children:"INITIALIZED"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-160",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"If a position_id is passed and a position does not yet exist, then any position opened by an order will have this position ID assigned. This may not be what you intended."}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_barsself-bartype-bar_type-clientid-client_idnone-bool-await_partialfalse-bool-update_catalogfalse-dict-paramsnone--void-1",children:"subscribe_bars(self, BarType bar_type, ClientId client_id=None, bool await_partial=False, bool update_catalog=False, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to streaming Bar data for the given bar type."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching bar data published on the message bus is forwarded to the on_bar handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"bar_type"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.BarType",children:(0,t.jsx)(n.em,{children:"BarType"})}),") \u2013 The bar type to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"await_partial"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If the bar aggregator should await the arrival of a historical partial bar prior to actively aggregating new bars."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"update_catalog"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data. Only useful when downloading data during a backtest."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_dataself-datatype-data_type-clientid-client_idnone-instrumentid-instrument_idnone-bool-update_catalogfalse-dict-paramsnone--void-1",children:"subscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, bool update_catalog=False, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to data of the given data type."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching data published on the message bus is forwarded to the on_data handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"data_type"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.DataType",children:(0,t.jsx)(n.em,{children:"DataType"})}),") \u2013 The data type to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The data client ID. If supplied then a Subscribe command will be sent to the corresponding data client."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"update_catalog"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data. Only useful when downloading data during a backtest."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_funding_ratesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"subscribe_funding_rates(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to streaming FundingRateUpdate data for the given instrument ID."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching funding rate updates published on the message bus are forwarded to the on_funding_rate handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_index_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"subscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to streaming IndexPriceUpdate data for the given instrument ID."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching index price updates published on the message bus are forwarded to the on_index_price handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_instrumentself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"subscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to update Instrument data for the given instrument ID."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching instrument data published on the message bus is forwarded to the on_instrument handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument ID for the subscription."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_instrument_closeself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"subscribe_instrument_close(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to close updates for the given instrument ID."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching instrument close data published on the message bus is forwarded to the on_instrument_close handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to subscribe to status updates for."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_instrument_statusself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"subscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to status updates for the given instrument ID."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching instrument status data published on the message bus is forwarded to the on_instrument_status handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to subscribe to status updates for."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_instrumentsself-venue-venue-clientid-client_idnone-dict-paramsnone--void-1",children:"subscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to update Instrument data for the given venue."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching instrument data published on the message bus is forwarded the on_instrument handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"venue"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.Venue",children:(0,t.jsx)(n.em,{children:"Venue"})}),") \u2013 The venue for the subscription."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_mark_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"subscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to streaming MarkPriceUpdate data for the given instrument ID."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching mark price updates published on the message bus are forwarded to the on_mark_price handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_order_book_at_intervalself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-int-interval_ms1000-clientid-client_idnone-dict-paramsnone--void-1",children:"subscribe_order_book_at_interval(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, int interval_ms=1000, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to an OrderBook at a specified interval for the given instrument ID."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching order book updates published on the message bus are forwarded to the on_order_book handler."}),"\n",(0,t.jsx)(n.p,{children:"The DataEngine will only maintain one order book for each instrument. Because of this - the level, depth and params for the stream will be set as per the last subscription request (this will also affect all subscribers)."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The order book instrument ID to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"book_type"})," (BookType ","L3_MBO",") \u2013 The order book type."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"depth"})," (",(0,t.jsx)(n.em,{children:"int"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The maximum depth for the order book. A depth of 0 is maximum depth."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"interval_ms"})," (",(0,t.jsx)(n.em,{children:"int"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default 1000"}),"\u200b) \u2013 The order book snapshot interval (milliseconds)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If depth is negative (< 0)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If interval_ms is not positive (> 0)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"warning-161",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"Consider subscribing to order book deltas if you need intervals less than 100 milliseconds."}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_order_book_deltasself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-clientid-client_idnone-bool-managedtrue-bool-pyo3_conversionfalse-dict-paramsnone--void-1",children:"subscribe_order_book_deltas(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to the order book data stream, being a snapshot then deltas for the given instrument ID."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching order book data published on the message bus is forwarded to the on_order_book_deltas handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The order book instrument ID to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"book_type"})," (BookType ","L3_MBO",") \u2013 The order book type."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"depth"})," (",(0,t.jsx)(n.em,{children:"int"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The maximum depth for the order book. A depth of 0 is maximum depth."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"managed"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If an order book should be managed by the data engine based on the subscribed feed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"pyo3_conversion"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If received deltas should be converted to nautilus_pyo3.OrderBookDeltas prior to being passed to the on_order_book_deltas handler."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_order_book_depthself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-clientid-client_idnone-bool-managedtrue-bool-pyo3_conversionfalse-dict-paramsnone--void-1",children:"subscribe_order_book_depth(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to the order book depth stream for the given instrument ID."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching order book data published on the message bus is forwarded to the on_order_book_depth handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The order book instrument ID to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"book_type"})," (BookType ","L3_MBO",") \u2013 The order book type."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"managed"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default True"}),"\u200b) \u2013 If an order book should be managed by the data engine based on the subscribed feed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"pyo3_conversion"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If received deltas should be converted to nautilus_pyo3.OrderBookDepth prior to being passed to the on_order_book_depth handler."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_quote_ticksself-instrumentid-instrument_id-clientid-client_idnone-bool-update_catalogfalse-dict-paramsnone--void-1",children:"subscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to streaming QuoteTick data for the given instrument ID."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching quote tick data published on the message bus is forwarded to the on_quote_tick handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The tick instrument to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"update_catalog"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data. Only useful when downloading data during a backtest."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_signalself-str-name--void-1",children:"subscribe_signal(self, str name='') \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to a specific signal by name, or to all signals if no name is provided."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching signal data published on the message bus is forwarded to the on_signal handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"name"})," (",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The name of the signal to subscribe to. If not provided or an empty string is passed, the subscription will include all signals. The signal name is case-insensitive and will be capitalized (e.g., \u2018example\u2019 becomes \u2018SignalExample*\u2019)."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"subscribe_trade_ticksself-instrumentid-instrument_id-clientid-client_idnone-bool-update_catalogfalse-dict-paramsnone--void-1",children:"subscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to streaming TradeTick data for the given instrument ID."}),"\n",(0,t.jsx)(n.p,{children:"Once subscribed, any matching trade tick data published on the message bus is forwarded to the on_trade_tick handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The tick instrument to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"update_catalog"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 Whether to update a catalog with the received data. Only useful when downloading data during a backtest."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"to_importable_configself--importablestrategyconfig-1",children:["to_importable_config(self) \u2192 ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.trading.config.ImportableStrategyConfig",children:"ImportableStrategyConfig"})]}),"\n",(0,t.jsx)(n.p,{children:"Returns an importable configuration for this strategy."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/config#nautilus_trader.trading.config.ImportableStrategyConfig",children:"ImportableStrategyConfig"})]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"trader_id-1",children:"trader_id"}),"\n",(0,t.jsx)(n.p,{children:"The trader ID associated with the component."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," TraderId"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"type-1",children:"type"}),"\n",(0,t.jsx)(n.p,{children:"The components type."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," type"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"unsubscribe_barsself-bartype-bar_type-clientid-client_idnone-dict-paramsnone--void-1",children:"unsubscribe_bars(self, BarType bar_type, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Unsubscribe from streaming Bar data for the given bar type."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"bar_type"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.BarType",children:(0,t.jsx)(n.em,{children:"BarType"})}),") \u2013 The bar type to unsubscribe from."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"unsubscribe_dataself-datatype-data_type-clientid-client_idnone-instrumentid-instrument_idnone-dict-paramsnone--void-1",children:"unsubscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Unsubscribe from data of the given data type."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"data_type"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/data#nautilus_trader.model.data.DataType",children:(0,t.jsx)(n.em,{children:"DataType"})}),") \u2013 The data type to unsubscribe from."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The data client ID. If supplied then an Unsubscribe command will be sent to the data client."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"unsubscribe_funding_ratesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"unsubscribe_funding_rates(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Unsubscribe from streaming FundingRateUpdate data for the given instrument ID."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to unsubscribe from."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"unsubscribe_index_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"unsubscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Unsubscribe from streaming IndexPriceUpdate data for the given instrument ID."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"unsubscribe_instrumentself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"unsubscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Unsubscribe from update Instrument data for the given instrument ID."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to unsubscribe from."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"unsubscribe_instrument_statusself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"unsubscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Unsubscribe to status updates of the given venue."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to unsubscribe to status updates for."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"unsubscribe_instrumentsself-venue-venue-clientid-client_idnone-dict-paramsnone--void-1",children:"unsubscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Unsubscribe from update Instrument data for the given venue."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"venue"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.Venue",children:(0,t.jsx)(n.em,{children:"Venue"})}),") \u2013 The venue for the subscription."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"unsubscribe_mark_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"unsubscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Unsubscribe from streaming MarkPriceUpdate data for the given instrument ID."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The instrument to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"unsubscribe_order_book_at_intervalself-instrumentid-instrument_id-int-interval_ms1000-clientid-client_idnone-dict-paramsnone--void-1",children:"unsubscribe_order_book_at_interval(self, InstrumentId instrument_id, int interval_ms=1000, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Unsubscribe from an OrderBook at a specified interval for the given instrument ID."}),"\n",(0,t.jsx)(n.p,{children:"The interval must match the previously subscribed interval."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The order book instrument to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"interval_ms"})," (",(0,t.jsx)(n.em,{children:"int"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default 1000"}),"\u200b) \u2013 The order book snapshot interval (milliseconds)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"unsubscribe_order_book_deltasself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"unsubscribe_order_book_deltas(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Unsubscribe the order book deltas stream for the given instrument ID."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The order book instrument to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"unsubscribe_order_book_depthself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"unsubscribe_order_book_depth(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Unsubscribe the order book depth stream for the given instrument ID."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The order book instrument to subscribe to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"unsubscribe_quote_ticksself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"unsubscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Unsubscribe from streaming QuoteTick data for the given instrument ID."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The tick instrument to unsubscribe from."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"unsubscribe_trade_ticksself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1",children:"unsubscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Unsubscribe from streaming TradeTick data for the given instrument ID."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instrument_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.InstrumentId",children:(0,t.jsx)(n.em,{children:"InstrumentId"})}),") \u2013 The tick instrument ID to unsubscribe from."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"client_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ClientId",children:(0,t.jsx)(n.em,{children:"ClientId"})})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The specific client ID for the command. If ",(0,t.jsx)(n.code,{children:"None"})," then will be inferred from the venue in the instrument ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"params"})," (",(0,t.jsx)(n.em,{children:"dict"})," *[*",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"Any"})," ",(0,t.jsxs)(n.em,{children:["]* ",(0,t.jsx)(n.em,{children:","})," \u200b"]}),"optional*\u200b) \u2013 Additional parameters potentially used by a specific client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"update_syntheticself-syntheticinstrument-synthetic--void-1",children:"update_synthetic(self, SyntheticInstrument synthetic) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Update the synthetic instrument in the cache."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"synthetic"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/instruments#nautilus_trader.model.instruments.SyntheticInstrument",children:(0,t.jsx)(n.em,{children:"SyntheticInstrument"})}),") \u2013 The synthetic instrument to update in the cache."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"KeyError"})," \u2013 If synthetic does not already exist in the cache."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"use_hyphens_in_client_order_ids-1",children:"use_hyphens_in_client_order_ids"}),"\n",(0,t.jsx)(n.p,{children:"If hyphens should be used in generated client order ID values."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"use_uuid_client_order_ids-1",children:"use_uuid_client_order_ids"}),"\n",(0,t.jsx)(n.p,{children:"If UUID4\u2019s should be used for client order ID values."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," bool"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The Trader class is intended to manage a fleet of trading strategies within a running instance of the platform."}),"\n",(0,t.jsx)(n.p,{children:"A running instance could be either a test/backtest or live implementation - the Trader will operate in the same way."}),"\n",(0,t.jsxs)(n.h3,{id:"class-trader-1",children:[(0,t.jsx)(n.em,{children:"class"})," Trader"]}),"\n",(0,t.jsxs)(n.p,{children:["Bases: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.Component",children:(0,t.jsx)(n.code,{children:"Component"})})]}),"\n",(0,t.jsx)(n.p,{children:"Provides a trader for managing a fleet of actors, execution algorithms and trading strategies."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"trader_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.TraderId",children:(0,t.jsx)(n.em,{children:"TraderId"})}),") \u2013 The ID for the trader."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"instance_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:(0,t.jsx)(n.em,{children:"UUID4"})}),") \u2013 The instance ID for the trader."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"msgbus"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.MessageBus",children:(0,t.jsx)(n.em,{children:"MessageBus"})}),") \u2013 The message bus for the trader."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"cache"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/cache#nautilus_trader.cache.Cache",children:(0,t.jsx)(n.em,{children:"Cache"})}),") \u2013 The cache for the trader."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"portfolio"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/portfolio#nautilus_trader.portfolio.Portfolio",children:(0,t.jsx)(n.em,{children:"Portfolio"})}),") \u2013 The portfolio for the trader."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"data_engine"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/data#nautilus_trader.data.engine.DataEngine",children:(0,t.jsx)(n.em,{children:"DataEngine"})}),") \u2013 The data engine for the trader."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"risk_engine"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/risk#nautilus_trader.risk.engine.RiskEngine",children:(0,t.jsx)(n.em,{children:"RiskEngine"})}),") \u2013 The risk engine for the trader."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"exec_engine"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/execution#nautilus_trader.execution.engine.ExecutionEngine",children:(0,t.jsx)(n.em,{children:"ExecutionEngine"})}),") \u2013 The execution engine for the trader."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"clock"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.component.Clock",children:(0,t.jsx)(n.em,{children:"Clock"})}),") \u2013 The clock for the trader."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"environment"})," (Environment ","LIVE",") \u2013 The environment context."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"has_controller"})," (",(0,t.jsx)(n.em,{children:"bool"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"default False"}),"\u200b) \u2013 If the trader has a controller."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"loop"})," (",(0,t.jsx)(n.em,{children:"asyncio.AbstractEventLoop"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The event loop for the trader."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If portfolio is not equal to the exec_engine portfolio."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If strategies is ",(0,t.jsx)(n.code,{children:"None"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If strategies is empty."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeError"})," \u2013 If strategies contains a type other than Strategy."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"property-instanceid-uuid4_-1",children:[(0,t.jsx)(n.em,{children:"property"})," instance",(0,t.jsx)(n.em,{children:"id"}),": ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.uuid.UUID4",children:"UUID4"}),"_"]}),"\n",(0,t.jsx)(n.p,{children:"Return the traders instance ID."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/core#nautilus_trader.core.UUID4",children:"UUID4"})]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"actors--listactor-1",children:["actors() \u2192 list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:"Actor"}),"]"]}),"\n",(0,t.jsx)(n.p,{children:"Return the actors loaded in the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:"Actor"}),"]"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"strategies--liststrategy-1",children:["strategies() \u2192 list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.strategy.Strategy",children:"Strategy"}),"]"]}),"\n",(0,t.jsx)(n.p,{children:"Return the strategies loaded in the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.Strategy",children:"Strategy"}),"]"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"exec_algorithms--listany-1",children:"exec_algorithms() \u2192 list[Any]"}),"\n",(0,t.jsx)(n.p,{children:"Return the execution algorithms loaded in the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," list[ExecAlgorithms]"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"actor_ids--listcomponentid-1",children:["actor_ids() \u2192 list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:"ComponentId"}),"]"]}),"\n",(0,t.jsx)(n.p,{children:"Return the actor IDs loaded in the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:"ComponentId"}),"]"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"strategy_ids--liststrategyid-1",children:["strategy_ids() \u2192 list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:"StrategyId"}),"]"]}),"\n",(0,t.jsx)(n.p,{children:"Return the strategy IDs loaded in the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:"StrategyId"}),"]"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"exec_algorithm_ids--listexecalgorithmid-1",children:["exec_algorithm_ids() \u2192 list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ExecAlgorithmId",children:"ExecAlgorithmId"}),"]"]}),"\n",(0,t.jsx)(n.p,{children:"Return the execution algorithm IDs loaded in the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ExecAlgorithmId",children:"ExecAlgorithmId"}),"]"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"actor_states--dictcomponentid-str-1",children:["actor_states() \u2192 dict[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:"ComponentId"}),", str]"]}),"\n",(0,t.jsx)(n.p,{children:"Return the traders actor states."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," dict[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:"ComponentId"}),", str]"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"strategy_states--dictstrategyid-str-1",children:["strategy_states() \u2192 dict[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:"StrategyId"}),", str]"]}),"\n",(0,t.jsx)(n.p,{children:"Return the traders strategy states."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," dict[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:"StrategyId"}),", str]"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"exec_algorithm_states--dictexecalgorithmid-str-1",children:["exec_algorithm_states() \u2192 dict[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ExecAlgorithmId",children:"ExecAlgorithmId"}),", str]"]}),"\n",(0,t.jsx)(n.p,{children:"Return the traders execution algorithm states."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," dict[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ExecAlgorithmId",children:"ExecAlgorithmId"}),", str]"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"add_actoractor-actor--none-1",children:["add_actor(actor: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:"Actor"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Add the given custom component to the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"actor"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:(0,t.jsx)(n.em,{children:"Actor"})}),") \u2013 The actor to add and register."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If actor.state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," or ",(0,t.jsx)(n.code,{children:"DISPOSED"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"RuntimeError"})," \u2013 If actor.id already exists in the trader."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"add_actorsactors-listactor--none-1",children:["add_actors(actors: list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/common#nautilus_trader.common.actor.Actor",children:"Actor"}),"]) \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Add the given actors to the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"actors"})," (",(0,t.jsx)(n.em,{children:"list"})," *[*",(0,t.jsx)(n.em,{children:"TradingStrategies"})," \u200b*]*\u200b) \u2013 The actors to add and register."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If actors is ",(0,t.jsx)(n.code,{children:"None"})," or empty."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"add_strategystrategy-strategy--none-1",children:["add_strategy(strategy: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.strategy.Strategy",children:"Strategy"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Add the given trading strategy to the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"strategy"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.Strategy",children:(0,t.jsx)(n.em,{children:"Strategy"})}),") \u2013 The trading strategy to add and register."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If strategy.state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," or ",(0,t.jsx)(n.code,{children:"DISPOSED"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"RuntimeError"})," \u2013 If strategy.id already exists in the trader."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"add_strategiesstrategies-liststrategy--none-1",children:["add_strategies(strategies: list[",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/trading#nautilus_trader.trading.strategy.Strategy",children:"Strategy"}),"]) \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Add the given trading strategies to the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"strategies"})," (",(0,t.jsx)(n.em,{children:"list"})," *[*",(0,t.jsx)(n.em,{children:"TradingStrategies"})," \u200b*]*\u200b) \u2013 The trading strategies to add and register."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If strategies is ",(0,t.jsx)(n.code,{children:"None"})," or empty."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"add_exec_algorithmexec_algorithm-any--none-1",children:"add_exec_algorithm(exec_algorithm: Any) \u2192 None"}),"\n",(0,t.jsx)(n.p,{children:"Add the given execution algorithm to the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"exec_algorithm"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/execution#nautilus_trader.execution.algorithm.ExecAlgorithm",children:(0,t.jsx)(n.em,{children:"ExecAlgorithm"})}),") \u2013 The execution algorithm to add and register."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"KeyError"})," \u2013 If exec_algorithm.id already exists in the trader."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If exec_algorithm.state is ",(0,t.jsx)(n.code,{children:"RUNNING"})," or ",(0,t.jsx)(n.code,{children:"DISPOSED"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"add_exec_algorithmsexec_algorithms-listany--none-1",children:"add_exec_algorithms(exec_algorithms: list[Any]) \u2192 None"}),"\n",(0,t.jsx)(n.p,{children:"Add the given execution algorithms to the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"exec_algorithms"})," (",(0,t.jsx)(n.em,{children:"list"})," ",(0,t.jsx)(n.em,{children:"\u200b[\u200b"}),(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/execution#nautilus_trader.execution.algorithm.ExecAlgorithm",children:(0,t.jsx)(n.em,{children:"ExecAlgorithm"})})," \u200b*]*\u200b) \u2013 The execution algorithms to add and register."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If exec_algorithms is ",(0,t.jsx)(n.code,{children:"None"})," or empty."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"start_actoractor_id-componentid--none-1",children:["start_actor(actor_id: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:"ComponentId"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Start the actor with the given actor_id."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"actor_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:(0,t.jsx)(n.em,{children:"ComponentId"})}),") \u2013 The component ID to start."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If an actor with the given actor_id is not found."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"start_strategystrategy_id-strategyid--none-1",children:["start_strategy(strategy_id: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:"StrategyId"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Start the strategy with the given strategy_id."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"strategy_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:(0,t.jsx)(n.em,{children:"StrategyId"})}),") \u2013 The strategy ID to start."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If a strategy with the given strategy_id is not found."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"stop_actoractor_id-componentid--none-1",children:["stop_actor(actor_id: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:"ComponentId"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Stop the actor with the given actor_id."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"actor_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:(0,t.jsx)(n.em,{children:"ComponentId"})}),") \u2013 The actor ID to stop."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If an actor with the given actor_id is not found."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"stop_strategystrategy_id-strategyid--none-1",children:["stop_strategy(strategy_id: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:"StrategyId"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Stop the strategy with the given strategy_id."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"strategy_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:(0,t.jsx)(n.em,{children:"StrategyId"})}),") \u2013 The strategy ID to stop."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If a strategy with the given strategy_id is not found."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"remove_actoractor_id-componentid--none-1",children:["remove_actor(actor_id: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:"ComponentId"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Remove the actor with the given actor_id."}),"\n",(0,t.jsxs)(n.p,{children:["Will stop the actor first if state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"actor_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.ComponentId",children:(0,t.jsx)(n.em,{children:"ComponentId"})}),") \u2013 The actor ID to remove."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If an actor with the given actor_id is not found."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"remove_strategystrategy_id-strategyid--none-1",children:["remove_strategy(strategy_id: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:"StrategyId"}),") \u2192 None"]}),"\n",(0,t.jsx)(n.p,{children:"Remove the strategy with the given strategy_id."}),"\n",(0,t.jsxs)(n.p,{children:["Will stop the strategy first if state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"strategy_id"})," (",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.StrategyId",children:(0,t.jsx)(n.em,{children:"StrategyId"})}),") \u2013 The strategy ID to remove."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If a strategy with the given strategy_id is not found."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"clear_actors--none-1",children:"clear_actors() \u2192 None"}),"\n",(0,t.jsx)(n.p,{children:"Dispose and clear all actors held by the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"clear_strategies--none-1",children:"clear_strategies() \u2192 None"}),"\n",(0,t.jsx)(n.p,{children:"Dispose and clear all strategies held by the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"clear_exec_algorithms--none-1",children:"clear_exec_algorithms() \u2192 None"}),"\n",(0,t.jsx)(n.p,{children:"Dispose and clear all execution algorithms held by the trader."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raises:"})," ",(0,t.jsx)(n.strong,{children:"ValueError"})," \u2013 If state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"subscribetopic-str-handler-callableany-none--none-1",children:"subscribe(topic: str, handler: Callable[[Any], None]) \u2192 None"}),"\n",(0,t.jsx)(n.p,{children:"Subscribe to the given message topic with the given callback handler."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"topic"})," (\u200b",(0,t.jsx)(n.em,{children:"str"}),"\u200b) \u2013 The topic for the subscription. May include wildcard glob patterns."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"handler"})," (",(0,t.jsx)(n.em,{children:"Callable"})," ",(0,t.jsx)(n.em,{children:"["})," *[*",(0,t.jsx)(n.em,{children:"Any"})," _]* ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"None"})," \u200b_]*\u200b) \u2013 The handler for the subscription."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"unsubscribetopic-str-handler-callableany-none--none-1",children:"unsubscribe(topic: str, handler: Callable[[Any], None]) \u2192 None"}),"\n",(0,t.jsx)(n.p,{children:"Unsubscribe the given handler from the given message topic."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"topic"})," (",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The topic to unsubscribe from. May include wildcard glob patterns."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"handler"})," (",(0,t.jsx)(n.em,{children:"Callable"})," ",(0,t.jsx)(n.em,{children:"["})," *[*",(0,t.jsx)(n.em,{children:"Any"})," _]* ",(0,t.jsx)(n.em,{children:","})," ",(0,t.jsx)(n.em,{children:"None"})," \u200b_]*\u200b) \u2013 The handler for the subscription."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"save--none-1",children:"save() \u2192 None"}),"\n",(0,t.jsx)(n.p,{children:"Save all actor and strategy states to the cache."}),"\n",(0,t.jsx)(n.h4,{id:"load--none-1",children:"load() \u2192 None"}),"\n",(0,t.jsx)(n.p,{children:"Load all actor and strategy states from the cache."}),"\n",(0,t.jsx)(n.h4,{id:"check_residuals--none-1",children:"check_residuals() \u2192 None"}),"\n",(0,t.jsx)(n.p,{children:"Check for residual open state such as open orders or open positions."}),"\n",(0,t.jsx)(n.h4,{id:"generate_orders_report--dataframe-1",children:"generate_orders_report() \u2192 DataFrame"}),"\n",(0,t.jsx)(n.p,{children:"Generate an orders report."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," pd.DataFrame"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"generate_order_fills_report--dataframe-1",children:"generate_order_fills_report() \u2192 DataFrame"}),"\n",(0,t.jsx)(n.p,{children:"Generate an order fills report."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," pd.DataFrame"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"generate_fills_report--dataframe-1",children:"generate_fills_report() \u2192 DataFrame"}),"\n",(0,t.jsx)(n.p,{children:"Generate a fills report."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," pd.DataFrame"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"generate_positions_report--dataframe-1",children:"generate_positions_report() \u2192 DataFrame"}),"\n",(0,t.jsx)(n.p,{children:"Generate a positions report."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," pd.DataFrame"]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"generate_account_reportvenue-venue--dataframe-1",children:["generate_account_report(venue: ",(0,t.jsx)(n.a,{href:"https://nautilustrader.io/docs/latest/api_reference/model/identifiers#nautilus_trader.model.identifiers.Venue",children:"Venue"}),") \u2192 DataFrame"]}),"\n",(0,t.jsx)(n.p,{children:"Generate an account report."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," pd.DataFrame"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"degradeself--void-2",children:"degrade(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Degrade the component."}),"\n",(0,t.jsxs)(n.p,{children:["While executing on_degrade() any exception will be logged and reraised, then the component will remain in a ",(0,t.jsx)(n.code,{children:"DEGRADING"})," state."]}),"\n",(0,t.jsx)(n.h4,{id:"warning-162",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"Do not override."}),"\n",(0,t.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,t.jsx)(n.h4,{id:"disposeself--void-2",children:"dispose(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Dispose of the component."}),"\n",(0,t.jsxs)(n.p,{children:["While executing on_dispose() any exception will be logged and reraised, then the component will remain in a ",(0,t.jsx)(n.code,{children:"DISPOSING"})," state."]}),"\n",(0,t.jsx)(n.h4,{id:"warning-163",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"Do not override."}),"\n",(0,t.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,t.jsx)(n.h4,{id:"faultself--void-2",children:"fault(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Fault the component."}),"\n",(0,t.jsx)(n.p,{children:"Calling this method multiple times has the same effect as calling it once (it is idempotent). Once called, it cannot be reversed, and no other methods should be called on this instance."}),"\n",(0,t.jsxs)(n.p,{children:["While executing on_fault() any exception will be logged and reraised, then the component will remain in a ",(0,t.jsx)(n.code,{children:"FAULTING"})," state."]}),"\n",(0,t.jsx)(n.h4,{id:"warning-164",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"Do not override."}),"\n",(0,t.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,t.jsxs)(n.h4,{id:"classmethod-fully_qualified_namecls--str-3",children:[(0,t.jsx)(n.em,{children:"classmethod"})," fully_qualified_name(cls) \u2192 str"]}),"\n",(0,t.jsx)(n.p,{children:"Return the fully qualified name for the components class."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," str"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"id-2",children:"id"}),"\n",(0,t.jsx)(n.p,{children:"The components ID."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," ComponentId"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"is_degraded-2",children:"is_degraded"}),"\n",(0,t.jsx)(n.p,{children:"bool"}),"\n",(0,t.jsxs)(n.p,{children:["Return whether the current component state is ",(0,t.jsx)(n.code,{children:"DEGRADED"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," Component.is_degraded"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"is_disposed-2",children:"is_disposed"}),"\n",(0,t.jsx)(n.p,{children:"bool"}),"\n",(0,t.jsxs)(n.p,{children:["Return whether the current component state is ",(0,t.jsx)(n.code,{children:"DISPOSED"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," Component.is_disposed"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"is_faulted-2",children:"is_faulted"}),"\n",(0,t.jsx)(n.p,{children:"bool"}),"\n",(0,t.jsxs)(n.p,{children:["Return whether the current component state is ",(0,t.jsx)(n.code,{children:"FAULTED"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," Component.is_faulted"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"is_initialized-2",children:"is_initialized"}),"\n",(0,t.jsx)(n.p,{children:"bool"}),"\n",(0,t.jsxs)(n.p,{children:["Return whether the component has been initialized (component.state >= ",(0,t.jsx)(n.code,{children:"INITIALIZED"}),")."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," Component.is_initialized"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"is_running-2",children:"is_running"}),"\n",(0,t.jsx)(n.p,{children:"bool"}),"\n",(0,t.jsxs)(n.p,{children:["Return whether the current component state is ",(0,t.jsx)(n.code,{children:"RUNNING"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," Component.is_running"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"is_stopped-2",children:"is_stopped"}),"\n",(0,t.jsx)(n.p,{children:"bool"}),"\n",(0,t.jsxs)(n.p,{children:["Return whether the current component state is ",(0,t.jsx)(n.code,{children:"STOPPED"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," bool"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," Component.is_stopped"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"resetself--void-2",children:"reset(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Reset the component."}),"\n",(0,t.jsx)(n.p,{children:"All stateful fields are reset to their initial value."}),"\n",(0,t.jsxs)(n.p,{children:["While executing on_reset() any exception will be logged and reraised, then the component will remain in a ",(0,t.jsx)(n.code,{children:"RESETTING"})," state."]}),"\n",(0,t.jsx)(n.h4,{id:"warning-165",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"Do not override."}),"\n",(0,t.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,t.jsx)(n.h4,{id:"resumeself--void-2",children:"resume(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Resume the component."}),"\n",(0,t.jsxs)(n.p,{children:["While executing on_resume() any exception will be logged and reraised, then the component will remain in a ",(0,t.jsx)(n.code,{children:"RESUMING"})," state."]}),"\n",(0,t.jsx)(n.h4,{id:"warning-166",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"Do not override."}),"\n",(0,t.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,t.jsx)(n.h4,{id:"shutdown_systemself-str-reasonnone--void-2",children:"shutdown_system(self, str reason=None) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Initiate a system-wide shutdown by generating and publishing a ShutdownSystem command."}),"\n",(0,t.jsx)(n.p,{children:"The command is handled by the system\u2019s NautilusKernel, which will invoke either stop (synchronously) or stop_async (asynchronously) depending on the execution context and the presence of an active event loop."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"})," ",(0,t.jsx)(n.strong,{children:"reason"})," (",(0,t.jsx)(n.em,{children:"str"})," ",(0,t.jsx)(n.em,{children:","})," \u200b",(0,t.jsx)(n.em,{children:"optional"}),"\u200b) \u2013 The reason for issuing the shutdown command."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"startself--void-2",children:"start(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Start the component."}),"\n",(0,t.jsxs)(n.p,{children:["While executing on_start() any exception will be logged and reraised, then the component will remain in a ",(0,t.jsx)(n.code,{children:"STARTING"})," state."]}),"\n",(0,t.jsx)(n.h4,{id:"warning-167",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"Do not override."}),"\n",(0,t.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,t.jsx)(n.h4,{id:"state-2",children:"state"}),"\n",(0,t.jsx)(n.p,{children:"ComponentState"}),"\n",(0,t.jsx)(n.p,{children:"Return the components current state."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Return type:"})," ComponentState"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," Component.state"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"stopself--void-2",children:"stop(self) \u2192 void"}),"\n",(0,t.jsx)(n.p,{children:"Stop the component."}),"\n",(0,t.jsxs)(n.p,{children:["While executing on_stop() any exception will be logged and reraised, then the component will remain in a ",(0,t.jsx)(n.code,{children:"STOPPING"})," state."]}),"\n",(0,t.jsx)(n.h4,{id:"warning-168",children:"WARNING"}),"\n",(0,t.jsx)(n.p,{children:"Do not override."}),"\n",(0,t.jsx)(n.p,{children:"If the component is not in a valid state from which to execute this method, then the component state will not change, and an error will be logged."}),"\n",(0,t.jsx)(n.h4,{id:"trader_id-2",children:"trader_id"}),"\n",(0,t.jsx)(n.p,{children:"The trader ID associated with the component."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," TraderId"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"type-2",children:"type"}),"\n",(0,t.jsx)(n.p,{children:"The components type."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," type"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},9087:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>l});var r=i(6363);const t={},s=r.createContext(t);function d(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);