"use strict";(globalThis.webpackChunknautilus_trader=globalThis.webpackChunknautilus_trader||[]).push([[2724],{413:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"concepts/orders","title":"Orders","description":"This guide provides further details about the available order types for the platform, along with","source":"@site/docs/concepts/orders.md","sourceDirName":"concepts","slug":"/concepts/orders","permalink":"/concepts/orders","draft":false,"unlisted":false,"editUrl":"https://github.com/Aloento/NautilusTraderDoc/tree/main/docs/concepts/orders.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Message Bus","permalink":"/concepts/message_bus"},"next":{"title":"Overview","permalink":"/concepts/overview"}}');var n=t(7259),s=t(9087);const d={},l="Orders",o={},a=[{value:"Overview",id:"overview",level:2},{value:"Terminology",id:"terminology",level:3},{value:"Execution instructions",id:"execution-instructions",level:2},{value:"Time in force",id:"time-in-force",level:3},{value:"Expire time",id:"expire-time",level:3},{value:"Post-only",id:"post-only",level:3},{value:"Reduce-only",id:"reduce-only",level:3},{value:"Display quantity",id:"display-quantity",level:3},{value:"Trigger type",id:"trigger-type",level:3},{value:"Trigger offset type",id:"trigger-offset-type",level:3},{value:"Contingent orders",id:"contingent-orders",level:3},{value:"Order factory",id:"order-factory",level:2},{value:"Order types",id:"order-types",level:2},{value:"Market",id:"market",level:3},{value:"Limit",id:"limit",level:3},{value:"Stop-Market",id:"stop-market",level:3},{value:"Stop-Limit",id:"stop-limit",level:3},{value:"Market-To-Limit",id:"market-to-limit",level:3},{value:"Market-If-Touched",id:"market-if-touched",level:3},{value:"Limit-If-Touched",id:"limit-if-touched",level:3},{value:"Trailing-Stop-Market",id:"trailing-stop-market",level:3},{value:"Trailing-Stop-Limit",id:"trailing-stop-limit",level:3},{value:"Advanced orders",id:"advanced-orders",level:2},{value:"Order lists",id:"order-lists",level:3},{value:"Contingency types",id:"contingency-types",level:3},{value:"One-Triggers-Other (OTO)",id:"one-triggers-other-oto",level:4},{value:"Trigger models",id:"trigger-models",level:5},{value:"One-Cancels-Other (OCO)",id:"one-cancels-other-oco",level:4},{value:"One-Updates-Other (OUO)",id:"one-updates-other-ouo",level:4},{value:"Bracket orders",id:"bracket-orders",level:3},{value:"Emulated orders",id:"emulated-orders",level:2},{value:"Introduction",id:"introduction",level:3},{value:"Submitting order for emulation",id:"submitting-order-for-emulation",level:3},{value:"Technical implementation",id:"technical-implementation",level:3},{value:"Life cycle",id:"life-cycle",level:3},{value:"Held emulated orders",id:"held-emulated-orders",level:4},{value:"Released emulated orders",id:"released-emulated-orders",level:4},{value:"Order types, which can be emulated",id:"order-types-which-can-be-emulated",level:3},{value:"Querying",id:"querying",level:3},{value:"Through the Cache",id:"through-the-cache",level:4},{value:"Direct order queries",id:"direct-order-queries",level:4},{value:"Persistence and recovery",id:"persistence-and-recovery",level:3},{value:"Best practices",id:"best-practices",level:3}];function c(e){const r={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"orders",children:"Orders"})}),"\n",(0,n.jsx)(r.p,{children:"This guide provides further details about the available order types for the platform, along with\nthe execution instructions supported for each."}),"\n",(0,n.jsx)(r.p,{children:"Orders are one of the fundamental building blocks of any algorithmic trading strategy.\nNautilusTrader supports a broad set of order types and execution instructions, from standard to advanced,\nexposing as much of a trading venue's functionality as possible. This enables traders to define instructions\nand contingencies for order execution and management, facilitating the creation of virtually any trading strategy."}),"\n",(0,n.jsx)(r.h2,{id:"overview",children:"Overview"}),"\n",(0,n.jsxs)(r.p,{children:["All order types are derived from two fundamentals: ",(0,n.jsx)(r.em,{children:"Market"})," and ",(0,n.jsx)(r.em,{children:"Limit"})," orders. In terms of liquidity, they are opposites.\n",(0,n.jsx)(r.em,{children:"Market"})," orders consume liquidity by executing immediately at the best available price, whereas ",(0,n.jsx)(r.em,{children:"Limit"}),"\norders provide liquidity by resting in the order book at a specified price until matched."]}),"\n",(0,n.jsx)(r.p,{children:"The order types available for the platform are (using the enum values):"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"MARKET"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"LIMIT"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"STOP_MARKET"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"STOP_LIMIT"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"MARKET_TO_LIMIT"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"MARKET_IF_TOUCHED"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"LIMIT_IF_TOUCHED"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"TRAILING_STOP_MARKET"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"TRAILING_STOP_LIMIT"})}),"\n"]}),"\n",(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsx)(r.p,{children:"NautilusTrader provides a unified API for many order types and execution instructions, but not all venues support every option.\nIf an order includes an instruction or option the target venue does not support, the system does not submit it.\nInstead, it logs a clear, explanatory error."})}),"\n",(0,n.jsx)(r.h3,{id:"terminology",children:"Terminology"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["An order is ",(0,n.jsx)(r.strong,{children:"aggressive"})," if its type is ",(0,n.jsx)(r.code,{children:"MARKET"})," or if it executes as a ",(0,n.jsx)(r.em,{children:"marketable"})," order (i.e., takes liquidity)."]}),"\n",(0,n.jsxs)(r.li,{children:["An order is ",(0,n.jsx)(r.strong,{children:"passive"})," if it is not marketable (i.e., provides liquidity)."]}),"\n",(0,n.jsxs)(r.li,{children:["An order is ",(0,n.jsx)(r.strong,{children:"active local"})," if it remains within the local system boundary in one of the following three non-terminal statuses:","\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"INITIALIZED"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"EMULATED"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"RELEASED"})}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["An order is ",(0,n.jsx)(r.strong,{children:"in-flight"})," when at one of the following statuses:","\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"SUBMITTED"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"PENDING_UPDATE"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"PENDING_CANCEL"})}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["An order is ",(0,n.jsx)(r.strong,{children:"open"})," when at one of the following (non-terminal) statuses:","\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"ACCEPTED"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"TRIGGERED"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"PENDING_UPDATE"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"PENDING_CANCEL"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"PARTIALLY_FILLED"})}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["An order is ",(0,n.jsx)(r.strong,{children:"closed"})," when at one of the following (terminal) statuses:","\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"DENIED"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"REJECTED"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"CANCELED"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"EXPIRED"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"FILLED"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"execution-instructions",children:"Execution instructions"}),"\n",(0,n.jsx)(r.p,{children:"Certain venues allow a trader to specify conditions and restrictions on\nhow an order will be processed and executed. The following is a brief\nsummary of the different execution instructions available."}),"\n",(0,n.jsx)(r.h3,{id:"time-in-force",children:"Time in force"}),"\n",(0,n.jsx)(r.p,{children:"The order's time in force specifies how long the order will remain open or active before any\nremaining quantity is canceled."}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"GTC"})," ",(0,n.jsx)(r.strong,{children:"(Good Till Cancel)"}),": The order remains active until canceled by the trader or the venue."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"IOC"})," ",(0,n.jsx)(r.strong,{children:"(Immediate or Cancel / Fill and Kill)"}),": The order executes immediately, with any unfilled portion canceled."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"FOK"})," ",(0,n.jsx)(r.strong,{children:"(Fill or Kill)"}),": The order executes immediately in full or not at all."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"GTD"})," ",(0,n.jsx)(r.strong,{children:"(Good Till Date)"}),": The order remains active until a specified expiration date and time."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"DAY"})," ",(0,n.jsx)(r.strong,{children:"(Good for session/day)"}),": The order remains active until the end of the current trading session."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"AT_THE_OPEN"})," ",(0,n.jsx)(r.strong,{children:"(OPG)"}),": The order is only active at the open of the trading session."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"AT_THE_CLOSE"}),": The order is only active at the close of the trading session."]}),"\n"]}),"\n",(0,n.jsx)(r.h3,{id:"expire-time",children:"Expire time"}),"\n",(0,n.jsxs)(r.p,{children:["This instruction is to be used in conjunction with the ",(0,n.jsx)(r.code,{children:"GTD"})," time in force to specify the time\nat which the order will expire and be removed from the venue's order book (or order management system)."]}),"\n",(0,n.jsx)(r.h3,{id:"post-only",children:"Post-only"}),"\n",(0,n.jsxs)(r.p,{children:["An order which is marked as ",(0,n.jsx)(r.code,{children:"post_only"})," will only ever participate in providing liquidity to the\nlimit order book, and never initiating a trade which takes liquidity as an aggressor. This option is\nimportant for market makers, or traders seeking to restrict the order to a liquidity ",(0,n.jsx)(r.em,{children:"maker"})," fee tier."]}),"\n",(0,n.jsx)(r.h3,{id:"reduce-only",children:"Reduce-only"}),"\n",(0,n.jsxs)(r.p,{children:["An order which is set as ",(0,n.jsx)(r.code,{children:"reduce_only"})," will only ever reduce an existing position on an instrument and\nnever open a new position (if already flat). The exact behavior of this instruction can vary between venues."]}),"\n",(0,n.jsxs)(r.p,{children:["However, the behavior in the Nautilus ",(0,n.jsx)(r.code,{children:"SimulatedExchange"})," is typical of a real venue."]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"Order will be canceled if the associated position is closed (becomes flat)."}),"\n",(0,n.jsx)(r.li,{children:"Order quantity will be reduced as the associated position's size decreases."}),"\n"]}),"\n",(0,n.jsx)(r.h3,{id:"display-quantity",children:"Display quantity"}),"\n",(0,n.jsxs)(r.p,{children:["The ",(0,n.jsx)(r.code,{children:"display_qty"})," specifies the portion of a ",(0,n.jsx)(r.em,{children:"Limit"})," order which is displayed on the limit order book.\nThese are also known as iceberg orders as there is a visible portion to be displayed, with more quantity which is hidden.\nSpecifying a display quantity of zero is also equivalent to setting an order as ",(0,n.jsx)(r.code,{children:"hidden"}),"."]}),"\n",(0,n.jsx)(r.h3,{id:"trigger-type",children:"Trigger type"}),"\n",(0,n.jsxs)(r.p,{children:["Also known as ",(0,n.jsx)(r.a,{href:"https://guides.interactivebrokers.com/tws/usersguidebook/configuretws/modify_the_stop_trigger_method.htm",children:"trigger method"}),"\nwhich is applicable to conditional trigger orders, specifying the method of triggering the stop price."]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"DEFAULT"}),": The default trigger type for the venue (typically ",(0,n.jsx)(r.code,{children:"LAST"})," or ",(0,n.jsx)(r.code,{children:"BID_ASK"}),")."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"LAST"}),": The trigger price will be based on the last traded price."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"BID_ASK"}),": The trigger price will be based on the ",(0,n.jsx)(r.code,{children:"BID"})," for buy orders and ",(0,n.jsx)(r.code,{children:"ASK"})," for sell orders."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"DOUBLE_LAST"}),": The trigger price will be based on the last two consecutive ",(0,n.jsx)(r.code,{children:"LAST"})," prices."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"DOUBLE_BID_ASK"}),": The trigger price will be based on the last two consecutive ",(0,n.jsx)(r.code,{children:"BID"})," or ",(0,n.jsx)(r.code,{children:"ASK"})," prices as applicable."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"LAST_OR_BID_ASK"}),": The trigger price will be based on the ",(0,n.jsx)(r.code,{children:"LAST"})," or ",(0,n.jsx)(r.code,{children:"BID"}),"/",(0,n.jsx)(r.code,{children:"ASK"}),"."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"MID_POINT"}),": The trigger price will be based on the mid-point between the ",(0,n.jsx)(r.code,{children:"BID"})," and ",(0,n.jsx)(r.code,{children:"ASK"}),"."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"MARK"}),": The trigger price will be based on the venue's mark price for the instrument."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"INDEX"}),": The trigger price will be based on the venue's index price for the instrument."]}),"\n"]}),"\n",(0,n.jsx)(r.h3,{id:"trigger-offset-type",children:"Trigger offset type"}),"\n",(0,n.jsxs)(r.p,{children:["Applicable to conditional trailing-stop trigger orders, specifies the method of triggering modification\nof the stop price based on the offset from the ",(0,n.jsx)(r.em,{children:"market"})," (bid, ask or last price as applicable)."]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"DEFAULT"}),": The default offset type for the venue (typically ",(0,n.jsx)(r.code,{children:"PRICE"}),")."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"PRICE"}),": The offset is based on a price difference."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"BASIS_POINTS"}),": The offset is based on a price percentage difference expressed in basis points (100bp = 1%)."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"TICKS"}),": The offset is based on a number of ticks."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"PRICE_TIER"}),": The offset is based on a venue-specific price tier."]}),"\n"]}),"\n",(0,n.jsx)(r.h3,{id:"contingent-orders",children:"Contingent orders"}),"\n",(0,n.jsxs)(r.p,{children:["More advanced relationships can be specified between orders.\nFor example, child orders can be assigned to trigger only when the parent is activated or filled, or orders can be\nlinked so that one cancels or reduces the quantity of another. See the ",(0,n.jsx)(r.a,{href:"#advanced-orders",children:"Advanced Orders"})," section for more details."]}),"\n",(0,n.jsx)(r.h2,{id:"order-factory",children:"Order factory"}),"\n",(0,n.jsxs)(r.p,{children:["The easiest way to create new orders is by using the built-in ",(0,n.jsx)(r.code,{children:"OrderFactory"}),", which is\nautomatically attached to every ",(0,n.jsx)(r.code,{children:"Strategy"})," class. This factory will take care\nof lower level details - such as ensuring the correct trader ID and strategy ID are assigned, generation\nof a necessary initialization ID and timestamp, and abstracts away parameters which don't necessarily\napply to the order type being created, or are only needed to specify more advanced execution instructions."]}),"\n",(0,n.jsxs)(r.p,{children:["This leaves the factory with simpler order creation methods to work with, all the\nexamples will leverage an ",(0,n.jsx)(r.code,{children:"OrderFactory"})," from within a ",(0,n.jsx)(r.code,{children:"Strategy"})," context."]}),"\n",(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsxs)(r.p,{children:["See the ",(0,n.jsx)(r.code,{children:"OrderFactory"})," ",(0,n.jsx)(r.a,{href:"/api_reference/common#class-orderfactory",children:"API Reference"})," for further details."]})}),"\n",(0,n.jsx)(r.h2,{id:"order-types",children:"Order types"}),"\n",(0,n.jsx)(r.p,{children:"The following describes the order types which are available for the platform with a code example.\nAny optional parameters will be clearly marked with a comment which includes the default value."}),"\n",(0,n.jsx)(r.h3,{id:"market",children:"Market"}),"\n",(0,n.jsxs)(r.p,{children:["A ",(0,n.jsx)(r.em,{children:"Market"})," order is an instruction by the trader to immediately trade\nthe given quantity at the best price available. You can also specify several\ntime in force options, and indicate whether this order is only intended to reduce\na position."]}),"\n",(0,n.jsxs)(r.p,{children:["In the following example we create a ",(0,n.jsx)(r.em,{children:"Market"})," order on the Interactive Brokers ",(0,n.jsx)(r.a,{href:"https://ibkr.info/node/1708",children:"IdealPro"})," Forex ECN\nto BUY 100,000 AUD using USD:"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:'from nautilus_trader.model.enums import OrderSide\nfrom nautilus_trader.model.enums import TimeInForce\nfrom nautilus_trader.model import InstrumentId\nfrom nautilus_trader.model import Quantity\nfrom nautilus_trader.model.orders import MarketOrder\n\norder: MarketOrder = self.order_factory.market(\n    instrument_id=InstrumentId.from_str("AUD/USD.IDEALPRO"),\n    order_side=OrderSide.BUY,\n    quantity=Quantity.from_int(100_000),\n    time_in_force=TimeInForce.IOC,  # <-- optional (default GTC)\n    reduce_only=False,  # <-- optional (default False)\n    tags=["ENTRY"],  # <-- optional (default None)\n)\n'})}),"\n",(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsxs)(r.p,{children:["See the ",(0,n.jsx)(r.code,{children:"MarketOrder"})," ",(0,n.jsx)(r.a,{href:"/api_reference/model/orders#class-marketorder",children:"API Reference"})," for further details."]})}),"\n",(0,n.jsx)(r.h3,{id:"limit",children:"Limit"}),"\n",(0,n.jsxs)(r.p,{children:["A ",(0,n.jsx)(r.em,{children:"Limit"})," order is placed on the limit order book at a specific price, and will only\nexecute at that price (or better)."]}),"\n",(0,n.jsxs)(r.p,{children:["In the following example we create a ",(0,n.jsx)(r.em,{children:"Limit"})," order on the Binance Futures Crypto exchange to SELL 20 ETHUSDT-PERP Perpetual Futures\ncontracts at a limit price of 5000 USDT, as a market maker."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:'from nautilus_trader.model.enums import OrderSide\nfrom nautilus_trader.model.enums import TimeInForce\nfrom nautilus_trader.model import InstrumentId\nfrom nautilus_trader.model import Price\nfrom nautilus_trader.model import Quantity\nfrom nautilus_trader.model.orders import LimitOrder\n\norder: LimitOrder = self.order_factory.limit(\n    instrument_id=InstrumentId.from_str("ETHUSDT-PERP.BINANCE"),\n    order_side=OrderSide.SELL,\n    quantity=Quantity.from_int(20),\n    price=Price.from_str("5_000.00"),\n    time_in_force=TimeInForce.GTC,  # <-- optional (default GTC)\n    expire_time=None,  # <-- optional (default None)\n    post_only=True,  # <-- optional (default False)\n    reduce_only=False,  # <-- optional (default False)\n    display_qty=None,  # <-- optional (default None which indicates full display)\n    tags=None,  # <-- optional (default None)\n)\n'})}),"\n",(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsxs)(r.p,{children:["See the ",(0,n.jsx)(r.code,{children:"LimitOrder"})," ",(0,n.jsx)(r.a,{href:"/api_reference/model/orders#class-limitorder",children:"API Reference"})," for further details."]})}),"\n",(0,n.jsx)(r.h3,{id:"stop-market",children:"Stop-Market"}),"\n",(0,n.jsxs)(r.p,{children:["A ",(0,n.jsx)(r.em,{children:"Stop-Market"})," order is a conditional order which once triggered, will immediately\nplace a ",(0,n.jsx)(r.em,{children:"Market"})," order. This order type is often used as a stop-loss to limit losses, either\nas a SELL order against LONG positions, or as a BUY order against SHORT positions."]}),"\n",(0,n.jsxs)(r.p,{children:["In the following example we create a ",(0,n.jsx)(r.em,{children:"Stop-Market"})," order on the Binance Spot/Margin exchange\nto SELL 1 BTC at a trigger price of 100,000 USDT, active until further notice:"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:'from nautilus_trader.model.enums import OrderSide\nfrom nautilus_trader.model.enums import TimeInForce\nfrom nautilus_trader.model.enums import TriggerType\nfrom nautilus_trader.model import InstrumentId\nfrom nautilus_trader.model import Price\nfrom nautilus_trader.model import Quantity\nfrom nautilus_trader.model.orders import StopMarketOrder\n\norder: StopMarketOrder = self.order_factory.stop_market(\n    instrument_id=InstrumentId.from_str("BTCUSDT.BINANCE"),\n    order_side=OrderSide.SELL,\n    quantity=Quantity.from_int(1),\n    trigger_price=Price.from_int(100_000),\n    trigger_type=TriggerType.LAST_PRICE,  # <-- optional (default DEFAULT)\n    time_in_force=TimeInForce.GTC,  # <-- optional (default GTC)\n    expire_time=None,  # <-- optional (default None)\n    reduce_only=False,  # <-- optional (default False)\n    tags=None,  # <-- optional (default None)\n)\n'})}),"\n",(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsxs)(r.p,{children:["See the ",(0,n.jsx)(r.code,{children:"StopMarketOrder"})," ",(0,n.jsx)(r.a,{href:"/api_reference/model/orders#class-stopmarketorder",children:"API Reference"})," for further details."]})}),"\n",(0,n.jsx)(r.h3,{id:"stop-limit",children:"Stop-Limit"}),"\n",(0,n.jsxs)(r.p,{children:["A ",(0,n.jsx)(r.em,{children:"Stop-Limit"})," order is a conditional order which once triggered will immediately place\na ",(0,n.jsx)(r.em,{children:"Limit"})," order at the specified price."]}),"\n",(0,n.jsxs)(r.p,{children:["In the following example we create a ",(0,n.jsx)(r.em,{children:"Stop-Limit"})," order on the Currenex FX ECN to BUY 50,000 GBP at a limit price of 1.3000 USD\nonce the market hits the trigger price of 1.30010 USD, active until midday 6th June, 2022 (UTC):"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:'import pandas as pd\nfrom nautilus_trader.model.enums import OrderSide\nfrom nautilus_trader.model.enums import TimeInForce\nfrom nautilus_trader.model.enums import TriggerType\nfrom nautilus_trader.model import InstrumentId\nfrom nautilus_trader.model import Price\nfrom nautilus_trader.model import Quantity\nfrom nautilus_trader.model.orders import StopLimitOrder\n\norder: StopLimitOrder = self.order_factory.stop_limit(\n    instrument_id=InstrumentId.from_str("GBP/USD.CURRENEX"),\n    order_side=OrderSide.BUY,\n    quantity=Quantity.from_int(50_000),\n    price=Price.from_str("1.30000"),\n    trigger_price=Price.from_str("1.30010"),\n    trigger_type=TriggerType.BID_ASK,  # <-- optional (default DEFAULT)\n    time_in_force=TimeInForce.GTD,  # <-- optional (default GTC)\n    expire_time=pd.Timestamp("2022-06-06T12:00"),\n    post_only=True,  # <-- optional (default False)\n    reduce_only=False,  # <-- optional (default False)\n    tags=None,  # <-- optional (default None)\n)\n'})}),"\n",(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsxs)(r.p,{children:["See the ",(0,n.jsx)(r.code,{children:"StopLimitOrder"})," ",(0,n.jsx)(r.a,{href:"/api_reference/model/orders#class-stoplimitorder",children:"API Reference"})," for further details."]})}),"\n",(0,n.jsx)(r.h3,{id:"market-to-limit",children:"Market-To-Limit"}),"\n",(0,n.jsxs)(r.p,{children:["A ",(0,n.jsx)(r.em,{children:"Market-To-Limit"})," order submits as a market order at the current best price.\nIf the order partially fills, the system cancels the remainder and resubmits it as a ",(0,n.jsx)(r.em,{children:"Limit"})," order at the executed price."]}),"\n",(0,n.jsxs)(r.p,{children:["In the following example we create a ",(0,n.jsx)(r.em,{children:"Market-To-Limit"})," order on the Interactive Brokers ",(0,n.jsx)(r.a,{href:"https://ibkr.info/node/1708",children:"IdealPro"})," Forex ECN\nto BUY 200,000 USD using JPY:"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:'from nautilus_trader.model.enums import OrderSide\nfrom nautilus_trader.model.enums import TimeInForce\nfrom nautilus_trader.model import InstrumentId\nfrom nautilus_trader.model import Quantity\nfrom nautilus_trader.model.orders import MarketToLimitOrder\n\norder: MarketToLimitOrder = self.order_factory.market_to_limit(\n    instrument_id=InstrumentId.from_str("USD/JPY.IDEALPRO"),\n    order_side=OrderSide.BUY,\n    quantity=Quantity.from_int(200_000),\n    time_in_force=TimeInForce.GTC,  # <-- optional (default GTC)\n    reduce_only=False,  # <-- optional (default False)\n    display_qty=None,  # <-- optional (default None which indicates full display)\n    tags=None,  # <-- optional (default None)\n)\n'})}),"\n",(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsxs)(r.p,{children:["See the ",(0,n.jsx)(r.code,{children:"MarketToLimitOrder"})," ",(0,n.jsx)(r.a,{href:"/api_reference/model/orders#class-markettolimitorder",children:"API Reference"})," for further details."]})}),"\n",(0,n.jsx)(r.h3,{id:"market-if-touched",children:"Market-If-Touched"}),"\n",(0,n.jsxs)(r.p,{children:["A ",(0,n.jsx)(r.em,{children:"Market-If-Touched"})," order is a conditional order which once triggered will immediately\nplace a ",(0,n.jsx)(r.em,{children:"Market"})," order. This order type is often used to enter a new position on a stop price,\nor to take profits for an existing position, either as a SELL order against LONG positions,\nor as a BUY order against SHORT positions."]}),"\n",(0,n.jsxs)(r.p,{children:["In the following example we create a ",(0,n.jsx)(r.em,{children:"Market-If-Touched"})," order on the Binance Futures exchange\nto SELL 10 ETHUSDT-PERP Perpetual Futures contracts at a trigger price of 10,000 USDT, active until further notice:"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:'from nautilus_trader.model.enums import OrderSide\nfrom nautilus_trader.model.enums import TimeInForce\nfrom nautilus_trader.model.enums import TriggerType\nfrom nautilus_trader.model import InstrumentId\nfrom nautilus_trader.model import Price\nfrom nautilus_trader.model import Quantity\nfrom nautilus_trader.model.orders import MarketIfTouchedOrder\n\norder: MarketIfTouchedOrder = self.order_factory.market_if_touched(\n    instrument_id=InstrumentId.from_str("ETHUSDT-PERP.BINANCE"),\n    order_side=OrderSide.SELL,\n    quantity=Quantity.from_int(10),\n    trigger_price=Price.from_str("10_000.00"),\n    trigger_type=TriggerType.LAST_PRICE,  # <-- optional (default DEFAULT)\n    time_in_force=TimeInForce.GTC,  # <-- optional (default GTC)\n    expire_time=None,  # <-- optional (default None)\n    reduce_only=False,  # <-- optional (default False)\n    tags=["ENTRY"],  # <-- optional (default None)\n)\n'})}),"\n",(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsxs)(r.p,{children:["See the ",(0,n.jsx)(r.code,{children:"MarketIfTouchedOrder"})," ",(0,n.jsx)(r.a,{href:"/api_reference/model/orders#class-marketiftouchedorder",children:"API Reference"})," for further details."]})}),"\n",(0,n.jsx)(r.h3,{id:"limit-if-touched",children:"Limit-If-Touched"}),"\n",(0,n.jsxs)(r.p,{children:["A ",(0,n.jsx)(r.em,{children:"Limit-If-Touched"})," order is a conditional order which once triggered will immediately place\na ",(0,n.jsx)(r.em,{children:"Limit"})," order at the specified price."]}),"\n",(0,n.jsxs)(r.p,{children:["In the following example we create a ",(0,n.jsx)(r.em,{children:"Limit-If-Touched"})," order to BUY 5 BTCUSDT-PERP Perpetual Futures contracts on the\nBinance Futures exchange at a limit price of 30,100 USDT (once the market hits the trigger price of 30,150 USDT),\nactive until midday 6th June, 2022 (UTC):"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:'import pandas as pd\nfrom nautilus_trader.model.enums import OrderSide\nfrom nautilus_trader.model.enums import TimeInForce\nfrom nautilus_trader.model.enums import TriggerType\nfrom nautilus_trader.model import InstrumentId\nfrom nautilus_trader.model import Price\nfrom nautilus_trader.model import Quantity\nfrom nautilus_trader.model.orders import LimitIfTouchedOrder\n\norder: LimitIfTouchedOrder = self.order_factory.limit_if_touched(\n    instrument_id=InstrumentId.from_str("BTCUSDT-PERP.BINANCE"),\n    order_side=OrderSide.BUY,\n    quantity=Quantity.from_int(5),\n    price=Price.from_str("30_100"),\n    trigger_price=Price.from_str("30_150"),\n    trigger_type=TriggerType.LAST_PRICE,  # <-- optional (default DEFAULT)\n    time_in_force=TimeInForce.GTD,  # <-- optional (default GTC)\n    expire_time=pd.Timestamp("2022-06-06T12:00"),\n    post_only=True,  # <-- optional (default False)\n    reduce_only=False,  # <-- optional (default False)\n    tags=["TAKE_PROFIT"],  # <-- optional (default None)\n)\n'})}),"\n",(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsxs)(r.p,{children:["See the ",(0,n.jsx)(r.code,{children:"LimitIfTouched"})," ",(0,n.jsx)(r.a,{href:"/api_reference/model/orders#class-limitiftouchedorder-1",children:"API Reference"})," for further details."]})}),"\n",(0,n.jsx)(r.h3,{id:"trailing-stop-market",children:"Trailing-Stop-Market"}),"\n",(0,n.jsxs)(r.p,{children:["A ",(0,n.jsx)(r.em,{children:"Trailing-Stop-Market"})," order is a conditional order which trails a stop trigger price\na fixed offset away from the defined market price. Once triggered a ",(0,n.jsx)(r.em,{children:"Market"})," order will\nimmediately be placed."]}),"\n",(0,n.jsxs)(r.p,{children:["In the following example we create a ",(0,n.jsx)(r.em,{children:"Trailing-Stop-Market"})," order on the Binance Futures exchange to SELL 10 ETHUSD-PERP COIN_M margined\nPerpetual Futures Contracts activating at a price of 5,000 USD, then trailing at an offset of 1% (in basis points) away from the current last traded price:"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:'import pandas as pd\nfrom decimal import Decimal\nfrom nautilus_trader.model.enums import OrderSide\nfrom nautilus_trader.model.enums import TimeInForce\nfrom nautilus_trader.model.enums import TriggerType\nfrom nautilus_trader.model.enums import TrailingOffsetType\nfrom nautilus_trader.model import InstrumentId\nfrom nautilus_trader.model import Price\nfrom nautilus_trader.model import Quantity\nfrom nautilus_trader.model.orders import TrailingStopMarketOrder\n\norder: TrailingStopMarketOrder = self.order_factory.trailing_stop_market(\n    instrument_id=InstrumentId.from_str("ETHUSD-PERP.BINANCE"),\n    order_side=OrderSide.SELL,\n    quantity=Quantity.from_int(10),\n    activation_price=Price.from_str("5_000"),\n    trigger_type=TriggerType.LAST_PRICE,  # <-- optional (default DEFAULT)\n    trailing_offset=Decimal(100),\n    trailing_offset_type=TrailingOffsetType.BASIS_POINTS,\n    time_in_force=TimeInForce.GTC,  # <-- optional (default GTC)\n    expire_time=None,  # <-- optional (default None)\n    reduce_only=True,  # <-- optional (default False)\n    tags=["TRAILING_STOP-1"],  # <-- optional (default None)\n)\n'})}),"\n",(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsxs)(r.p,{children:["See the ",(0,n.jsx)(r.code,{children:"TrailingStopMarketOrder"})," ",(0,n.jsx)(r.a,{href:"/api_reference/model/orders#class-trailingstopmarketorder-1",children:"API Reference"})," for further details."]})}),"\n",(0,n.jsx)(r.h3,{id:"trailing-stop-limit",children:"Trailing-Stop-Limit"}),"\n",(0,n.jsxs)(r.p,{children:["A ",(0,n.jsx)(r.em,{children:"Trailing-Stop-Limit"})," order is a conditional order which trails a stop trigger price\na fixed offset away from the defined market price. Once triggered a ",(0,n.jsx)(r.em,{children:"Limit"})," order will\nimmediately be placed at the defined price (which is also updated as the market moves until triggered)."]}),"\n",(0,n.jsxs)(r.p,{children:["In the following example we create a ",(0,n.jsx)(r.em,{children:"Trailing-Stop-Limit"})," order on the Currenex FX ECN to BUY 1,250,000 AUD using USD\nat a limit price of 0.71000 USD, activating at 0.72000 USD then trailing at a stop offset of 0.00100 USD\naway from the current ask price, active until further notice:"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:'import pandas as pd\nfrom decimal import Decimal\nfrom nautilus_trader.model.enums import OrderSide\nfrom nautilus_trader.model.enums import TimeInForce\nfrom nautilus_trader.model.enums import TriggerType\nfrom nautilus_trader.model.enums import TrailingOffsetType\nfrom nautilus_trader.model import InstrumentId\nfrom nautilus_trader.model import Price\nfrom nautilus_trader.model import Quantity\nfrom nautilus_trader.model.orders import TrailingStopLimitOrder\n\norder: TrailingStopLimitOrder = self.order_factory.trailing_stop_limit(\n    instrument_id=InstrumentId.from_str("AUD/USD.CURRENEX"),\n    order_side=OrderSide.BUY,\n    quantity=Quantity.from_int(1_250_000),\n    price=Price.from_str("0.71000"),\n    activation_price=Price.from_str("0.72000"),\n    trigger_type=TriggerType.BID_ASK,  # <-- optional (default DEFAULT)\n    limit_offset=Decimal("0.00050"),\n    trailing_offset=Decimal("0.00100"),\n    trailing_offset_type=TrailingOffsetType.PRICE,\n    time_in_force=TimeInForce.GTC,  # <-- optional (default GTC)\n    expire_time=None,  # <-- optional (default None)\n    reduce_only=True,  # <-- optional (default False)\n    tags=["TRAILING_STOP"],  # <-- optional (default None)\n)\n'})}),"\n",(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsxs)(r.p,{children:["See the ",(0,n.jsx)(r.code,{children:"TrailingStopLimitOrder"})," ",(0,n.jsx)(r.a,{href:"/api_reference/model/orders#class-trailingstoplimitorder-1",children:"API Reference"})," for further details."]})}),"\n",(0,n.jsx)(r.h2,{id:"advanced-orders",children:"Advanced orders"}),"\n",(0,n.jsx)(r.p,{children:"The following guide should be read in conjunction with the specific documentation from the broker or venue\ninvolving these order types, lists/groups and execution instructions (such as for Interactive Brokers)."}),"\n",(0,n.jsx)(r.h3,{id:"order-lists",children:"Order lists"}),"\n",(0,n.jsxs)(r.p,{children:["Combinations of contingent orders, or larger order bulks can be grouped together into a list with a common\n",(0,n.jsx)(r.code,{children:"order_list_id"}),". The orders contained in this list may or may not have a contingent relationship with\neach other, as this is specific to how the orders themselves are constructed, and the\nspecific venue they are being routed to."]}),"\n",(0,n.jsx)(r.h3,{id:"contingency-types",children:"Contingency types"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"OTO (One-Triggers-Other)"})," \u2013 a parent order that, once executed, automatically places one or more child orders."]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.em,{children:"Full-trigger model"}),": child order(s) are released ",(0,n.jsx)(r.strong,{children:"only after the parent is completely filled"}),". Common at most retail equity/option brokers (e.g. Schwab, Fidelity, TD Ameritrade) and many spot-crypto venues (Binance, Coinbase)."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.em,{children:"Partial-trigger model"}),": child order(s) are released ",(0,n.jsx)(r.strong,{children:"pro-rata to each partial fill"}),". Used by professional-grade platforms such as Interactive Brokers, most futures/FX OMSs, and Kraken Pro."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"OCO (One-Cancels-Other)"})," \u2013 two (or more) linked live orders where executing one cancels the remainder."]}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"OUO (One-Updates-Other)"})," \u2013 two (or more) linked live orders where executing one reduces the open quantity of the remainder."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsxs)(r.p,{children:["These contingency types relate to ContingencyType FIX tag ",(0,n.jsx)(r.a,{href:"https://www.onixs.biz/fix-dictionary/5.0.sp2/tagnum_1385.html",children:"1385"}),"."]})}),"\n",(0,n.jsx)(r.h4,{id:"one-triggers-other-oto",children:"One-Triggers-Other (OTO)"}),"\n",(0,n.jsx)(r.p,{children:"An OTO order involves two parts:"}),"\n",(0,n.jsxs)(r.ol,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Parent order"})," \u2013 submitted to the matching engine immediately."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Child order(s)"})," \u2013 held ",(0,n.jsx)(r.em,{children:"off-book"})," until the trigger condition is met."]}),"\n"]}),"\n",(0,n.jsx)(r.h5,{id:"trigger-models",children:"Trigger models"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Trigger model"}),(0,n.jsx)(r.th,{children:"When are child orders released?"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.strong,{children:"Full trigger"})}),(0,n.jsxs)(r.td,{children:["When the parent order\u2019s cumulative quantity equals its original quantity (i.e., it is ",(0,n.jsx)(r.em,{children:"fully"})," filled)."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.strong,{children:"Partial trigger"})}),(0,n.jsx)(r.td,{children:"Immediately upon each partial execution of the parent; the child\u2019s quantity matches the executed amount and is increased as further fills occur."})]})]})]}),"\n",(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsxs)(r.p,{children:["The default backtest venue for NautilusTrader uses a ",(0,n.jsx)(r.em,{children:"partial-trigger model"})," for OTO orders.\nA future update will add configuration to opt-in to a ",(0,n.jsx)(r.em,{children:"full-trigger model"}),"."]})}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Why the distinction matters"})," > ",(0,n.jsx)(r.em,{children:"Full trigger"})," leaves a risk window: any partially filled position is live without its protective exit until the remaining quantity fills.\n",(0,n.jsx)(r.em,{children:"Partial trigger"})," mitigates that risk by ensuring every executed lot instantly has its linked stop/limit, at the cost of creating more order traffic and updates."]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"An OTO order can use any supported asset type on the venue (e.g. stock entry with option hedge, futures entry with OCO bracket, crypto spot entry with TP/SL)."}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Venue / Adapter ID"}),(0,n.jsx)(r.th,{children:"Asset classes"}),(0,n.jsx)(r.th,{children:"Trigger rule for child"}),(0,n.jsx)(r.th,{children:"Practical notes"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:["Binance / Binance Futures (",(0,n.jsx)(r.code,{children:"BINANCE"}),")"]}),(0,n.jsx)(r.td,{children:"Spot, perpetual futures"}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.strong,{children:"Partial or full"})," \u2013 fires on first fill."]}),(0,n.jsx)(r.td,{children:"OTOCO/TP-SL children appear instantly; monitor margin usage."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:["Bybit Spot (",(0,n.jsx)(r.code,{children:"BYBIT"}),")"]}),(0,n.jsx)(r.td,{children:"Spot"}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.strong,{children:"Full"})," \u2013 child placed after completion."]}),(0,n.jsx)(r.td,{children:"TP-SL preset activates only once the limit order is fully filled."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:["Bybit Perps (",(0,n.jsx)(r.code,{children:"BYBIT"}),")"]}),(0,n.jsx)(r.td,{children:"Perpetual futures"}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.strong,{children:"Partial and full"})," \u2013 configurable."]}),(0,n.jsx)(r.td,{children:"\u201cPartial-position\u201d mode sizes TP-SL as fills arrive."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:["Kraken Futures (",(0,n.jsx)(r.code,{children:"KRAKEN"}),")"]}),(0,n.jsx)(r.td,{children:"Futures & perps"}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.strong,{children:"Partial and full"})," \u2013 automatic."]}),(0,n.jsx)(r.td,{children:"Child quantity matches every partial execution."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:["OKX (",(0,n.jsx)(r.code,{children:"OKX"}),")"]}),(0,n.jsx)(r.td,{children:"Spot, futures, options"}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.strong,{children:"Full"})," \u2013 attached stop waits for fill."]}),(0,n.jsx)(r.td,{children:"Position-level TP-SL can be added separately."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:["Interactive Brokers (",(0,n.jsx)(r.code,{children:"INTERACTIVE_BROKERS"}),")"]}),(0,n.jsx)(r.td,{children:"Stocks, options, FX, fut"}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.strong,{children:"Configurable"})," \u2013 OCA can pro-rate."]}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.code,{children:"OcaType 2/3"})," reduces remaining child quantities."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:["Coinbase International (",(0,n.jsx)(r.code,{children:"COINBASE_INTX"}),")"]}),(0,n.jsx)(r.td,{children:"Spot & perps"}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.strong,{children:"Full"})," \u2013 bracket added post-execution."]}),(0,n.jsx)(r.td,{children:"Entry plus bracket not simultaneous; added once position is live."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:["dYdX v4 (",(0,n.jsx)(r.code,{children:"DYDX"}),")"]}),(0,n.jsx)(r.td,{children:"Perpetual futures (DEX)"}),(0,n.jsx)(r.td,{children:"On-chain condition (size exact)."}),(0,n.jsx)(r.td,{children:"TP-SL triggers by oracle price; partial fill not applicable."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:["Polymarket (",(0,n.jsx)(r.code,{children:"POLYMARKET"}),")"]}),(0,n.jsx)(r.td,{children:"Prediction market (DEX)"}),(0,n.jsx)(r.td,{children:"N/A."}),(0,n.jsx)(r.td,{children:"Advanced contingency handled entirely at the strategy layer."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:["Betfair (",(0,n.jsx)(r.code,{children:"BETFAIR"}),")"]}),(0,n.jsx)(r.td,{children:"Sports betting"}),(0,n.jsx)(r.td,{children:"N/A."}),(0,n.jsx)(r.td,{children:"Advanced contingency handled entirely at the strategy layer."})]})]})]}),"\n",(0,n.jsx)(r.h4,{id:"one-cancels-other-oco",children:"One-Cancels-Other (OCO)"}),"\n",(0,n.jsxs)(r.p,{children:["An OCO order is a set of linked orders where the execution of ",(0,n.jsx)(r.strong,{children:"any"})," order (full ",(0,n.jsx)(r.em,{children:"or partial"}),") triggers a best-efforts cancellation of the others.\nBoth orders are live simultaneously; once one starts filling, the venue attempts to cancel the unexecuted portion of the remainder."]}),"\n",(0,n.jsx)(r.h4,{id:"one-updates-other-ouo",children:"One-Updates-Other (OUO)"}),"\n",(0,n.jsxs)(r.p,{children:["An OUO order is a set of linked orders where execution of one order causes an immediate ",(0,n.jsx)(r.em,{children:"reduction"})," of open quantity in the other order(s).\nBoth orders are live concurrently, and each partial execution proportionally updates the remaining quantity of its peer order on a best-effort basis."]}),"\n",(0,n.jsx)(r.h3,{id:"bracket-orders",children:"Bracket orders"}),"\n",(0,n.jsxs)(r.p,{children:["Bracket orders are an advanced order type that allows traders to set both take-profit and stop-loss\nlevels for a position simultaneously. This involves placing a parent order (entry order) and two child\norders: a take-profit ",(0,n.jsx)(r.code,{children:"LIMIT"})," order and a stop-loss ",(0,n.jsx)(r.code,{children:"STOP_MARKET"})," order. When the parent order executes,\nthe system places the child orders. The take-profit closes the position if the market moves favorably, and the stop-loss limits losses if it moves unfavorably."]}),"\n",(0,n.jsxs)(r.p,{children:["Bracket orders can be easily created using the ",(0,n.jsx)(r.a,{href:"/api_reference/common#class-orderfactory",children:"OrderFactory"}),",\nwhich supports various order types, parameters, and instructions."]}),"\n",(0,n.jsx)(r.admonition,{type:"warning",children:(0,n.jsx)(r.p,{children:"You should be aware of the margin requirements of positions, as bracketing a position will consume\nmore order margin."})}),"\n",(0,n.jsx)(r.h2,{id:"emulated-orders",children:"Emulated orders"}),"\n",(0,n.jsx)(r.h3,{id:"introduction",children:"Introduction"}),"\n",(0,n.jsx)(r.p,{children:"Before diving into the technical details, it's important to understand the fundamental purpose of emulated orders\nin NautilusTrader. At its core, emulation allows you to use certain order types even when your trading venue\ndoesn't natively support them."}),"\n",(0,n.jsxs)(r.p,{children:["This works by having Nautilus locally mimic the behavior of these order types (such as ",(0,n.jsx)(r.code,{children:"STOP_LIMIT"})," or ",(0,n.jsx)(r.code,{children:"TRAILING_STOP"})," orders)\nlocally, while using only simple ",(0,n.jsx)(r.code,{children:"MARKET"})," and ",(0,n.jsx)(r.code,{children:"LIMIT"})," orders for actual execution on the venue."]}),"\n",(0,n.jsxs)(r.p,{children:["When you create an emulated order, Nautilus continuously tracks a specific type of market price (specified by the\n",(0,n.jsx)(r.code,{children:"emulation_trigger"})," parameter) and based on the order type and conditions you've set, will automatically submit\nthe appropriate fundamental order (",(0,n.jsx)(r.code,{children:"MARKET"})," / ",(0,n.jsx)(r.code,{children:"LIMIT"}),") when the triggering condition is met."]}),"\n",(0,n.jsxs)(r.p,{children:["For example, if you create an emulated ",(0,n.jsx)(r.code,{children:"STOP_LIMIT"})," order, Nautilus will monitor the market price until your ",(0,n.jsx)(r.code,{children:"stop"}),"\nprice is reached, and then automatically submits a ",(0,n.jsx)(r.code,{children:"LIMIT"})," order to the venue."]}),"\n",(0,n.jsxs)(r.p,{children:["To perform emulation, Nautilus needs to know which ",(0,n.jsx)(r.strong,{children:"type of market price"})," it should monitor.\nBy default, it uses bid and ask prices (quotes), which is why you'll often see ",(0,n.jsx)(r.code,{children:"emulation_trigger=TriggerType.DEFAULT"}),"\nin examples (this is equivalent to using ",(0,n.jsx)(r.code,{children:"TriggerType.BID_ASK"}),"). However, Nautilus supports various other price types,\nthat can guide the emulation process."]}),"\n",(0,n.jsx)(r.h3,{id:"submitting-order-for-emulation",children:"Submitting order for emulation"}),"\n",(0,n.jsxs)(r.p,{children:["The only requirement to emulate an order is to pass a ",(0,n.jsx)(r.code,{children:"TriggerType"})," to the ",(0,n.jsx)(r.code,{children:"emulation_trigger"}),"\nparameter of an ",(0,n.jsx)(r.code,{children:"Order"})," constructor, or ",(0,n.jsx)(r.code,{children:"OrderFactory"})," creation method. The following\nemulation trigger types are currently supported:"]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"NO_TRIGGER"}),": disables local emulation completely and order is fully submitted to the venue."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"DEFAULT"}),": which is the same as ",(0,n.jsx)(r.code,{children:"BID_ASK"}),"."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"BID_ASK"}),": emulated using quotes to trigger."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"LAST"}),": emulated using trades to trigger."]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"The choice of trigger type determines how the order emulation will behave:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["For ",(0,n.jsx)(r.code,{children:"STOP"})," orders, the trigger price of order will be compared against the specified trigger type."]}),"\n",(0,n.jsxs)(r.li,{children:["For ",(0,n.jsx)(r.code,{children:"TRAILING_STOP"})," orders, the trailing offset will be updated based on the specified trigger type."]}),"\n",(0,n.jsxs)(r.li,{children:["For ",(0,n.jsx)(r.code,{children:"LIMIT"})," orders, the limit price of order will be compared against the specified trigger type."]}),"\n"]}),"\n",(0,n.jsxs)(r.p,{children:["Here are all the available values you can set into ",(0,n.jsx)(r.code,{children:"emulation_trigger"})," parameter and their purposes:"]}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{style:{textAlign:"left"},children:"Trigger Type"}),(0,n.jsx)(r.th,{style:{textAlign:"left"},children:"Description"}),(0,n.jsx)(r.th,{style:{textAlign:"left"},children:"Common use cases"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"NO_TRIGGER"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"Disables emulation completely. The order is sent directly to the venue without any local processing."}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"When you want to use the venue's native order handling, or for simple order types that don't need emulation."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"DEFAULT"})}),(0,n.jsxs)(r.td,{style:{textAlign:"left"},children:["Same as ",(0,n.jsx)(r.code,{children:"BID_ASK"}),". This is the standard choice for most emulated orders."]}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:'General-purpose emulation when you want to work with the "default" type of market prices.'})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"BID_ASK"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"Uses the best bid and ask prices (quotes) to guide emulation."}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"Stop orders, trailing stops, and other orders that should react to the current market spread."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"LAST_PRICE"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"Uses the price of the most recent trade to guide emulation."}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"Orders that should trigger based on actual executed trades rather than quotes."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"DOUBLE_LAST"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"Uses two consecutive last trade prices to confirm the trigger condition."}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"When you want additional confirmation of price movement before triggering."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"DOUBLE_BID_ASK"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"Uses two consecutive bid/ask price updates to confirm the trigger condition."}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"When you want extra confirmation of quote movements before triggering."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"LAST_OR_BID_ASK"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"Triggers on either last trade price or bid/ask prices."}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"When you want to be more responsive to any type of price movement."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"MID_POINT"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"Uses the middle point between the best bid and ask prices."}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"Orders that should trigger based on the theoretical fair price."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"MARK_PRICE"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"Uses the mark price (common in derivatives markets) for triggering."}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"Particularly useful for futures and perpetual contracts."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"INDEX_PRICE"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"Uses an underlying index price for triggering."}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"When trading derivatives that track an index."})]})]})]}),"\n",(0,n.jsx)(r.h3,{id:"technical-implementation",children:"Technical implementation"}),"\n",(0,n.jsxs)(r.p,{children:["The platform makes it possible to emulate most order types locally, regardless\nof whether the type is supported on a trading venue. The logic and code paths for\norder emulation are exactly the same for all ",(0,n.jsx)(r.a,{href:"/concepts/architecture#environment-contexts",children:"environment contexts"}),"\nand utilize a common ",(0,n.jsx)(r.code,{children:"OrderEmulator"})," component."]}),"\n",(0,n.jsx)(r.admonition,{type:"note",children:(0,n.jsx)(r.p,{children:"There is no limitation on the number of emulated orders you can have per running instance."})}),"\n",(0,n.jsx)(r.h3,{id:"life-cycle",children:"Life cycle"}),"\n",(0,n.jsx)(r.p,{children:"An emulated order will progress through the following stages:"}),"\n",(0,n.jsxs)(r.ol,{children:["\n",(0,n.jsxs)(r.li,{children:["Submitted by a ",(0,n.jsx)(r.code,{children:"Strategy"})," through the ",(0,n.jsx)(r.code,{children:"submit_order"})," method."]}),"\n",(0,n.jsxs)(r.li,{children:["Sent to the ",(0,n.jsx)(r.code,{children:"RiskEngine"})," for pre-trade risk checks (it may be denied at this point)."]}),"\n",(0,n.jsxs)(r.li,{children:["Sent to the ",(0,n.jsx)(r.code,{children:"OrderEmulator"})," where it is ",(0,n.jsx)(r.em,{children:"held"})," / emulated."]}),"\n",(0,n.jsxs)(r.li,{children:["Once triggered, emulated order is transformed into a ",(0,n.jsx)(r.code,{children:"MARKET"})," or ",(0,n.jsx)(r.code,{children:"LIMIT"})," order and released (submitted to the venue)."]}),"\n",(0,n.jsx)(r.li,{children:"Released order undergoes final risk checks before venue submission."}),"\n"]}),"\n",(0,n.jsx)(r.admonition,{type:"note",children:(0,n.jsxs)(r.p,{children:["Emulated orders are subject to the same risk controls as ",(0,n.jsx)(r.em,{children:"regular"})," orders, and can be\nmodified and canceled by a trading strategy in the normal way. They will also be included\nwhen canceling all orders."]})}),"\n",(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsx)(r.p,{children:"An emulated order will retain its original client order ID throughout its entire life cycle, making it easy to query\nthrough the cache."})}),"\n",(0,n.jsx)(r.h4,{id:"held-emulated-orders",children:"Held emulated orders"}),"\n",(0,n.jsxs)(r.p,{children:["The following will occur for an emulated order now ",(0,n.jsx)(r.em,{children:"held"})," by the ",(0,n.jsx)(r.code,{children:"OrderEmulator"})," component:"]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["The original ",(0,n.jsx)(r.code,{children:"SubmitOrder"})," command will be cached."]}),"\n",(0,n.jsxs)(r.li,{children:["The emulated order will be processed inside a local ",(0,n.jsx)(r.code,{children:"MatchingCore"})," component."]}),"\n",(0,n.jsxs)(r.li,{children:["The ",(0,n.jsx)(r.code,{children:"OrderEmulator"})," will subscribe to any needed market data (if not already) to update the matching core."]}),"\n",(0,n.jsxs)(r.li,{children:["The emulated order can be modified (by the trader) and updated (by the market) until ",(0,n.jsx)(r.em,{children:"released"})," or canceled."]}),"\n"]}),"\n",(0,n.jsx)(r.h4,{id:"released-emulated-orders",children:"Released emulated orders"}),"\n",(0,n.jsxs)(r.p,{children:["Once data arrival triggers / matches an emulated order locally, the following\n",(0,n.jsx)(r.em,{children:"release"})," actions will occur:"]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["The order will be transformed to either a ",(0,n.jsx)(r.code,{children:"MARKET"})," or ",(0,n.jsx)(r.code,{children:"LIMIT"})," order (see below table) through an additional ",(0,n.jsx)(r.code,{children:"OrderInitialized"})," event."]}),"\n",(0,n.jsxs)(r.li,{children:["The orders ",(0,n.jsx)(r.code,{children:"emulation_trigger"})," will be set to ",(0,n.jsx)(r.code,{children:"NONE"})," (it will no longer be treated as an emulated order by any component)."]}),"\n",(0,n.jsxs)(r.li,{children:["The order attached to the original ",(0,n.jsx)(r.code,{children:"SubmitOrder"})," command will be sent back to the ",(0,n.jsx)(r.code,{children:"RiskEngine"})," for additional checks since any modification/updates."]}),"\n",(0,n.jsxs)(r.li,{children:["If not denied, then the command will continue to the ",(0,n.jsx)(r.code,{children:"ExecutionEngine"})," and on to the trading venue via an ",(0,n.jsx)(r.code,{children:"ExecutionClient"})," as normal."]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"The following table lists which order types are possible to emulate, and\nwhich order type they transform to when being released for submission to the\ntrading venue."}),"\n",(0,n.jsx)(r.h3,{id:"order-types-which-can-be-emulated",children:"Order types, which can be emulated"}),"\n",(0,n.jsx)(r.p,{children:"The following table lists which order types are possible to emulate, and\nwhich order type they transform to when being released for submission to the\ntrading venue."}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{style:{textAlign:"left"},children:"Order type for emulation"}),(0,n.jsx)(r.th,{style:{textAlign:"left"},children:"Can emulate"}),(0,n.jsx)(r.th,{style:{textAlign:"left"},children:"Released type"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"MARKET"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"}}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"n/a"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"MARKET_TO_LIMIT"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"}}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"n/a"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"LIMIT"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"\u2713"}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"MARKET"})})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"STOP_MARKET"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"\u2713"}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"MARKET"})})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"STOP_LIMIT"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"\u2713"}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"LIMIT"})})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"MARKET_IF_TOUCHED"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"\u2713"}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"MARKET"})})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"LIMIT_IF_TOUCHED"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"\u2713"}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"LIMIT"})})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"TRAILING_STOP_MARKET"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"\u2713"}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"MARKET"})})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"TRAILING_STOP_LIMIT"})}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:"\u2713"}),(0,n.jsx)(r.td,{style:{textAlign:"left"},children:(0,n.jsx)(r.code,{children:"LIMIT"})})]})]})]}),"\n",(0,n.jsx)(r.h3,{id:"querying",children:"Querying"}),"\n",(0,n.jsx)(r.p,{children:"When writing trading strategies, it may be necessary to know the state of emulated orders in the system.\nThere are several ways to query emulation status:"}),"\n",(0,n.jsx)(r.h4,{id:"through-the-cache",children:"Through the Cache"}),"\n",(0,n.jsxs)(r.p,{children:["The following ",(0,n.jsx)(r.code,{children:"Cache"})," methods are available:"]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"self.cache.orders_emulated(...)"}),": Returns all currently emulated orders."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"self.cache.is_order_emulated(...)"}),": Checks if a specific order is emulated."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"self.cache.orders_emulated_count(...)"}),": Returns the count of emulated orders."]}),"\n"]}),"\n",(0,n.jsxs)(r.p,{children:["See the full ",(0,n.jsx)(r.a,{href:"../api_reference/cache",children:"API reference"})," for additional details."]}),"\n",(0,n.jsx)(r.h4,{id:"direct-order-queries",children:"Direct order queries"}),"\n",(0,n.jsx)(r.p,{children:"You can query order objects directly using:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"order.is_emulated"})}),"\n"]}),"\n",(0,n.jsxs)(r.p,{children:["If either of these return ",(0,n.jsx)(r.code,{children:"False"}),", then the order has been ",(0,n.jsx)(r.em,{children:"released"})," from the\n",(0,n.jsx)(r.code,{children:"OrderEmulator"}),", and so is no longer considered an emulated order (or was never an emulated order)."]}),"\n",(0,n.jsx)(r.admonition,{type:"warning",children:(0,n.jsxs)(r.p,{children:["It's not advised to hold a local reference to an emulated order, as the order\nobject will be transformed when/if the emulated order is ",(0,n.jsx)(r.em,{children:"released"}),". You should rely\non the ",(0,n.jsx)(r.code,{children:"Cache"})," which is made for the job."]})}),"\n",(0,n.jsx)(r.h3,{id:"persistence-and-recovery",children:"Persistence and recovery"}),"\n",(0,n.jsxs)(r.p,{children:["If a running system either crashes or shuts down with active emulated orders, then\nthey will be reloaded inside the ",(0,n.jsx)(r.code,{children:"OrderEmulator"})," from any configured cache database.\nThis ensures order state persistence across system restarts and recoveries."]}),"\n",(0,n.jsx)(r.h3,{id:"best-practices",children:"Best practices"}),"\n",(0,n.jsx)(r.p,{children:"When working with emulated orders, consider the following best practices:"}),"\n",(0,n.jsxs)(r.ol,{children:["\n",(0,n.jsxs)(r.li,{children:["Always use the ",(0,n.jsx)(r.code,{children:"Cache"})," for querying or tracking emulated orders rather than storing local references"]}),"\n",(0,n.jsx)(r.li,{children:"Be aware that emulated orders transform to different types when released"}),"\n",(0,n.jsx)(r.li,{children:"Remember that emulated orders undergo risk checks both at submission and release"}),"\n"]}),"\n",(0,n.jsx)(r.admonition,{type:"note",children:(0,n.jsx)(r.p,{children:"Order emulation allows you to use advanced order types even on venues that don't natively support them,\nmaking your trading strategies more portable across different venues."})})]})}function h(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},9087:(e,r,t)=>{t.d(r,{R:()=>d,x:()=>l});var i=t(6363);const n={},s=i.createContext(n);function d(e){const r=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),i.createElement(s.Provider,{value:r},e.children)}}}]);