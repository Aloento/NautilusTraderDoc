"use strict";(globalThis.webpackChunknautilus_trader=globalThis.webpackChunknautilus_trader||[]).push([[9908],{5893:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"integrations/tardis","title":"Tardis","description":"Tardis provides granular data for cryptocurrency markets including tick-by-tick order book snapshots & updates,","source":"@site/docs/integrations/tardis.md","sourceDirName":"integrations","slug":"/integrations/tardis","permalink":"/integrations/tardis","draft":false,"unlisted":false,"editUrl":"https://github.com/Aloento/NautilusTraderDoc/tree/main/docs/integrations/tardis.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Polymarket","permalink":"/integrations/polymarket"},"next":{"title":"\u6559\u7a0b","permalink":"/tutorials/"}}');var s=t(7259),r=t(9087);const l={},d="Tardis",a={},c=[{value:"Overview",id:"overview",level:2},{value:"Tardis documentation",id:"tardis-documentation",level:2},{value:"Supported formats",id:"supported-formats",level:2},{value:"Bars",id:"bars",level:2},{value:"Symbology and normalization",id:"symbology-and-normalization",level:2},{value:"Common rules",id:"common-rules",level:3},{value:"Exchange-specific normalizations",id:"exchange-specific-normalizations",level:3},{value:"Venues",id:"venues",level:2},{value:"Environment variables",id:"environment-variables",level:2},{value:"Running Tardis Machine historical replays",id:"running-tardis-machine-historical-replays",level:2},{value:"Procedure",id:"procedure",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Python Replays",id:"python-replays",level:3},{value:"Rust Replays",id:"rust-replays",level:3},{value:"Loading Tardis CSV data",id:"loading-tardis-csv-data",level:2},{value:"Loading CSV Data in Python",id:"loading-csv-data-in-python",level:3},{value:"Loading CSV Data in Rust",id:"loading-csv-data-in-rust",level:3},{value:"Streaming Tardis CSV Data",id:"streaming-tardis-csv-data",level:2},{value:"Streaming CSV Data in Python",id:"streaming-csv-data-in-python",level:3},{value:"Streaming Order Book Data",id:"streaming-order-book-data",level:3},{value:"Streaming Quote Data",id:"streaming-quote-data",level:3},{value:"Memory Efficiency Benefits",id:"memory-efficiency-benefits",level:3},{value:"Streaming CSV Data in Rust",id:"streaming-csv-data-in-rust",level:3},{value:"Requesting instrument definitions",id:"requesting-instrument-definitions",level:2},{value:"Requesting Instruments in Python",id:"requesting-instruments-in-python",level:3},{value:"Requesting Instruments in Rust",id:"requesting-instruments-in-rust",level:3},{value:"Instrument provider",id:"instrument-provider",level:2},{value:"Live data client",id:"live-data-client",level:2},{value:"Data WebSockets",id:"data-websockets",level:3},{value:"Limitations and considerations",id:"limitations-and-considerations",level:2}];function o(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"tardis",children:"Tardis"})}),"\n",(0,s.jsx)(n.p,{children:"Tardis provides granular data for cryptocurrency markets including tick-by-tick order book snapshots & updates,\ntrades, open interest, funding rates, options chains and liquidations data for leading crypto exchanges."}),"\n",(0,s.jsx)(n.p,{children:"NautilusTrader provides an integration with the Tardis API and data formats, enabling seamless access.\nThe capabilities of this adapter include:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"TardisCSVDataLoader"}),": Reads Tardis-format CSV files and converts them into Nautilus data, with support for both bulk loading and memory-efficient streaming."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"TardisMachineClient"}),": Supports live streaming and historical replay of data from the Tardis Machine WebSocket server - converting messages into Nautilus data."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"TardisHttpClient"}),": Requests instrument definition metadata from the Tardis HTTP API, parsing it into Nautilus instrument definitions."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"TardisDataClient"}),": Provides a live data client for subscribing to data streams from a Tardis Machine WebSocket server."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"TardisInstrumentProvider"}),": Provides instrument definitions from Tardis through the HTTP instrument metadata API."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Data pipeline functions"}),": Enables replay of historical data from Tardis Machine and writes it to the Nautilus Parquet format, including direct catalog integration for streamlined data management (see below)."]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["A Tardis API key is required for the adapter to operate correctly. See also ",(0,s.jsx)(n.a,{href:"#environment-variables",children:"environment variables"}),"."]})}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"This adapter is implemented in Rust, with optional Python bindings for ease of use in Python-based workflows.\nIt does not require any external Tardis client library dependencies."}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["There is ",(0,s.jsx)(n.strong,{children:"no"})," need for additional installation steps for ",(0,s.jsx)(n.code,{children:"tardis"}),".\nThe core components of the adapter are compiled as static libraries and automatically linked during the build process."]})}),"\n",(0,s.jsx)(n.h2,{id:"tardis-documentation",children:"Tardis documentation"}),"\n",(0,s.jsxs)(n.p,{children:["Tardis provides extensive user ",(0,s.jsx)(n.a,{href:"https://docs.tardis.dev/",children:"documentation"}),".\nWe recommend also referring to the Tardis documentation in conjunction with this NautilusTrader integration guide."]}),"\n",(0,s.jsx)(n.h2,{id:"supported-formats",children:"Supported formats"}),"\n",(0,s.jsxs)(n.p,{children:["Tardis provides ",(0,s.jsx)(n.em,{children:"normalized"})," market data\u2014a unified format consistent across all supported exchanges.\nThis normalization is highly valuable because it allows a single parser to handle data from any ",(0,s.jsx)(n.a,{href:"#venues",children:"Tardis-supported exchange"}),", reducing development time and complexity.\nAs a result, NautilusTrader will not support exchange-native market data formats, as it would be inefficient to implement separate parsers for each exchange at this stage."]}),"\n",(0,s.jsx)(n.p,{children:"The following normalized Tardis formats are supported by NautilusTrader:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Tardis format"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Nautilus data type"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.a,{href:"https://docs.tardis.dev/api/tardis-machine#book_change",children:"book_change"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"OrderBookDelta"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.a,{href:"https://docs.tardis.dev/api/tardis-machine#book_snapshot_-number_of_levels-_-snapshot_interval-time_unit",children:"book_snapshot_*"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"OrderBookDepth10"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.a,{href:"https://docs.tardis.dev/api/tardis-machine#book_snapshot_-number_of_levels-_-snapshot_interval-time_unit",children:"quote"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"QuoteTick"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.a,{href:"https://docs.tardis.dev/api/tardis-machine#book_snapshot_-number_of_levels-_-snapshot_interval-time_unit",children:"quote_10s"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"QuoteTick"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.a,{href:"https://docs.tardis.dev/api/tardis-machine#trade",children:"trade"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Trade"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.a,{href:"https://docs.tardis.dev/api/tardis-machine#trade_bar_-aggregation_interval-suffix",children:"trade_bar_*"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Bar"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.a,{href:"https://docs.tardis.dev/api/instruments-metadata-api",children:"instrument"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"CurrencyPair"}),", ",(0,s.jsx)(n.code,{children:"CryptoFuture"}),", ",(0,s.jsx)(n.code,{children:"CryptoPerpetual"}),", ",(0,s.jsx)(n.code,{children:"OptionContract"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.a,{href:"https://docs.tardis.dev/api/tardis-machine#derivative_ticker",children:"derivative_ticker"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.em,{children:"Not yet supported"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.a,{href:"https://docs.tardis.dev/api/tardis-machine#disconnect",children:"disconnect"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.em,{children:"Not applicable"})})]})]})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://docs.tardis.dev/api/tardis-machine#book_snapshot_-number_of_levels-_-snapshot_interval-time_unit",children:"quote"})," is an alias for ",(0,s.jsx)(n.a,{href:"https://docs.tardis.dev/api/tardis-machine#book_snapshot_-number_of_levels-_-snapshot_interval-time_unit",children:"book_snapshot_1_0ms"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://docs.tardis.dev/api/tardis-machine#book_snapshot_-number_of_levels-_-snapshot_interval-time_unit",children:"quote_10s"})," is an alias for ",(0,s.jsx)(n.a,{href:"https://docs.tardis.dev/api/tardis-machine#book_snapshot_-number_of_levels-_-snapshot_interval-time_unit",children:"book_snapshot_1_10s"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Both quote, quote_10s, and one-level snapshots are parsed as ",(0,s.jsx)(n.code,{children:"QuoteTick"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["See also the Tardis ",(0,s.jsx)(n.a,{href:"https://docs.tardis.dev/api/tardis-machine#normalized-market-data-apis",children:"normalized market data APIs"}),"."]})}),"\n",(0,s.jsx)(n.h2,{id:"bars",children:"Bars"}),"\n",(0,s.jsxs)(n.p,{children:["The adapter will automatically convert ",(0,s.jsx)(n.a,{href:"https://docs.tardis.dev/api/tardis-machine#trade_bar_-aggregation_interval-suffix",children:"Tardis trade bar interval and suffix"})," to Nautilus ",(0,s.jsx)(n.code,{children:"BarType"}),"s.\nThis includes the following:"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Tardis suffix"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Nautilus bar aggregation"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.a,{href:"https://docs.tardis.dev/api/tardis-machine#trade_bar_-aggregation_interval-suffix",children:"ms"})," - milliseconds"]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"MILLISECOND"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.a,{href:"https://docs.tardis.dev/api/tardis-machine#trade_bar_-aggregation_interval-suffix",children:"s"})," - seconds"]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"SECOND"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.a,{href:"https://docs.tardis.dev/api/tardis-machine#trade_bar_-aggregation_interval-suffix",children:"m"})," - minutes"]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"MINUTE"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.a,{href:"https://docs.tardis.dev/api/tardis-machine#trade_bar_-aggregation_interval-suffix",children:"ticks"})," - number of ticks"]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"TICK"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.a,{href:"https://docs.tardis.dev/api/tardis-machine#trade_bar_-aggregation_interval-suffix",children:"vol"})," - volume size"]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"VOLUME"})})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"symbology-and-normalization",children:"Symbology and normalization"}),"\n",(0,s.jsx)(n.p,{children:"The Tardis integration ensures seamless compatibility with NautilusTrader\u2019s crypto exchange adapters\nby consistently normalizing symbols. Typically, NautilusTrader uses the native exchange naming conventions\nprovided by Tardis. However, for certain exchanges, raw symbols are adjusted to adhere to the Nautilus symbology normalization, as outlined below:"}),"\n",(0,s.jsx)(n.h3,{id:"common-rules",children:"Common rules"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"All symbols are converted to uppercase."}),"\n",(0,s.jsxs)(n.li,{children:["Market type suffixes are appended with a hyphen for some exchanges (see ",(0,s.jsx)(n.a,{href:"#exchange-specific-normalizations",children:"exchange-specific normalizations"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["Original exchange symbols are preserved in the Nautilus instrument definitions ",(0,s.jsx)(n.code,{children:"raw_symbol"})," field."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"exchange-specific-normalizations",children:"Exchange-specific normalizations"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Binance"}),": Nautilus appends the suffix ",(0,s.jsx)(n.code,{children:"-PERP"})," to all perpetual symbols."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Bybit"}),": Nautilus uses specific product category suffixes, including ",(0,s.jsx)(n.code,{children:"-SPOT"}),", ",(0,s.jsx)(n.code,{children:"-LINEAR"}),", ",(0,s.jsx)(n.code,{children:"-INVERSE"}),", ",(0,s.jsx)(n.code,{children:"-OPTION"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"dYdX"}),": Nautilus appends the suffix ",(0,s.jsx)(n.code,{children:"-PERP"})," to all perpetual symbols."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Gate.io"}),": Nautilus appends the suffix ",(0,s.jsx)(n.code,{children:"-PERP"})," to all perpetual symbols."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"For detailed symbology documentation per exchange:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/integrations/binance#symbology",children:"Binance symbology"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/integrations/bybit#symbology",children:"Bybit symbology"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/integrations/dydx#symbology",children:"dYdX symbology"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"venues",children:"Venues"}),"\n",(0,s.jsx)(n.p,{children:"Some exchanges on Tardis are partitioned into multiple venues.\nThe table below outlines the mappings between Nautilus venues and corresponding Tardis exchanges, as well as the exchanges that Tardis supports:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Nautilus venue"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Tardis exchange(s)"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"ASCENDEX"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"ascendex"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"BINANCE"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"binance"}),", ",(0,s.jsx)(n.code,{children:"binance-dex"}),", ",(0,s.jsx)(n.code,{children:"binance-european-options"}),", ",(0,s.jsx)(n.code,{children:"binance-futures"}),", ",(0,s.jsx)(n.code,{children:"binance-jersey"}),", ",(0,s.jsx)(n.code,{children:"binance-options"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"BINANCE_DELIVERY"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"binance-delivery"})," (",(0,s.jsx)(n.em,{children:"COIN-margined contracts"}),")"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"BINANCE_US"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"binance-us"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"BITFINEX"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"bitfinex"}),", ",(0,s.jsx)(n.code,{children:"bitfinex-derivatives"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"BITFLYER"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"bitflyer"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"BITGET"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"bitget"}),", ",(0,s.jsx)(n.code,{children:"bitget-futures"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"BITMEX"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"bitmex"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"BITNOMIAL"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"bitnomial"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"BITSTAMP"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"bitstamp"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"BLOCKCHAIN_COM"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"blockchain-com"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"BYBIT"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"bybit"}),", ",(0,s.jsx)(n.code,{children:"bybit-options"}),", ",(0,s.jsx)(n.code,{children:"bybit-spot"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"COINBASE"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"coinbase"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"COINBASE_INTX"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"coinbase-international"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"COINFLEX"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"coinflex"})," (",(0,s.jsx)(n.em,{children:"for historical research"}),")"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"CRYPTO_COM"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"crypto-com"}),", ",(0,s.jsx)(n.code,{children:"crypto-com-derivatives"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"CRYPTOFACILITIES"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"cryptofacilities"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"DELTA"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"delta"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"DERIBIT"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"deribit"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"DYDX"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"dydx"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"DYDX_V4"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"dydx-v4"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"FTX"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"ftx"}),", ",(0,s.jsx)(n.code,{children:"ftx-us"})," (",(0,s.jsx)(n.em,{children:"historical research"}),")"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"GATE_IO"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"gate-io"}),", ",(0,s.jsx)(n.code,{children:"gate-io-futures"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"GEMINI"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"gemini"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"HITBTC"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"hitbtc"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"HUOBI"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"huobi"}),", ",(0,s.jsx)(n.code,{children:"huobi-dm"}),", ",(0,s.jsx)(n.code,{children:"huobi-dm-linear-swap"}),", ",(0,s.jsx)(n.code,{children:"huobi-dm-options"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"HUOBI_DELIVERY"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"huobi-dm-swap"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"HYPERLIQUID"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"hyperliquid"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"KRAKEN"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"kraken"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"KUCOIN"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"kucoin"}),", ",(0,s.jsx)(n.code,{children:"kucoin-futures"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"MANGO"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"mango"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"OKCOIN"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"okcoin"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"OKEX"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"okex"}),", ",(0,s.jsx)(n.code,{children:"okex-futures"}),", ",(0,s.jsx)(n.code,{children:"okex-options"}),", ",(0,s.jsx)(n.code,{children:"okex-spreads"}),", ",(0,s.jsx)(n.code,{children:"okex-swap"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"PHEMEX"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"phemex"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"POLONIEX"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"poloniex"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"SERUM"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"serum"})," (",(0,s.jsx)(n.em,{children:"historical research"}),")"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"STAR_ATLAS"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"star-atlas"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"UPBIT"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"upbit"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"WOO_X"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"woo-x"})})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"environment-variables",children:"Environment variables"}),"\n",(0,s.jsx)(n.p,{children:"The following environment variables are used by Tardis and NautilusTrader."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"TM_API_KEY"}),": API key for the Tardis Machine."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"TARDIS_API_KEY"}),": API key for NautilusTrader Tardis clients."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"TARDIS_MACHINE_WS_URL"})," (optional): WebSocket URL for the ",(0,s.jsx)(n.code,{children:"TardisMachineClient"})," in NautilusTrader."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"TARDIS_BASE_URL"})," (optional): Base URL for the ",(0,s.jsx)(n.code,{children:"TardisHttpClient"})," in NautilusTrader."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"NAUTILUS_PATH"})," (optional): Parent directory containing the ",(0,s.jsx)(n.code,{children:"catalog/"})," subdirectory for writing replay data in the Nautilus catalog format."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"running-tardis-machine-historical-replays",children:"Running Tardis Machine historical replays"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"https://docs.tardis.dev/api/tardis-machine",children:"Tardis Machine Server"})," is a locally runnable server\nwith built-in data caching, providing both tick-level historical and consolidated real-time cryptocurrency market data through HTTP and WebSocket APIs."]}),"\n",(0,s.jsx)(n.p,{children:"You can perform complete Tardis Machine WebSocket replays of historical data and output the results\nin Nautilus Parquet format, using either Python or Rust. Since the function is implemented in Rust,\nperformance is consistent whether run from Python or Rust, letting you choose based on your preferred workflow."}),"\n",(0,s.jsxs)(n.p,{children:["The end-to-end ",(0,s.jsx)(n.code,{children:"run_tardis_machine_replay"})," data pipeline function utilizes a specified ",(0,s.jsx)(n.a,{href:"#configuration",children:"configuration"})," to execute the following steps:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Connect to the Tardis Machine server."}),"\n",(0,s.jsxs)(n.li,{children:["Request and parse all necessary instrument definitions from the ",(0,s.jsx)(n.a,{href:"https://docs.tardis.dev/api/instruments-metadata-api",children:"Tardis instruments metadata"})," HTTP API."]}),"\n",(0,s.jsx)(n.li,{children:"Stream all requested instruments and data types for the specified time ranges from the Tardis Machine server."}),"\n",(0,s.jsxs)(n.li,{children:["For each instrument, data type and date (UTC), generate a ",(0,s.jsx)(n.code,{children:".parquet"})," file in the catalog-compatible format."]}),"\n",(0,s.jsx)(n.li,{children:"Disconnect from the Tardis Machine server, and terminate the program."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"File Naming Convention"})}),"\n",(0,s.jsx)(n.p,{children:"Files are written one per day, per instrument, using ISO 8601 timestamp ranges that clearly indicate the exact time span of data:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Format"}),": ",(0,s.jsx)(n.code,{children:"{start_timestamp}_{end_timestamp}.parquet"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Example"}),": ",(0,s.jsx)(n.code,{children:"2023-10-01T00-00-00-000000000Z_2023-10-01T23-59-59-999999999Z.parquet"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Structure"}),": ",(0,s.jsx)(n.code,{children:"data/{data_type}/{instrument_id}/{filename}"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This format is fully compatible with the Nautilus data catalog, enabling seamless querying, consolidation, and data management operations."}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"You can request data for the first day of each month without an API key. For all other dates, a Tardis Machine API key is required."})}),"\n",(0,s.jsxs)(n.p,{children:["This process is optimized for direct output to a Nautilus Parquet data catalog.\nEnsure that the ",(0,s.jsx)(n.code,{children:"NAUTILUS_PATH"})," environment variable is set to the parent directory containing the ",(0,s.jsx)(n.code,{children:"catalog/"})," subdirectory.\nParquet files will then be organized under ",(0,s.jsx)(n.code,{children:"<NAUTILUS_PATH>/catalog/data/"})," in the expected subdirectories corresponding to data type and instrument."]}),"\n",(0,s.jsxs)(n.p,{children:["If no ",(0,s.jsx)(n.code,{children:"output_path"})," is specified in the configuration file and the ",(0,s.jsx)(n.code,{children:"NAUTILUS_PATH"})," environment variable is unset, the system will default to the current working directory."]}),"\n",(0,s.jsx)(n.h3,{id:"procedure",children:"Procedure"}),"\n",(0,s.jsxs)(n.p,{children:["First, ensure the ",(0,s.jsx)(n.code,{children:"tardis-machine"})," docker container is running. Use the following command:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'docker run -p 8000:8000 -p 8001:8001 -e "TM_API_KEY=YOUR_API_KEY" -d tardisdev/tardis-machine\n'})}),"\n",(0,s.jsxs)(n.p,{children:["This command starts the ",(0,s.jsx)(n.code,{children:"tardis-machine"})," server without a persistent local cache, which may affect performance.\nFor improved performance, consider running the server with a persistent volume. Refer to the ",(0,s.jsx)(n.a,{href:"https://docs.tardis.dev/api/tardis-machine#docker",children:"Tardis Docker documentation"})," for details."]}),"\n",(0,s.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsx)(n.p,{children:"Next, ensure you have a configuration JSON file available."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Configuration JSON format"})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Field"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Default"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"tardis_ws_url"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"string (optional)"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The Tardis Machine WebSocket URL."}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["If ",(0,s.jsx)(n.code,{children:"null"})," then will use the ",(0,s.jsx)(n.code,{children:"TARDIS_MACHINE_WS_URL"})," env var."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"normalize_symbols"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"bool (optional)"}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["If Nautilus ",(0,s.jsx)(n.a,{href:"#symbology-and-normalization",children:"symbol normalization"})," should be applied."]}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["If ",(0,s.jsx)(n.code,{children:"null"})," then will default to ",(0,s.jsx)(n.code,{children:"true"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"output_path"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"string (optional)"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The output directory path to write Nautilus Parquet data to."}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["If ",(0,s.jsx)(n.code,{children:"null"})," then will use the ",(0,s.jsx)(n.code,{children:"NAUTILUS_PATH"})," env var, otherwise the current working directory."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"options"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"JSON[]"}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["An array of ",(0,s.jsx)(n.a,{href:"https://docs.tardis.dev/api/tardis-machine#replay-normalized-options",children:"ReplayNormalizedRequestOptions"})," objects."]}),(0,s.jsx)(n.td,{style:{textAlign:"left"}})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:["An example configuration file, ",(0,s.jsx)(n.code,{children:"example_config.json"}),", is available ",(0,s.jsx)(n.a,{href:"https://github.com/nautechsystems/nautilus_trader/blob/develop/crates/adapters/tardis/bin/example_config.json",children:"here"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "tardis_ws_url": "ws://localhost:8001",\n  "output_path": null,\n  "options": [\n    {\n      "exchange": "bitmex",\n      "symbols": [\n        "xbtusd",\n        "ethusd"\n      ],\n      "data_types": [\n        "trade"\n      ],\n      "from": "2019-10-01",\n      "to": "2019-10-02"\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"python-replays",children:"Python Replays"}),"\n",(0,s.jsx)(n.p,{children:"To run a replay in Python, create a script similar to the following:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import asyncio\n\nfrom nautilus_trader.core import nautilus_pyo3\n\n\nasync def run():\n    config_filepath = Path("YOUR_CONFIG_FILEPATH")\n    await nautilus_pyo3.run_tardis_machine_replay(str(config_filepath.resolve()))\n\n\nif __name__ == "__main__":\n    asyncio.run(run())\n'})}),"\n",(0,s.jsx)(n.h3,{id:"rust-replays",children:"Rust Replays"}),"\n",(0,s.jsx)(n.p,{children:"To run a replay in Rust, create a binary similar to the following:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'use std::{env, path::PathBuf};\n\nuse nautilus_adapters::tardis::replay::run_tardis_machine_replay_from_config;\n\n#[tokio::main]\nasync fn main() {\n    tracing_subscriber::fmt()\n        .with_max_level(tracing::Level::DEBUG)\n        .init();\n\n    let config_filepath = PathBuf::from("YOUR_CONFIG_FILEPATH");\n    run_tardis_machine_replay_from_config(&config_filepath).await;\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Make sure to enable Rust logging by exporting the following environment variable:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"export RUST_LOG=debug\n"})}),"\n",(0,s.jsxs)(n.p,{children:["A working example binary can be found ",(0,s.jsx)(n.a,{href:"https://github.com/nautechsystems/nautilus_trader/blob/develop/crates/adapters/tardis/bin/example_replay.rs",children:"here"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"This can also be run using cargo:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cargo run --bin tardis-replay <path_to_your_config>\n"})}),"\n",(0,s.jsx)(n.h2,{id:"loading-tardis-csv-data",children:"Loading Tardis CSV data"}),"\n",(0,s.jsx)(n.p,{children:"Tardis-format CSV data can be loaded using either Python or Rust. The loader reads the CSV text data\nfrom disk and parses it into Nautilus data. Since the loader is implemented in Rust, performance remains\nconsistent regardless of whether you run it from Python or Rust, allowing you to choose based on your preferred workflow."}),"\n",(0,s.jsxs)(n.p,{children:["You can also optionally specify a ",(0,s.jsx)(n.code,{children:"limit"})," parameter for the ",(0,s.jsx)(n.code,{children:"load_*"})," functions/methods to control the maximum number of rows loaded."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Loading mixed-instrument CSV files is challenging due to precision requirements and is not recommended. Use single-instrument CSV files instead (see below)."})}),"\n",(0,s.jsx)(n.h3,{id:"loading-csv-data-in-python",children:"Loading CSV Data in Python"}),"\n",(0,s.jsxs)(n.p,{children:["You can load Tardis-format CSV data in Python using the ",(0,s.jsx)(n.code,{children:"TardisCSVDataLoader"}),".\nWhen loading data, you can optionally specify the instrument ID but must specify both the price precision, and size precision.\nProviding the instrument ID improves loading performance, while specifying the precisions is required, as they cannot be inferred from the text data alone."]}),"\n",(0,s.jsx)(n.p,{children:"To load the data, create a script similar to the following:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from nautilus_trader.adapters.tardis import TardisCSVDataLoader\nfrom nautilus_trader.model import InstrumentId\n\n\ninstrument_id = InstrumentId.from_str("BTC-PERPETUAL.DERIBIT")\nloader = TardisCSVDataLoader(\n    price_precision=1,\n    size_precision=0,\n    instrument_id=instrument_id,\n)\n\nfilepath = Path("YOUR_CSV_DATA_PATH")\nlimit = None\n\ndeltas = loader.load_deltas(filepath, limit)\n'})}),"\n",(0,s.jsx)(n.h3,{id:"loading-csv-data-in-rust",children:"Loading CSV Data in Rust"}),"\n",(0,s.jsxs)(n.p,{children:["You can load Tardis-format CSV data in Rust using the loading functions found ",(0,s.jsx)(n.a,{href:"https://github.com/nautechsystems/nautilus_trader/blob/develop/crates/adapters/tardis/src/csv/mod.rs",children:"here"}),".\nWhen loading data, you can optionally specify the instrument ID but must specify both the price precision and size precision.\nProviding the instrument ID improves loading performance, while specifying the precisions is required, as they cannot be inferred from the text data alone."]}),"\n",(0,s.jsxs)(n.p,{children:["For a complete example, see the ",(0,s.jsx)(n.a,{href:"https://github.com/nautechsystems/nautilus_trader/blob/develop/crates/adapters/tardis/bin/example_csv.rs",children:"example binary here"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"To load the data, you can use code similar to the following:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'use std::path::Path;\n\nuse nautilus_adapters::tardis;\nuse nautilus_model::identifiers::InstrumentId;\n\n#[tokio::main]\nasync fn main() {\n    // You must specify precisions and the CSV filepath\n    let price_precision = 1;\n    let size_precision = 0;\n    let filepath = Path::new("YOUR_CSV_DATA_PATH");\n\n    // Optionally specify an instrument ID and/or limit\n    let instrument_id = InstrumentId::from("BTC-PERPETUAL.DERIBIT");\n    let limit = None;\n\n    // Consider propagating any parsing error depending on your workflow\n    let _deltas = tardis::csv::load_deltas(\n        filepath,\n        price_precision,\n        size_precision,\n        Some(instrument_id),\n        limit,\n    )\n    .unwrap();\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"streaming-tardis-csv-data",children:"Streaming Tardis CSV Data"}),"\n",(0,s.jsx)(n.p,{children:"For memory-efficient processing of large CSV files, the Tardis integration provides streaming capabilities that load and process data in configurable chunks rather than loading entire files into memory at once. This is particularly useful for processing multi-gigabyte CSV files without exhausting system memory."}),"\n",(0,s.jsx)(n.p,{children:"The streaming functionality is available for all supported Tardis data types:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Order book deltas (",(0,s.jsx)(n.code,{children:"stream_deltas"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["Quote ticks (",(0,s.jsx)(n.code,{children:"stream_quotes"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["Trade ticks (",(0,s.jsx)(n.code,{children:"stream_trades"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["Order book depth snapshots (",(0,s.jsx)(n.code,{children:"stream_depth10"}),")."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"streaming-csv-data-in-python",children:"Streaming CSV Data in Python"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"TardisCSVDataLoader"})," provides streaming methods that yield chunks of data as iterators. Each method accepts a ",(0,s.jsx)(n.code,{children:"chunk_size"})," parameter that controls how many records are read from the CSV file per chunk:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from nautilus_trader.adapters.tardis import TardisCSVDataLoader\nfrom nautilus_trader.model import InstrumentId\n\ninstrument_id = InstrumentId.from_str("BTC-PERPETUAL.DERIBIT")\nloader = TardisCSVDataLoader(\n    price_precision=1,\n    size_precision=0,\n    instrument_id=instrument_id,\n)\n\nfilepath = Path("large_trades_file.csv")\nchunk_size = 100_000  # Process 100,000 records per chunk (default)\n\n# Stream trade ticks in chunks\nfor chunk in loader.stream_trades(filepath, chunk_size):\n    print(f"Processing chunk with {len(chunk)} trades")\n    # Process each chunk - only this chunk is in memory\n    for trade in chunk:\n        # Your processing logic here\n        pass\n'})}),"\n",(0,s.jsx)(n.h3,{id:"streaming-order-book-data",children:"Streaming Order Book Data"}),"\n",(0,s.jsx)(n.p,{children:"For order book data, streaming is available for both deltas and depth snapshots:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# Stream order book deltas\nfor chunk in loader.stream_deltas(filepath):\n    print(f"Processing {len(chunk)} deltas")\n    # Process delta chunk\n\n# Stream depth10 snapshots (specify levels: 5 or 25)\nfor chunk in loader.stream_depth10(filepath, levels=5):\n    print(f"Processing {len(chunk)} depth snapshots")\n    # Process depth chunk\n'})}),"\n",(0,s.jsx)(n.h3,{id:"streaming-quote-data",children:"Streaming Quote Data"}),"\n",(0,s.jsx)(n.p,{children:"Quote data can be streamed similarly:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# Stream quote ticks\nfor chunk in loader.stream_quotes(filepath):\n    print(f"Processing {len(chunk)} quotes")\n    # Process quote chunk\n'})}),"\n",(0,s.jsx)(n.h3,{id:"memory-efficiency-benefits",children:"Memory Efficiency Benefits"}),"\n",(0,s.jsx)(n.p,{children:"The streaming approach provides significant memory efficiency advantages:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Controlled Memory Usage"}),": Only one chunk is loaded in memory at a time."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Scalable Processing"}),": Can process files larger than available RAM."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Configurable Chunk Sizes"}),": Tune ",(0,s.jsx)(n.code,{children:"chunk_size"})," based on your system's memory and performance requirements (default 100,000)."]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["When using streaming with precision inference (not providing explicit precisions), the inferred precision may differ from bulk loading the entire file.\nThis is because precision inference works within chunk boundaries, and different chunks may contain values with different precision requirements.\nFor deterministic precision behavior, provide explicit ",(0,s.jsx)(n.code,{children:"price_precision"})," and ",(0,s.jsx)(n.code,{children:"size_precision"})," parameters when calling streaming methods."]})}),"\n",(0,s.jsx)(n.h3,{id:"streaming-csv-data-in-rust",children:"Streaming CSV Data in Rust"}),"\n",(0,s.jsx)(n.p,{children:"The underlying streaming functionality is implemented in Rust and can be used directly:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'use std::path::Path;\nuse nautilus_adapters::tardis::csv::{stream_trades, stream_deltas};\nuse nautilus_model::identifiers::InstrumentId;\n\n#[tokio::main]\nasync fn main() {\n    let filepath = Path::new("large_trades_file.csv");\n    let chunk_size = 100_000;\n    let price_precision = Some(1);\n    let size_precision = Some(0);\n    let instrument_id = Some(InstrumentId::from("BTC-PERPETUAL.DERIBIT"));\n\n    // Stream trades in chunks\n    let stream = stream_trades(\n        filepath,\n        chunk_size,\n        price_precision,\n        size_precision,\n        instrument_id,\n    ).unwrap();\n\n    for chunk_result in stream {\n        match chunk_result {\n            Ok(chunk) => {\n                println!("Processing chunk with {} trades", chunk.len());\n                // Process chunk\n            }\n            Err(e) => {\n                eprintln!("Error processing chunk: {}", e);\n                break;\n            }\n        }\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"requesting-instrument-definitions",children:"Requesting instrument definitions"}),"\n",(0,s.jsxs)(n.p,{children:["You can request instrument definitions in both Python and Rust using the ",(0,s.jsx)(n.code,{children:"TardisHttpClient"}),".\nThis client interacts with the ",(0,s.jsx)(n.a,{href:"https://docs.tardis.dev/api/instruments-metadata-api",children:"Tardis instruments metadata API"})," to request and parse instrument metadata into Nautilus instruments."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"TardisHttpClient"})," constructor accepts optional parameters for ",(0,s.jsx)(n.code,{children:"api_key"}),", ",(0,s.jsx)(n.code,{children:"base_url"}),", and ",(0,s.jsx)(n.code,{children:"timeout_secs"})," (default is 60 seconds)."]}),"\n",(0,s.jsxs)(n.p,{children:["The client provides methods to retrieve either a specific ",(0,s.jsx)(n.code,{children:"instrument"}),", or all ",(0,s.jsx)(n.code,{children:"instruments"})," available on a particular exchange.\nEnsure that you use Tardis\u2019s lower-kebab casing convention when referring to a ",(0,s.jsx)(n.a,{href:"https://api.tardis.dev/v1/exchanges",children:"Tardis-supported exchange"}),"."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"A Tardis API key is required to access the instruments metadata API."})}),"\n",(0,s.jsx)(n.h3,{id:"requesting-instruments-in-python",children:"Requesting Instruments in Python"}),"\n",(0,s.jsx)(n.p,{children:"To request instrument definitions in Python, create a script similar to the following:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import asyncio\n\nfrom nautilus_trader.core import nautilus_pyo3\n\n\nasync def run():\n    http_client = nautilus_pyo3.TardisHttpClient()\n\n    instrument = await http_client.instrument("bitmex", "xbtusd")\n    print(f"Received: {instrument}")\n\n    instruments = await http_client.instruments("bitmex")\n    print(f"Received: {len(instruments)} instruments")\n\n\nif __name__ == "__main__":\n    asyncio.run(run())\n'})}),"\n",(0,s.jsx)(n.h3,{id:"requesting-instruments-in-rust",children:"Requesting Instruments in Rust"}),"\n",(0,s.jsxs)(n.p,{children:["To request instrument definitions in Rust, use code similar to the following.\nFor a complete example, see the ",(0,s.jsx)(n.a,{href:"https://github.com/nautechsystems/nautilus_trader/blob/develop/crates/adapters/tardis/bin/example_http.rs",children:"example binary here"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'use nautilus_adapters::tardis::{enums::Exchange, http::client::TardisHttpClient};\n\n#[tokio::main]\nasync fn main() {\n    tracing_subscriber::fmt()\n        .with_max_level(tracing::Level::DEBUG)\n        .init();\n\n    let client = TardisHttpClient::new(None, None, None).unwrap();\n\n    // Nautilus instrument definitions\n    let resp = client.instruments(Exchange::Bitmex).await;\n    println!("Received: {resp:?}");\n\n    let resp = client.instrument(Exchange::Bitmex, "ETHUSDT").await;\n    println!("Received: {resp:?}");\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"instrument-provider",children:"Instrument provider"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"TardisInstrumentProvider"})," requests and parses instrument definitions from Tardis through the HTTP instrument metadata API.\nSince there are multiple ",(0,s.jsx)(n.a,{href:"#venues",children:"Tardis-supported exchanges"}),", when loading all instruments,\nyou must filter for the desired venues using an ",(0,s.jsx)(n.code,{children:"InstrumentProviderConfig"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from nautilus_trader.config import InstrumentProviderConfig\n\n# See supported venues https://nautilustrader.io/docs/nightly/integrations/tardis#venues\nvenues = {"BINANCE", "BYBIT"}\nfilters = {"venues": frozenset(venues)}\ninstrument_provider_config = InstrumentProviderConfig(load_all=True, filters=filters)\n'})}),"\n",(0,s.jsx)(n.p,{children:"You can also load specific instrument definitions in the usual way:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from nautilus_trader.config import InstrumentProviderConfig\n\ninstrument_ids = [\n    InstrumentId.from_str(\"BTCUSDT-PERP.BINANCE\"),  # Will use the 'binance-futures' exchange\n    InstrumentId.from_str(\"BTCUSDT.BINANCE\"),  # Will use the 'binance' exchange\n]\ninstrument_provider_config = InstrumentProviderConfig(load_ids=instrument_ids)\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Instruments must be available in the cache for all subscriptions.\nFor simplicity, it\u2019s recommended to load all instruments for the venues you intend to subscribe to."})}),"\n",(0,s.jsx)(n.h2,{id:"live-data-client",children:"Live data client"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"TardisDataClient"})," enables integration of a Tardis Machine with a running NautilusTrader system.\nIt supports subscriptions to the following data types:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"OrderBookDelta"})," (L2 granularity from Tardis, includes all changes or full-depth snapshots)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"OrderBookDepth10"})," (L2 granularity from Tardis, provides snapshots up to 10 levels)"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"QuoteTick"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"TradeTick"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Bar"})," (trade bars with ",(0,s.jsx)(n.a,{href:"#bars",children:"Tardis-supported bar aggregations"}),")"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"data-websockets",children:"Data WebSockets"}),"\n",(0,s.jsxs)(n.p,{children:["The main ",(0,s.jsx)(n.code,{children:"TardisMachineClient"})," data WebSocket manages all stream subscriptions received during the initial connection phase,\nup to the duration specified by ",(0,s.jsx)(n.code,{children:"ws_connection_delay_secs"}),". For any additional subscriptions made\nafter this period, a new ",(0,s.jsx)(n.code,{children:"TardisMachineClient"})," is created. This approach optimizes performance by\nallowing the main WebSocket to handle potentially hundreds of subscriptions in a single stream if\nthey are provided at startup."]}),"\n",(0,s.jsxs)(n.p,{children:["When an initial subscription delay is set with ",(0,s.jsx)(n.code,{children:"ws_connection_delay_secs"}),", unsubscribing from any\nof these streams will not actually remove the subscription from the Tardis Machine stream, as selective\nunsubscription is not supported by Tardis. However, the component will still unsubscribe from message\nbus publishing as expected."]}),"\n",(0,s.jsx)(n.p,{children:"All subscriptions made after any initial delay will behave normally, fully unsubscribing from the\nTardis Machine stream when requested."}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["If you anticipate frequent subscription and unsubscription of data, it is recommended to set\n",(0,s.jsx)(n.code,{children:"ws_connection_delay_secs"})," to zero. This will create a new client for each initial subscription,\nallowing them to be later closed individually upon unsubscription."]})}),"\n",(0,s.jsx)(n.h2,{id:"limitations-and-considerations",children:"Limitations and considerations"}),"\n",(0,s.jsx)(n.p,{children:"The following limitations and considerations are currently known:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Historical data requests are not supported, as each would require a minimum one-day replay from the Tardis Machine, potentially with a filter. This approach is neither practical nor efficient."}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["For additional features or to contribute to the Tardis adapter, please see our\n",(0,s.jsx)(n.a,{href:"https://github.com/nautechsystems/nautilus_trader/blob/develop/CONTRIBUTING.md",children:"contributing guide"}),"."]})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},9087:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>d});var i=t(6363);const s={},r=i.createContext(s);function l(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);