"use strict";(globalThis.webpackChunknautilus_trader=globalThis.webpackChunknautilus_trader||[]).push([[4892],{9087:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>d});var i=t(6363);const o={},s=i.createContext(o);function r(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:n},e.children)}},9499:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"developer_guide/cython","title":"Cython","description":"Here you will find guidance and tips for working on NautilusTrader using the Cython language.","source":"@site/docs/developer_guide/cython.md","sourceDirName":"developer_guide","slug":"/developer_guide/cython","permalink":"/developer_guide/cython","draft":false,"unlisted":false,"editUrl":"https://github.com/Aloento/NautilusTraderDoc/tree/main/docs/developer_guide/cython.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Coding Standards","permalink":"/developer_guide/coding_standards"},"next":{"title":"Docs Style Guide","permalink":"/developer_guide/docs"}}');var o=t(7259),s=t(9087);const r={},d="Cython",a={},l=[{value:"What is Cython?",id:"what-is-cython",level:2},{value:"Function and method signatures",id:"function-and-method-signatures",level:2},{value:"Debugging",id:"debugging",level:2},{value:"PyCharm",id:"pycharm",level:3},{value:"Cython docs",id:"cython-docs",level:3},{value:"Tips",id:"tips",level:3}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"cython",children:"Cython"})}),"\n",(0,o.jsxs)(n.p,{children:["Here you will find guidance and tips for working on NautilusTrader using the Cython language.\nMore information on Cython syntax and conventions can be found by reading the ",(0,o.jsx)(n.a,{href:"https://cython.readthedocs.io/en/latest/index.html",children:"Cython docs"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"what-is-cython",children:"What is Cython?"}),"\n",(0,o.jsx)(n.p,{children:"Cython is a superset of Python that compiles to C extension modules, enabling optional static typing and optimized performance. NautilusTrader relies on Cython for its Python bindings and performance-critical components."}),"\n",(0,o.jsx)(n.h2,{id:"function-and-method-signatures",children:"Function and method signatures"}),"\n",(0,o.jsxs)(n.p,{children:["Ensure that all functions and methods returning ",(0,o.jsx)(n.code,{children:"void"})," or a primitive C type (such as ",(0,o.jsx)(n.code,{children:"bint"}),", ",(0,o.jsx)(n.code,{children:"int"}),", ",(0,o.jsx)(n.code,{children:"double"}),") include the ",(0,o.jsx)(n.code,{children:"except *"})," keyword in the signature."]}),"\n",(0,o.jsx)(n.p,{children:"This will ensure Python exceptions are not ignored, and instead are \u201cbubbled up\u201d to the caller as expected."}),"\n",(0,o.jsx)(n.h2,{id:"debugging",children:"Debugging"}),"\n",(0,o.jsx)(n.h3,{id:"pycharm",children:"PyCharm"}),"\n",(0,o.jsxs)(n.p,{children:["Improved debugging support for Cython has remained a highly up-voted PyCharm\nfeature for many years. Unfortunately, it's safe to assume that PyCharm will not\nbe receiving first class support for Cython debugging\n",(0,o.jsx)(n.a,{href:"https://youtrack.jetbrains.com/issue/PY-9476",children:"https://youtrack.jetbrains.com/issue/PY-9476"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"cython-docs",children:"Cython docs"}),"\n",(0,o.jsxs)(n.p,{children:["The following recommendations are contained in the Cython docs:\n",(0,o.jsx)(n.a,{href:"https://cython.readthedocs.io/en/latest/src/userguide/debugging.html",children:"https://cython.readthedocs.io/en/latest/src/userguide/debugging.html"})]}),"\n",(0,o.jsxs)(n.p,{children:["The summary is it involves manually running a specialized version of ",(0,o.jsx)(n.code,{children:"gdb"})," from the command line.\nWe don't recommend this workflow."]}),"\n",(0,o.jsx)(n.h3,{id:"tips",children:"Tips"}),"\n",(0,o.jsx)(n.p,{children:"When debugging and seeking to understand a complex system such as NautilusTrader, it can be\nquite helpful to step through the code with a debugger. With this not being available\nfor the Cython part of the codebase, there are a few things which can help:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Ensure ",(0,o.jsx)(n.code,{children:"LogLevel.DEBUG"})," is configured for the backtesting or live system you are debugging.\nThis is available on ",(0,o.jsx)(n.code,{children:'BacktestEngineConfig(logging=LoggingConfig(log_level="DEBUG"))'})," or ",(0,o.jsx)(n.code,{children:'TradingNodeConfig(logging=LoggingConfig=log_level="DEBUG"))'}),".\nWith ",(0,o.jsx)(n.code,{children:"DEBUG"})," mode active you will see more granular and verbose log traces which could be what you need to understand the flow."]}),"\n",(0,o.jsxs)(n.li,{children:["Beyond this, if you still require more granular visibility around a part of the system, we recommend some well-placed calls\nto a components logger (normally ",(0,o.jsx)(n.code,{children:'self._log.debug(f"HERE {variable}"'})," is enough)."]}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}}}]);