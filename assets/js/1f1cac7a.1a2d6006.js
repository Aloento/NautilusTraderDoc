"use strict";(globalThis.webpackChunknautilus_trader=globalThis.webpackChunknautilus_trader||[]).push([[1378],{6052:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"concepts/reports","title":"Reports","description":"We are currently working on this concept guide.","source":"@site/docs/concepts/reports.md","sourceDirName":"concepts","slug":"/concepts/reports","permalink":"/concepts/reports","draft":false,"unlisted":false,"editUrl":"https://github.com/Aloento/NautilusTraderDoc/tree/main/docs/concepts/reports.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Positions","permalink":"/concepts/positions"},"next":{"title":"Strategies","permalink":"/concepts/strategies"}}');var t=r(7259),i=r(9087);const o={},d="Reports",c={},l=[{value:"Overview",id:"overview",level:2},{value:"Available reports",id:"available-reports",level:2},{value:"Orders report",id:"orders-report",level:3},{value:"Order fills report",id:"order-fills-report",level:3},{value:"Fills report",id:"fills-report",level:3},{value:"Positions report",id:"positions-report",level:3},{value:"Account report",id:"account-report",level:3},{value:"PnL accounting considerations",id:"pnl-accounting-considerations",level:2},{value:"Position-based PnL",id:"position-based-pnl",level:3},{value:"Multi-currency accounting",id:"multi-currency-accounting",level:3},{value:"Snapshot considerations",id:"snapshot-considerations",level:3},{value:"Backtest post-run analysis",id:"backtest-post-run-analysis",level:2},{value:"Accessing backtest results",id:"accessing-backtest-results",level:3},{value:"Portfolio statistics",id:"portfolio-statistics",level:3},{value:"Visualization",id:"visualization",level:3},{value:"Report generation patterns",id:"report-generation-patterns",level:2},{value:"Live trading",id:"live-trading",level:3},{value:"Performance analysis",id:"performance-analysis",level:3},{value:"Integration with other components",id:"integration-with-other-components",level:2},{value:"Summary",id:"summary",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"reports",children:"Reports"})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"We are currently working on this concept guide."})}),"\n",(0,t.jsxs)(n.p,{children:["This guide explains the portfolio analysis and reporting capabilities provided by the ",(0,t.jsx)(n.code,{children:"ReportProvider"}),"\nclass, and how these reports are used for PnL accounting and backtest post-run analysis."]}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"ReportProvider"})," class in NautilusTrader generates structured analytical reports from\ntrading data, transforming raw orders, fills, positions, and account states into pandas DataFrames\nfor analysis and visualization. These reports are essential for understanding strategy performance,\nanalyzing execution quality, and ensuring accurate PnL accounting."]}),"\n",(0,t.jsx)(n.p,{children:"Reports can be generated using two approaches:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Trader helper methods"})," (recommended): Convenient methods like ",(0,t.jsx)(n.code,{children:"trader.generate_orders_report()"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ReportProvider directly"}),": For more control over data selection and filtering."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Reports provide consistent analytics across both backtesting and live trading environments,\nenabling reliable performance evaluation and strategy comparison."}),"\n",(0,t.jsx)(n.h2,{id:"available-reports",children:"Available reports"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"ReportProvider"})," class offers several static methods to generate reports from trading data.\nEach report returns a pandas DataFrame with specific columns and indexing for easy analysis."]}),"\n",(0,t.jsx)(n.h3,{id:"orders-report",children:"Orders report"}),"\n",(0,t.jsx)(n.p,{children:"Generates a comprehensive view of all orders:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# Using Trader helper method (recommended)\norders_report = trader.generate_orders_report()\n\n# Or using ReportProvider directly\nfrom nautilus_trader.analysis.reporter import ReportProvider\norders = cache.orders()\norders_report = ReportProvider.generate_orders_report(orders)\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.strong,{children:["Returns ",(0,t.jsx)(n.code,{children:"pd.DataFrame"})," with:"]})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Column"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"client_order_id"})}),(0,t.jsx)(n.td,{children:"Index - unique order identifier."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"instrument_id"})}),(0,t.jsx)(n.td,{children:"Trading instrument."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"strategy_id"})}),(0,t.jsx)(n.td,{children:"Strategy that created the order."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"side"})}),(0,t.jsx)(n.td,{children:"BUY or SELL."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"type"})}),(0,t.jsx)(n.td,{children:"MARKET, LIMIT, etc."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"status"})}),(0,t.jsx)(n.td,{children:"Current order status."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"quantity"})}),(0,t.jsx)(n.td,{children:"Original order quantity (string)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"filled_qty"})}),(0,t.jsx)(n.td,{children:"Amount filled (string)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"price"})}),(0,t.jsx)(n.td,{children:"Limit price (string if set)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"avg_px"})}),(0,t.jsx)(n.td,{children:"Average fill price (float if set)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ts_init"})}),(0,t.jsx)(n.td,{children:"Order initialization timestamp (nanoseconds)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ts_last"})}),(0,t.jsx)(n.td,{children:"Last update timestamp (nanoseconds)."})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"order-fills-report",children:"Order fills report"}),"\n",(0,t.jsx)(n.p,{children:"Provides a summary of filled orders (one row per order):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# Using Trader helper method (recommended)\nfills_report = trader.generate_order_fills_report()\n\n# Or using ReportProvider directly\norders = cache.orders()\nfills_report = ReportProvider.generate_order_fills_report(orders)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This report includes only orders with ",(0,t.jsx)(n.code,{children:"filled_qty > 0"})," and contains the same columns as the\norders report, but filtered to executed orders only. Note that ",(0,t.jsx)(n.code,{children:"ts_init"})," and ",(0,t.jsx)(n.code,{children:"ts_last"})," are\nconverted to datetime objects in this report for easier analysis."]}),"\n",(0,t.jsx)(n.h3,{id:"fills-report",children:"Fills report"}),"\n",(0,t.jsx)(n.p,{children:"Details individual fill events (one row per fill):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# Using Trader helper method (recommended)\nfills_report = trader.generate_fills_report()\n\n# Or using ReportProvider directly\norders = cache.orders()\nfills_report = ReportProvider.generate_fills_report(orders)\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.strong,{children:["Returns ",(0,t.jsx)(n.code,{children:"pd.DataFrame"})," with:"]})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Column"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"client_order_id"})}),(0,t.jsx)(n.td,{children:"Index - order identifier."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"trade_id"})}),(0,t.jsx)(n.td,{children:"Unique trade/fill identifier."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"venue_order_id"})}),(0,t.jsx)(n.td,{children:"Venue-assigned order ID."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"last_px"})}),(0,t.jsx)(n.td,{children:"Fill execution price (string)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"last_qty"})}),(0,t.jsx)(n.td,{children:"Fill execution quantity (string)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"liquidity_side"})}),(0,t.jsx)(n.td,{children:"MAKER or TAKER."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"commission"})}),(0,t.jsx)(n.td,{children:"Commission amount and currency."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ts_event"})}),(0,t.jsx)(n.td,{children:"Fill timestamp (datetime)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ts_init"})}),(0,t.jsx)(n.td,{children:"Initialization timestamp (datetime)."})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"positions-report",children:"Positions report"}),"\n",(0,t.jsx)(n.p,{children:"Comprehensive position analysis including snapshots:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# Using Trader helper method (recommended)\n# Automatically includes snapshots for NETTING OMS\npositions_report = trader.generate_positions_report()\n\n# Or using ReportProvider directly\npositions = cache.positions()\nsnapshots = cache.position_snapshots()  # For NETTING OMS\npositions_report = ReportProvider.generate_positions_report(\n    positions=positions,\n    snapshots=snapshots\n)\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.strong,{children:["Returns ",(0,t.jsx)(n.code,{children:"pd.DataFrame"})," with:"]})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Column"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"position_id"})}),(0,t.jsx)(n.td,{children:"Index - unique position identifier."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"instrument_id"})}),(0,t.jsx)(n.td,{children:"Trading instrument."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"strategy_id"})}),(0,t.jsx)(n.td,{children:"Strategy that managed the position."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"entry"})}),(0,t.jsx)(n.td,{children:"Entry side (BUY or SELL)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"side"})}),(0,t.jsx)(n.td,{children:"Position side (LONG, SHORT, or FLAT)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"quantity"})}),(0,t.jsx)(n.td,{children:"Position size."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"peak_qty"})}),(0,t.jsx)(n.td,{children:"Maximum size reached."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"avg_px_open"})}),(0,t.jsx)(n.td,{children:"Average entry price."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"avg_px_close"})}),(0,t.jsx)(n.td,{children:"Average exit price (if closed)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"realized_pnl"})}),(0,t.jsx)(n.td,{children:"Realized profit/loss."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"realized_return"})}),(0,t.jsx)(n.td,{children:"Return percentage."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ts_opened"})}),(0,t.jsx)(n.td,{children:"Opening timestamp (datetime)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ts_closed"})}),(0,t.jsx)(n.td,{children:"Closing timestamp (datetime or NA)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"duration_ns"})}),(0,t.jsx)(n.td,{children:"Position duration in nanoseconds."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"is_snapshot"})}),(0,t.jsx)(n.td,{children:"Whether this is a historical snapshot."})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"account-report",children:"Account report"}),"\n",(0,t.jsx)(n.p,{children:"Tracks account balance and margin changes over time:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# Using Trader helper method (recommended)\n# Requires venue parameter\nfrom nautilus_trader.model.identifiers import Venue\nvenue = Venue("BINANCE")\naccount_report = trader.generate_account_report(venue)\n\n# Or using ReportProvider directly\naccount = cache.account(account_id)\naccount_report = ReportProvider.generate_account_report(account)\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.strong,{children:["Returns ",(0,t.jsx)(n.code,{children:"pd.DataFrame"})," with:"]})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Column"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ts_event"})}),(0,t.jsx)(n.td,{children:"Index - timestamp of account state change."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"account_id"})}),(0,t.jsx)(n.td,{children:"Account identifier."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"account_type"})}),(0,t.jsx)(n.td,{children:"Type of account (e.g., SPOT, MARGIN)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"base_currency"})}),(0,t.jsx)(n.td,{children:"Base currency for the account."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"total"})}),(0,t.jsx)(n.td,{children:"Total balance amount."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"free"})}),(0,t.jsx)(n.td,{children:"Available balance."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"locked"})}),(0,t.jsx)(n.td,{children:"Balance locked in orders."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"currency"})}),(0,t.jsx)(n.td,{children:"Currency of the balance."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"reported"})}),(0,t.jsx)(n.td,{children:"Whether balance was reported by venue."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"margins"})}),(0,t.jsx)(n.td,{children:"Margin information (if applicable)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"info"})}),(0,t.jsx)(n.td,{children:"Additional venue-specific information."})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"pnl-accounting-considerations",children:"PnL accounting considerations"}),"\n",(0,t.jsx)(n.p,{children:"Accurate PnL accounting requires careful consideration of several factors:"}),"\n",(0,t.jsx)(n.h3,{id:"position-based-pnl",children:"Position-based PnL"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Realized PnL"}),": Calculated when positions are partially or fully closed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Unrealized PnL"}),": Marked-to-market using current prices."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Commission impact"}),": Only included when in settlement currency."]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["PnL calculations depend on the OMS type. In ",(0,t.jsx)(n.code,{children:"NETTING"})," mode, position snapshots\npreserve historical PnL when positions reopen. Always include snapshots in\nreports for accurate total PnL calculation."]})}),"\n",(0,t.jsx)(n.h3,{id:"multi-currency-accounting",children:"Multi-currency accounting"}),"\n",(0,t.jsx)(n.p,{children:"When dealing with multiple currencies:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Each position tracks PnL in its settlement currency."}),"\n",(0,t.jsx)(n.li,{children:"Portfolio aggregation requires currency conversion."}),"\n",(0,t.jsx)(n.li,{children:"Commission currencies may differ from settlement currency."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# Accessing PnL across positions\nfor position in positions:\n    realized = position.realized_pnl  # In settlement currency\n    unrealized = position.unrealized_pnl(last_price)\n\n    # Handle multi-currency aggregation (illustrative)\n    # Note: Currency conversion requires user-provided exchange rates\n    if position.settlement_currency != base_currency:\n        # Apply conversion rate from your data source\n        # rate = get_exchange_rate(position.settlement_currency, base_currency)\n        # realized_converted = realized.as_double() * rate\n        pass\n"})}),"\n",(0,t.jsx)(n.h3,{id:"snapshot-considerations",children:"Snapshot considerations"}),"\n",(0,t.jsxs)(n.p,{children:["For ",(0,t.jsx)(n.code,{children:"NETTING"})," OMS configurations:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"from nautilus_trader.model.objects import Money\n\n# Include snapshots for complete PnL (per currency)\npnl_by_currency = {}\n\n# Add PnL from current positions\nfor position in cache.positions(instrument_id=instrument_id):\n    if position.realized_pnl:\n        currency = position.realized_pnl.currency\n        if currency not in pnl_by_currency:\n            pnl_by_currency[currency] = 0.0\n        pnl_by_currency[currency] += position.realized_pnl.as_double()\n\n# Add PnL from historical snapshots\nfor snapshot in cache.position_snapshots(instrument_id=instrument_id):\n    if snapshot.realized_pnl:\n        currency = snapshot.realized_pnl.currency\n        if currency not in pnl_by_currency:\n            pnl_by_currency[currency] = 0.0\n        pnl_by_currency[currency] += snapshot.realized_pnl.as_double()\n\n# Create Money objects for each currency\ntotal_pnls = [Money(amount, currency) for currency, amount in pnl_by_currency.items()]\n"})}),"\n",(0,t.jsx)(n.h2,{id:"backtest-post-run-analysis",children:"Backtest post-run analysis"}),"\n",(0,t.jsx)(n.p,{children:"After a backtest completes, comprehensive analysis is available through various reports\nand the portfolio analyzer."}),"\n",(0,t.jsx)(n.h3,{id:"accessing-backtest-results",children:"Accessing backtest results"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# After backtest run\nengine.run(start=start_time, end=end_time)\n\n# Generate reports using Trader helper methods\norders_report = engine.trader.generate_orders_report()\npositions_report = engine.trader.generate_positions_report()\nfills_report = engine.trader.generate_fills_report()\n\n# Or access data directly for custom analysis\norders = engine.cache.orders()\npositions = engine.cache.positions()\nsnapshots = engine.cache.position_snapshots()\n"})}),"\n",(0,t.jsx)(n.h3,{id:"portfolio-statistics",children:"Portfolio statistics"}),"\n",(0,t.jsx)(n.p,{children:"The portfolio analyzer provides comprehensive performance metrics:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# Access portfolio analyzer\nportfolio = engine.portfolio\n\n# Get different categories of statistics\nstats_pnls = portfolio.analyzer.get_performance_stats_pnls()\nstats_returns = portfolio.analyzer.get_performance_stats_returns()\nstats_general = portfolio.analyzer.get_performance_stats_general()\n"})}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsxs)(n.p,{children:["For detailed information about available statistics and creating custom metrics,\nsee the ",(0,t.jsx)(n.a,{href:"/concepts/portfolio#portfolio-statistics",children:"Portfolio guide"}),". The Portfolio guide covers:"]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Built-in statistics categories (PnLs, returns, positions, orders based)."}),"\n",(0,t.jsxs)(n.li,{children:["Creating custom statistics with ",(0,t.jsx)(n.code,{children:"PortfolioStatistic"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Registering and using custom metrics."}),"\n"]})]}),"\n",(0,t.jsx)(n.h3,{id:"visualization",children:"Visualization"}),"\n",(0,t.jsx)(n.p,{children:"Reports integrate well with visualization tools:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import matplotlib.pyplot as plt\n\n# Plot cumulative returns\nreturns = positions_report["realized_return"].cumsum()\nreturns.plot(title="Cumulative Returns")\nplt.show()\n\n# Analyze fill quality (commission is a Money string e.g. "0.50 USD")\n# Extract numeric values and currency\nfills_report["commission_value"] = fills_report["commission"].str.split().str[0].astype(float)\nfills_report["commission_currency"] = fills_report["commission"].str.split().str[1]\n\n# Group by liquidity side and currency\ncommission_by_side = fills_report.groupby(["liquidity_side", "commission_currency"])["commission_value"].sum()\ncommission_by_side.plot.bar()\nplt.title("Commission by Liquidity Side and Currency")\nplt.show()\n'})}),"\n",(0,t.jsx)(n.h2,{id:"report-generation-patterns",children:"Report generation patterns"}),"\n",(0,t.jsx)(n.h3,{id:"live-trading",children:"Live trading"}),"\n",(0,t.jsx)(n.p,{children:"During live trading, generate reports periodically:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import pandas as pd\n\nclass ReportingActor(Actor):\n    def on_start(self):\n        # Schedule periodic reporting\n        self.clock.set_timer(\n            name="generate_reports",\n            interval=pd.Timedelta(minutes=30),\n            callback=self.generate_reports\n        )\n\n    def generate_reports(self, event):\n        # Generate and log reports\n        positions_report = self.trader.generate_positions_report()\n\n        # Save or transmit report\n        positions_report.to_csv(f"positions_{event.ts_event}.csv")\n'})}),"\n",(0,t.jsx)(n.h3,{id:"performance-analysis",children:"Performance analysis"}),"\n",(0,t.jsx)(n.p,{children:"For backtest analysis:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import pandas as pd\n\n# Run the backtest\nengine.run(start=start_time, end=end_time)\n\n# Collect comprehensive results\npositions_closed = engine.cache.positions_closed()\nstats_pnls = engine.portfolio.analyzer.get_performance_stats_pnls()\nstats_returns = engine.portfolio.analyzer.get_performance_stats_returns()\nstats_general = engine.portfolio.analyzer.get_performance_stats_general()\n\n# Create summary dictionary\nresults = {\n    "total_positions": len(positions_closed),\n    "pnl_total": stats_pnls.get("PnL (total)"),\n    "sharpe_ratio": stats_returns.get("Sharpe Ratio (252 days)"),\n    "profit_factor": stats_general.get("Profit Factor"),\n    "win_rate": stats_general.get("Win Rate"),\n}\n\n# Display results\nresults_df = pd.DataFrame([results])\nprint(results_df.T)  # Transpose for vertical display\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["Reports are generated from in-memory data structures. For large-scale analysis\nor long-running systems, consider persisting reports to a database for efficient\nquerying. See the ",(0,t.jsx)(n.a,{href:"/concepts/cache",children:"Cache guide"})," for persistence options."]})}),"\n",(0,t.jsx)(n.h2,{id:"integration-with-other-components",children:"Integration with other components"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"ReportProvider"})," works with several system components:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Cache"}),": Source of all trading data (orders, positions, accounts) for reports."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Portfolio"}),": Uses reports for performance analysis and metrics calculation."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"BacktestEngine"}),": Leverages reports for post-run analysis and visualization."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Position snapshots"}),": Critical for accurate PnL reporting in ",(0,t.jsx)(n.code,{children:"NETTING"})," OMS mode."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"ReportProvider"})," class offers a comprehensive suite of analytical reports for evaluating\ntrading performance. These reports transform raw trading data into structured DataFrames,\nenabling detailed analysis of orders, fills, positions, and account states. Understanding\nhow to generate and interpret these reports is essential for strategy development,\nperformance evaluation, and accurate PnL accounting, particularly when dealing with\nposition snapshots in ",(0,t.jsx)(n.code,{children:"NETTING"})," OMS configurations."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},9087:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>d});var s=r(6363);const t={},i=s.createContext(t);function o(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);